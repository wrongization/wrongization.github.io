<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background: transparent; background-color: transparent; color-scheme: light dark;" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1834px" height="765px" viewBox="-0.5 -0.5 1834 765" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36 Edg/134.0.0.0&quot; version=&quot;26.0.8&quot;&gt;&#10;  &lt;diagram id=&quot;bPbOfxsdm-82RC2zAUeF&quot; name=&quot;第 1 页&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;3076&quot; dy=&quot;1063&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;0&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; background=&quot;none&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;node1&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Derivative&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ derive(String): String&amp;lt;br/&amp;gt;+ deriveTerm(String): Poly&amp;lt;br/&amp;gt;+ getcontain(String): String&amp;lt;br/&amp;gt;+ deriveExpr(String): String&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Derivative(): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-100&quot; y=&quot;654&quot; width=&quot;197&quot; height=&quot;160&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node6&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Func&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ getreplace(String, String, String): String&amp;lt;br/&amp;gt;+ replace(String): String&amp;lt;br/&amp;gt;+ set(String, String, String): void&amp;lt;br/&amp;gt;+ getf(String, String, String, String): String&amp;lt;br/&amp;gt;+ getcontain(String): String&amp;lt;br/&amp;gt;+ getfnexpr(String): String&amp;lt;br/&amp;gt;+ getfuncx1(String): String&amp;lt;br/&amp;gt;+ easyfuncreplace(String): String&amp;lt;br/&amp;gt;+ getfuncx2(String): String&amp;lt;br/&amp;gt;+ funcreplace(String): String&amp;lt;br/&amp;gt;+ get(String, String, int): String&amp;lt;br/&amp;gt;+ getfnnoexpr(String): String&amp;lt;br/&amp;gt;+ getfuncnum(String): int&amp;lt;br/&amp;gt;+ easyfuncadd(String): void&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Func(String, String, String): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-142.5&quot; y=&quot;110&quot; width=&quot;272.5&quot; height=&quot;400&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-14&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;shadow=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node4&quot; target=&quot;node3&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-15&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node4&quot; target=&quot;node2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node4&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;MainClass&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ main(String[]): void&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ MainClass(): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-770&quot; y=&quot;400&quot; width=&quot;161&quot; height=&quot;95&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-24&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.75;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node7&quot; target=&quot;node1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node7&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Mono&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;- pow: BigInteger&amp;lt;br/&amp;gt;- xi: BigInteger&amp;lt;br/&amp;gt;- cos: HashMap&amp;amp;lt;String, BigInteger&amp;amp;gt;&amp;lt;br/&amp;gt;- sin: HashMap&amp;amp;lt;String, BigInteger&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt; pow: BigInteger&amp;lt;br/&amp;gt; xi: BigInteger&amp;lt;br/&amp;gt; cos: HashMap&amp;amp;lt;String, BigInteger&amp;amp;gt;&amp;lt;br/&amp;gt; sin: HashMap&amp;amp;lt;String, BigInteger&amp;amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ mul(Mono): Mono&amp;lt;br/&amp;gt;+ SincosTostring(): String&amp;lt;br/&amp;gt;+ setxi(BigInteger): void&amp;lt;br/&amp;gt;+ add(Mono): Mono&amp;lt;br/&amp;gt;+ derive(): Poly&amp;lt;br/&amp;gt;+ setpow(BigInteger): void&amp;lt;br/&amp;gt;+ equals(BigInteger, HashMap&amp;amp;lt;String, BigInteger&amp;amp;gt;, HashMap&amp;amp;lt;String, BigInteger&amp;amp;gt;): boolean&amp;lt;br/&amp;gt;+ PowToString(): String&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Mono(BigInteger, BigInteger, String, BigInteger, BigInteger): &amp;lt;br/&amp;gt;+ Mono(Mono): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;610&quot; y=&quot;221&quot; width=&quot;453&quot; height=&quot;500&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-17&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node0&quot; target=&quot;node2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node0&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;PatternString&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ PatternString(): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-540&quot; y=&quot;400&quot; width=&quot;260&quot; height=&quot;68&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-19&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node5&quot; target=&quot;node7&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-23&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node5&quot; target=&quot;node1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node5&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Poly&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt; sign: char&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Mul2(Poly): Poly&amp;lt;br/&amp;gt;+ put(BigInteger, BigInteger, char): void&amp;lt;br/&amp;gt;+ putFactorExpr(String): void&amp;lt;br/&amp;gt;+ put(BigInteger, BigInteger): void&amp;lt;br/&amp;gt;+ copy(Poly): void&amp;lt;br/&amp;gt;+ putNum(String): void&amp;lt;br/&amp;gt;+ getmonos(): ArrayList&amp;amp;lt;Mono&amp;amp;gt;&amp;lt;br/&amp;gt;+ put(BigInteger, BigInteger, String, BigInteger, BigInteger): void&amp;lt;br/&amp;gt;+ putSincos(String): void&amp;lt;br/&amp;gt;+ derive(): Poly&amp;lt;br/&amp;gt;+ Add(Poly): void&amp;lt;br/&amp;gt;+ put(BigInteger, BigInteger, String, BigInteger, String): void&amp;lt;br/&amp;gt;+ put(Mono): void&amp;lt;br/&amp;gt;+ put(String): void&amp;lt;br/&amp;gt;+ putexpr(String): void&amp;lt;br/&amp;gt;+ putPow(String): void&amp;lt;br/&amp;gt;+ putNormalTerm(String): void&amp;lt;br/&amp;gt;+ ToString(): String&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Poly(String): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;170&quot; y=&quot;230&quot; width=&quot;412&quot; height=&quot;491&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-16&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node3&quot; target=&quot;node2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-20&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node3&quot; target=&quot;node6&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-170&quot; y=&quot;228&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-170&quot; y=&quot;228&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node3&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Presimp&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ easyfuncreplace(String): String&amp;lt;br/&amp;gt;+ replaceend(String): String&amp;lt;br/&amp;gt;+ replaceforsimplify(String): String&amp;lt;br/&amp;gt;+ sincosfix(String): String&amp;lt;br/&amp;gt;+ replaceback(String): String&amp;lt;br/&amp;gt;+ funcreplace(String): String&amp;lt;br/&amp;gt;+ derivereplace(String): String&amp;lt;br/&amp;gt;+ sincosreplace(String): String&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Presimp(): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-540&quot; y=&quot;100&quot; width=&quot;260&quot; height=&quot;256&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-18&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.75;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node2&quot; target=&quot;node1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node2&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Simplify&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ termFixSign(String): String&amp;lt;br/&amp;gt;+ simplify(String): String&amp;lt;br/&amp;gt;+ sincosjudge(String): Boolean&amp;lt;br/&amp;gt;+ termGetSign(String): char&amp;lt;br/&amp;gt;+ simpExpr(String): String&amp;lt;br/&amp;gt;+ simpTerm(String): Poly&amp;lt;br/&amp;gt;+ sincosgetend(String): String&amp;lt;br/&amp;gt;+ sincosgetkuo(String): String&amp;lt;br/&amp;gt;+ termRemoveSign(String): String&amp;lt;br/&amp;gt;+ exprinjudge(String, int, int): Boolean&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ Simplify(): &amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-540&quot; y=&quot;510&quot; width=&quot;259&quot; height=&quot;304&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-21&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0.49;entryY=0.975;entryDx=0;entryDy=0;entryPerimeter=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node2&quot; target=&quot;node6&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;-217&quot; y=&quot;586&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-217&quot; y=&quot;580&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-9&quot; y=&quot;580&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-22&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=0.821;entryY=0.044;entryDx=0;entryDy=0;entryPerimeter=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node6&quot; target=&quot;node1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-25&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=0.963;entryY=0.29;entryDx=0;entryDy=0;entryPerimeter=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node5&quot; target=&quot;node2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;130&quot; y=&quot;600&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-70&quot; y=&quot;600&quot; /&gt;&#10;              &lt;mxPoint x=&quot;-70&quot; y=&quot;598&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-26&quot; value=&quot;利用多项式和最小项的方法求导&quot; style=&quot;text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;120&quot; y=&quot;784&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-27&quot; value=&quot;函数增加自定义简单函数&quot; style=&quot;text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-70&quot; y=&quot;50&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-29&quot; value=&quot;求导归入化简函数&quot; style=&quot;text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;-242.5&quot; y=&quot;681&quot; width=&quot;100&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;oUA6VUxq-n_FAqsUxxmb-31&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=0.983;entryY=0.866;entryDx=0;entryDy=0;entryPerimeter=0;dashed=1;strokeColor=#595959;align=center;verticalAlign=middle;fontFamily=Helvetica;fontSize=11;fontColor=default;labelBackgroundColor=default;startArrow=none;endArrow=openThin;endSize=12;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node1&quot; target=&quot;node2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="node1"><g><rect x="670" y="604" width="197" height="160" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 199px; height: 160px; padding-top: 604px; margin-left: 670px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 197px; height: 160px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>Derivative</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ derive(String): String<br />+ deriveTerm(String): Poly<br />+ getcontain(String): String<br />+ deriveExpr(String): String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Derivative(): </p></div></div></div></foreignObject><text x="670" y="618" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">Derivative...</text></switch></g></g></g><g data-cell-id="node6"><g><rect x="627.5" y="60" width="272.5" height="400" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 275px; height: 400px; padding-top: 60px; margin-left: 628px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 273px; height: 400px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>Func</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getreplace(String, String, String): String<br />+ replace(String): String<br />+ set(String, String, String): void<br />+ getf(String, String, String, String): String<br />+ getcontain(String): String<br />+ getfnexpr(String): String<br />+ getfuncx1(String): String<br />+ easyfuncreplace(String): String<br />+ getfuncx2(String): String<br />+ funcreplace(String): String<br />+ get(String, String, int): String<br />+ getfnnoexpr(String): String<br />+ getfuncnum(String): int<br />+ easyfuncadd(String): void</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Func(String, String, String): </p></div></div></div></foreignObject><text x="628" y="74" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">Func...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-14"><g style="filter: drop-shadow(light-dark(rgba(0, 0, 0, 0.25), rgba(237, 237, 237, 0.25)) 2px 3px 2px);"><path d="M 80.5 350 L 80.57 188 Q 80.57 178 90.57 178 L 227.76 178" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 215.88 182.33 L 228.88 178 L 215.88 173.67" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-15"><g><path d="M 80.5 445 L 80.57 602 Q 80.57 612 90.57 612 L 227.76 612" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 215.88 616.33 L 228.88 612 L 215.88 607.67" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="node4"><g><rect x="0" y="350" width="161" height="95" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 163px; height: 95px; padding-top: 350px; margin-left: 0px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 161px; height: 95px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>MainClass</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ main(String[]): void</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ MainClass(): </p></div></div></div></foreignObject><text x="0" y="364" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">MainClass...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-24"><g><path d="M 1606.5 671 L 1606.56 714 Q 1606.57 724 1596.57 724 L 869.24 724" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 881.12 719.67 L 868.12 724 L 881.12 728.33" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="node7"><g><rect x="1380" y="171" width="453" height="500" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 455px; height: 500px; padding-top: 171px; margin-left: 1380px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 453px; height: 500px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>Mono</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- pow: BigInteger<br />- xi: BigInteger<br />- cos: HashMap&lt;String, BigInteger&gt;<br />- sin: HashMap&lt;String, BigInteger&gt;</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;"> pow: BigInteger<br /> xi: BigInteger<br /> cos: HashMap&lt;String, BigInteger&gt;<br /> sin: HashMap&lt;String, BigInteger&gt;</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ mul(Mono): Mono<br />+ SincosTostring(): String<br />+ setxi(BigInteger): void<br />+ add(Mono): Mono<br />+ derive(): Poly<br />+ setpow(BigInteger): void<br />+ equals(BigInteger, HashMap&lt;String, BigInteger&gt;, HashMap&lt;String, BigInteger&gt;): boolean<br />+ PowToString(): String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Mono(BigInteger, BigInteger, String, BigInteger, BigInteger): <br />+ Mono(Mono): </p></div></div></div></foreignObject><text x="1380" y="185" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">Mono...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-17"><g><path d="M 360 418 L 359.53 457.76" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 355.34 445.83 L 359.51 458.88 L 364 445.93" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="node0"><g><rect x="230" y="350" width="260" height="68" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 262px; height: 68px; padding-top: 350px; margin-left: 230px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 260px; height: 68px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>PatternString</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ PatternString(): </p></div></div></div></foreignObject><text x="230" y="364" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">PatternString...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-19"><g><path d="M 1352 425.5 L 1362 425.46 Q 1372 425.43 1372 423.21 L 1372 422.11 Q 1372 421 1374.88 421 L 1377.76 421" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 1365.88 425.33 L 1378.88 421 L 1365.88 416.67" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-23"><g><path d="M 1146 671 L 1146 681 Q 1146 691 1136 691 L 918.43 691 Q 908.43 691 908.43 687.5 L 908.43 685.75 Q 908.43 684 898.43 684 L 869.24 684" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 881.12 679.67 L 868.12 684 L 881.12 688.33" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="node5"><g><rect x="940" y="180" width="412" height="491" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 414px; height: 491px; padding-top: 180px; margin-left: 940px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 412px; height: 491px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>Poly</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;"> sign: char</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Mul2(Poly): Poly<br />+ put(BigInteger, BigInteger, char): void<br />+ putFactorExpr(String): void<br />+ put(BigInteger, BigInteger): void<br />+ copy(Poly): void<br />+ putNum(String): void<br />+ getmonos(): ArrayList&lt;Mono&gt;<br />+ put(BigInteger, BigInteger, String, BigInteger, BigInteger): void<br />+ putSincos(String): void<br />+ derive(): Poly<br />+ Add(Poly): void<br />+ put(BigInteger, BigInteger, String, BigInteger, String): void<br />+ put(Mono): void<br />+ put(String): void<br />+ putexpr(String): void<br />+ putPow(String): void<br />+ putNormalTerm(String): void<br />+ ToString(): String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Poly(String): </p></div></div></div></foreignObject><text x="940" y="194" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">Poly...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-16"><g><path d="M 230 242 L 210 242 Q 200 242 200 252 L 200 526 Q 200 536 210 536 L 227.76 536" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 215.88 540.33 L 228.88 536 L 215.88 531.67" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-20"><g><path d="M 490 178 L 590 178 Q 600 178 610 178 L 625.26 178" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 613.38 182.33 L 626.38 178 L 613.38 173.67" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="node3"><g><rect x="230" y="50" width="260" height="256" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 262px; height: 256px; padding-top: 50px; margin-left: 230px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 260px; height: 256px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>Presimp</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ easyfuncreplace(String): String<br />+ replaceend(String): String<br />+ replaceforsimplify(String): String<br />+ sincosfix(String): String<br />+ replaceback(String): String<br />+ funcreplace(String): String<br />+ derivereplace(String): String<br />+ sincosreplace(String): String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Presimp(): </p></div></div></div></foreignObject><text x="230" y="64" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">Presimp...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-18"><g><path d="M 489 688 L 564.57 688 Q 574.57 688 574.57 686 L 574.57 685 Q 574.57 684 584.57 684 L 667.76 684" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 655.88 688.33 L 668.88 684 L 655.88 679.67" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="node2"><g><rect x="230" y="460" width="259" height="304" fill="#ffffff" stroke="#000000" pointer-events="all" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 261px; height: 304px; padding-top: 460px; margin-left: 230px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; width: 259px; height: 304px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 14px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap; "><p style="margin:0px;margin-top:4px;text-align:center;"><b>Simplify</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ termFixSign(String): String<br />+ simplify(String): String<br />+ sincosjudge(String): Boolean<br />+ termGetSign(String): char<br />+ simpExpr(String): String<br />+ simpTerm(String): Poly<br />+ sincosgetend(String): String<br />+ sincosgetkuo(String): String<br />+ termRemoveSign(String): String<br />+ exprinjudge(String, int, int): Boolean</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Simplify(): </p></div></div></div></foreignObject><text x="230" y="474" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="14px">Simplify...</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-21"><g><path d="M 489 536 L 543 536 Q 553 536 553 533 L 553 531.5 Q 553 530 563 530 L 751 530 Q 761 530 761 520 L 761.02 452.24" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 765.35 464.12 L 761.02 451.12 L 756.69 464.12" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-22"><g><path d="M 831.88 460 L 831.86 517 Q 831.86 527 831.84 537 L 831.74 608.8" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 827.42 596.92 L 831.74 609.92 L 836.09 596.93" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-25"><g><path d="M 940 548.25 L 910 548.28 Q 900 548.29 900 549.14 L 900 549.57 Q 900 550 890 550 L 710 550 Q 700 550 700 549.07 L 700 548.61 Q 700 548.14 690 548.14 L 481.65 548.16" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 493.53 543.83 L 480.53 548.16 L 493.54 552.49" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-26"><g><rect x="890" y="734" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 749px; margin-left: 891px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; background-color: #ffffff; "><div style="display: inline-block; font-size: 11px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); white-space: normal; word-wrap: normal; ">利用多项式和最小项的方法求导</div></div></div></foreignObject><text x="940" y="752" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="11px" text-anchor="middle">利用多项式和最小项的方法求导</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-27"><g><rect x="700" y="0" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 15px; margin-left: 701px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; background-color: #ffffff; "><div style="display: inline-block; font-size: 11px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); white-space: normal; word-wrap: normal; ">函数增加自定义简单函数</div></div></div></foreignObject><text x="750" y="18" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="11px" text-anchor="middle">函数增加自定义简单函数</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-29"><g><rect x="527.5" y="631" width="100" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 646px; margin-left: 529px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; background-color: #ffffff; "><div style="display: inline-block; font-size: 11px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); white-space: normal; word-wrap: normal; ">求导归入化简函数</div></div></div></foreignObject><text x="578" y="649" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="11px" text-anchor="middle">求导归入化简函数</text></switch></g></g></g><g data-cell-id="oUA6VUxq-n_FAqsUxxmb-31"><g><path d="M 670 724 L 594.57 724 Q 584.57 724 574.57 723.93 L 486.83 723.28" fill="none" stroke="#595959" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/><path d="M 498.75 719.03 L 485.71 723.27 L 498.68 727.7" fill="none" stroke="#595959" stroke-miterlimit="10" pointer-events="all" style="stroke: light-dark(rgb(89, 89, 89), rgb(161, 161, 161));"/></g></g></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>