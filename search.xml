<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>P5-verilog五层流水线CPU（简化指令）</title>
      <link href="/2024/11/11/p5cpu.html"/>
      <url>/2024/11/11/p5cpu.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="verilog五层流水线CPU（简化指令）"><a href="#verilog五层流水线CPU（简化指令）" class="headerlink" title="verilog五层流水线CPU（简化指令）"></a>verilog五层流水线CPU（简化指令）</h1><h1 id="模块设计"><a href="#模块设计" class="headerlink" title="模块设计"></a>模块设计</h1><p><strong>整体视图：</strong></p><img src="/2024/11/11/p5cpu/0f65a4bc94ee7ee2756e2921d586408-1731308842899-1.png" class="" title="0f65a4bc94ee7ee2756e2921d586408"><h3 id="1-GRF-寄存器堆"><a href="#1-GRF-寄存器堆" class="headerlink" title="1. GRF(寄存器堆)"></a>1. GRF(寄存器堆)</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>WE</td><td>Input</td><td>1</td><td>使能信号</td></tr><tr><td>PC</td><td>Input</td><td>31:0</td><td>pc</td></tr><tr><td>A1</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口1</td></tr><tr><td>A2</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口2</td></tr><tr><td>A3</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口3，写寄存器地址</td></tr><tr><td>EXTRA</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口EX，读寄存器地址</td></tr><tr><td>WD</td><td>Input</td><td>31:0</td><td>数据输入端口，输入一个32位数据，存入编码为A3的寄存器中</td></tr><tr><td>RD1</td><td>Output</td><td>31:0</td><td>输出编码为A1中输入的寄存器中的值</td></tr><tr><td>RD2</td><td>Output</td><td>31:0</td><td>输出编码为A2中输入的寄存器中的值</td></tr><tr><td>RDEXTRA</td><td>Output</td><td>31:0</td><td>输出编码为EXTRA中输入的寄存器中的值</td></tr></tbody></table></div><p><strong>初始化!!</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> GRF (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> WE,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] A1,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] A2,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] A3,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] EXTRA,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] WD,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] RD1,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] RD2,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] RDEXTRA</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] registers[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">integer</span> i;</span><br><span class="line">    <span class="keyword">assign</span> RD1 = (A1 === <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : ((A1 === A3) &amp;&amp; WE) ? WD : registers[A1];</span><br><span class="line">    <span class="keyword">assign</span> RD2 = (A2 === <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : ((A2 === A3) &amp;&amp; WE) ? WD : registers[A2];</span><br><span class="line">    <span class="keyword">assign</span> RDEXTRA = (EXTRA === <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : ((EXTRA === A3) &amp;&amp; WE) ? WD : registers[EXTRA];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i = i + <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">            registers[i] = <span class="number">32&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i = i + <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">                registers[i] &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (WE) <span class="keyword">begin</span></span><br><span class="line">                <span class="built_in">$display</span>(<span class="string">&quot;%d@%h: $%d &lt;= %h&quot;</span>, <span class="built_in">$time</span>, PC, A3, WD);</span><br><span class="line">                registers[A3] &lt;= WD;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-DM"><a href="#2-DM" class="headerlink" title="2. DM"></a>2. DM</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>PC</td><td>Input</td><td>31:0</td><td>pc</td></tr><tr><td>memwrite</td><td>Input</td><td>1</td><td>内存写使能</td></tr><tr><td>memaddr</td><td>Input</td><td>31:0</td><td>内存地址</td></tr><tr><td>memdata</td><td>Input</td><td>31:0</td><td>写入的内存数据</td></tr><tr><td>outdata</td><td>Output</td><td>31:0</td><td>输出的内存数据</td></tr></tbody></table></div><p>使用寄存器数组实现。<strong>初始化!!</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> DM (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC,</span><br><span class="line">    <span class="keyword">input</span> memwrite,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] memaddr,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] memdata,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] outdata</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] mem[<span class="number">0</span>:<span class="number">4095</span>];</span><br><span class="line">    <span class="keyword">integer</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> outdata = mem[memaddr[<span class="number">13</span>:<span class="number">2</span>]];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4096</span>; i = i + <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">            mem[i] = <span class="number">32&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4096</span>; i = i + <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">                mem[i] &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (memwrite) <span class="keyword">begin</span></span><br><span class="line">                mem[memaddr[<span class="number">13</span>:<span class="number">2</span>]] &lt;= memdata;</span><br><span class="line"><span class="built_in">$display</span>(<span class="string">&quot;%d@%h: *%h &lt;= %h&quot;</span>, <span class="built_in">$time</span>, PC, &#123;<span class="number">18&#x27;b0</span>,memaddr[<span class="number">13</span>:<span class="number">0</span>]&#125;, memdata);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>DM中一个字是一个地址</strong>，按字节为14位（16K），按字为12位地址（32bit*4096），端口应该连接ALU输出端的2~13位。</p><h3 id="3-NPC"><a href="#3-NPC" class="headerlink" title="3. NPC"></a>3. NPC</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>beq_if</td><td>Input</td><td>1</td><td>beq指令pc选择</td></tr><tr><td>zero</td><td>Input</td><td>1</td><td>beq指令相等判断</td></tr><tr><td>j_if</td><td>Input</td><td>1</td><td>j指令pc选择</td></tr><tr><td>jr_if</td><td>Input</td><td>1</td><td>jr指令pc选择</td></tr><tr><td>jal_if</td><td>Input</td><td>1</td><td>jal指令pc选择</td></tr><tr><td>imm</td><td>Input</td><td>31:0</td><td>位扩展后的立即数</td></tr><tr><td>j_addr</td><td>Input</td><td>25:0</td><td>j指令跳转地址</td></tr><tr><td>jr_addr</td><td>Input</td><td>31:0</td><td>jr指令跳转地址</td></tr><tr><td>NPC</td><td>Output</td><td>31:0</td><td>输出的真实pc值</td></tr><tr><td>NPC_4</td><td>Output</td><td>31:0</td><td>pc+4(用于jal指令写入$ra)</td></tr></tbody></table></div><p>外部引入两个对应位置的寄存器通过ALU的减法结果zero，通过与beq_if（判断指令是否为beq）连接,实现beq（<em>if$[rs]==$[rt]</em>）:  PC=PC+offest+4。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> NPC (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> beq_judge,</span><br><span class="line">    <span class="keyword">input</span> block,</span><br><span class="line">    <span class="keyword">input</span> j_if,</span><br><span class="line">    <span class="keyword">input</span> jr_if,</span><br><span class="line">    <span class="keyword">input</span> jal_if,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] imm,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC_D,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">25</span>:<span class="number">0</span>] j_addr,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] jr_addr,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] NPC,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] NPC_4  <span class="comment">//pc+4</span></span><br><span class="line">);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">assign</span> NPC_4 = (NPC + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        NPC = <span class="number">32&#x27;h0000_3000</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= <span class="number">32&#x27;h00003000</span>;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (block) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= NPC;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j_if == <span class="number">1&#x27;b1</span>||jal_if == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= &#123;PC_D[<span class="number">31</span> : <span class="number">28</span>], j_addr, <span class="number">2&#x27;b00</span>&#125;;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (jr_if == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= jr_addr;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (beq_judge) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= ((imm &lt;&lt; <span class="number">2</span>) + PC_D);</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= (NPC + <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-IM"><a href="#4-IM" class="headerlink" title="4.IM:"></a>4.IM:</h3><p>通过ROM元件存储和读入指令代码，PC在内部为0x00000000起始，而外部为<strong>0x00003000</strong>,需要减去一个偏移量</p><p><strong>ROM中一个字是一个地址</strong>，按字为12位地址端口应该连接ALU输出端的<strong>2~13</strong>位。</p><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>pc</td><td>Input</td><td>31:0</td><td>pc</td></tr><tr><td>inster</td><td>Output</td><td>31:0</td><td>指令机器码</td></tr><tr><td>Opcode</td><td>Output</td><td>5:0</td><td>高六位opcode</td></tr><tr><td>rs</td><td>Output</td><td>4:0</td><td>rs寄存器序号</td></tr><tr><td>rt</td><td>Output</td><td>4:0</td><td>rt寄存器序号</td></tr><tr><td>rd</td><td>Output</td><td>4:0</td><td>rd寄存器序号</td></tr><tr><td>s</td><td>Output</td><td>4:0</td><td>输出6-10位</td></tr><tr><td>func</td><td>Output</td><td>5:0</td><td>输出func码</td></tr><tr><td>imm</td><td>Output</td><td>15:0</td><td>输出低16位立即数imm</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> IM(</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] pc,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] instr</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] mem[<span class="number">0</span>:<span class="number">4095</span>];</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] fakepc; </span><br><span class="line">    <span class="keyword">assign</span> fakepc = pc-<span class="number">32&#x27;h0000_3000</span>;</span><br><span class="line">    <span class="keyword">assign</span> instr = mem[fakepc[<span class="number">13</span>:<span class="number">2</span>]];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="built_in">$readmemh</span>(<span class="string">&quot;code.txt&quot;</span>, mem);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用<strong>$readmemh(“code.txt”, mem)</strong>指令读取文件，初始化im。</p><h3 id="5-ALU"><a href="#5-ALU" class="headerlink" title="5.ALU"></a>5.ALU</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>ALUOp</td><td>Input</td><td>3：0</td><td>ALU功能选择</td></tr><tr><td>A</td><td>Input</td><td>31：0</td><td>待处理数字1</td></tr><tr><td>B</td><td>Input</td><td>31：0</td><td>待处理数字2</td></tr><tr><td>result</td><td>Output</td><td>31：0</td><td>计算结果</td></tr><tr><td>overflow</td><td>Output</td><td>1</td><td>溢出判断</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">define</span> ADD 4&#x27;b0000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB  4&#x27;b0001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> MUL 4&#x27;b0010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> DIV 4&#x27;b0011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> AND 4&#x27;b0100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OR 4&#x27;b0101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL 4&#x27;b0110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL 4&#x27;b0111</span></span><br><span class="line"><span class="keyword">module</span> ALU(</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] aluop,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] A,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] B,</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] result,</span><br><span class="line">    <span class="keyword">output</span> overflow</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">0</span>] bit_33;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> overflow = bit_33[<span class="number">32</span>];</span><br><span class="line"><span class="keyword">assign</span> result = bit_33[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span>(aluop) </span><br><span class="line">    `ADD: bit_33 = A + B;</span><br><span class="line">    `SUB: bit_33 = A - B;</span><br><span class="line">    `MUL: bit_33 = A * B;</span><br><span class="line">    `DIV: bit_33 = A / B;</span><br><span class="line">    `AND: bit_33 = A &amp; B;</span><br><span class="line">    `OR:  bit_33 = A | B;</span><br><span class="line">    `SLL: bit_33 = (A &lt;&lt; B[<span class="number">4</span>:<span class="number">0</span>]);</span><br><span class="line">    `SRL: bit_33 = (A &gt;&gt; B[<span class="number">4</span>:<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">default</span>: <span class="keyword">begin</span></span><br><span class="line">        bit_33 =<span class="number">33&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">endcase</span>    </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>ALUOp:</em>（留一位给剩下的）</p><div class="table-container"><table><thead><tr><th>0000</th><th>0001</th><th>0010</th><th>0011</th><th>0100</th><th>0101</th><th>0110</th><th>0111</th></tr></thead><tbody><tr><td>add</td><td>sub</td><td>mul</td><td>div</td><td>and</td><td>or</td><td>sll</td><td>srl</td></tr></tbody></table></div><h3 id="6-EXT"><a href="#6-EXT" class="headerlink" title="6.EXT"></a>6.EXT</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>imm</td><td>Input</td><td>15:0</td><td>16位立即数</td></tr><tr><td>extp</td><td>Input</td><td>1</td><td>位扩展选择功能</td></tr><tr><td>extresult</td><td>Output</td><td>31:0</td><td>位扩展计算结果</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> EXT (</span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">1</span>:<span class="number">0</span>] extop,</span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] imm,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] extresult</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">assign</span> extresult = (extop == <span class="number">2&#x27;b00</span>) ? &#123;<span class="number">16&#x27;h0000</span>, imm&#125; :</span><br><span class="line">                    (extop == <span class="number">2&#x27;b01</span>) ? &#123;&#123;<span class="number">16</span>&#123;imm[<span class="number">15</span>]&#125;&#125;, imm&#125; :</span><br><span class="line">                    (extop == <span class="number">2&#x27;b10</span>) ? &#123;imm, <span class="number">16&#x27;h0000</span>&#125; : &#123;<span class="number">16&#x27;h0000</span>, imm&#125;;<span class="comment">//²âÊÔ</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th><em>EXTOp:</em></th><th>00</th><th>01</th><th>10</th><th>11</th></tr></thead><tbody><tr><td>功能</td><td>0扩展</td><td>符号扩展</td><td>高位加载</td><td>空余</td></tr></tbody></table></div><h3 id="7-CTRL"><a href="#7-CTRL" class="headerlink" title="7.CTRL"></a>7.CTRL</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>opcode</td><td>Input</td><td>5:0</td><td>高六位opcode</td></tr><tr><td>func</td><td>Input</td><td>5:0</td><td>低六位opcode</td></tr><tr><td>instr</td><td>Input</td><td>31:0</td><td>指令码</td></tr><tr><td>regwrite</td><td>Output</td><td>1</td><td>reg写使能</td></tr><tr><td>regwritedst</td><td>Output</td><td>1:0</td><td>寄存器写选择</td></tr><tr><td>alusrc</td><td>Output</td><td>1</td><td>alu选择imm入B口</td></tr><tr><td>memwrite</td><td>Output</td><td>1</td><td>mem写使能</td></tr><tr><td>memtoreg</td><td>Output</td><td>1</td><td>mem写入reg选择</td></tr><tr><td>jr_if</td><td>Output</td><td>1</td><td>jr判断</td></tr><tr><td>j_if</td><td>Output</td><td>1</td><td>j判断</td></tr><tr><td>jal_if</td><td>Output</td><td>1</td><td>jal判断</td></tr><tr><td>sll_if</td><td>Output</td><td>1</td><td>sll判断</td></tr><tr><td>srl_if</td><td>Output</td><td>1</td><td>srl判断</td></tr><tr><td>beq_if</td><td>Output</td><td>1</td><td>beq判断</td></tr><tr><td>extop</td><td>Output</td><td>1:0</td><td>ext功能选择</td></tr><tr><td>aluop</td><td>Output</td><td>3:0</td><td>alu功能选择</td></tr></tbody></table></div><p>通过输入的指令码各部分，进行操作状态输出。</p><p><strong><em> sll指令未实现</em></strong></p><div class="table-container"><table><thead><tr><th>执行指令</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>信号名</td><td>add</td><td>sub</td><td>andi</td><td>lui</td><td>ori</td><td>j</td><td>jal</td><td>jr</td><td>beq</td><td>sw</td><td>lw</td><td>nop</td><td>sll</td><td>srl</td></tr><tr><td>opcode</td><td>000000</td><td>000000</td><td>001100</td><td>001111</td><td>001101</td><td>000010</td><td>000011</td><td>000000</td><td>000100</td><td>101011</td><td>100011</td><td>000000</td><td>000000</td><td>000000</td></tr><tr><td>func</td><td>100000</td><td>100010</td><td></td><td></td><td></td><td></td><td></td><td>001000</td><td></td><td></td><td></td><td>000000</td><td>000000</td><td>000010</td></tr><tr><td>regwrite</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>regwritedst（2）</td><td>01(rd)</td><td>01</td><td>00</td><td>00</td><td>00(rt)</td><td>00</td><td>10($ra)</td><td>00</td><td>00</td><td>00</td><td>00</td><td>01</td><td>01</td><td>01</td></tr><tr><td>alusrc(imm)</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>memwrite</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>memtoreg</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>extop（2）</td><td>00</td><td>00</td><td>00</td><td>10</td><td>00</td><td>00</td><td>00</td><td>00</td><td>01</td><td>01</td><td>01</td><td>00</td><td>00</td><td>00</td></tr><tr><td>beq_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>j_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>jal_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>jr_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>sll_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td></tr><tr><td>srl_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>ALU_ctr3</td><td>0</td><td>0</td><td>1</td><td>0(add$0)</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>ALU_ctr2</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>ALU_ctr1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1(sub验证)</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">define</span> OPCODE0 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADD 6&#x27;b100000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB 6&#x27;b100010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ANDI 6&#x27;b001100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ORI 6&#x27;b001101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LUI 6&#x27;b001111</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> J 6&#x27;b000010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JAL 6&#x27;b000011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JR 6&#x27;b001000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SW 6&#x27;b101011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LW 6&#x27;b100011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BEQ 6&#x27;b000100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> FUNC0 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL 6&#x27;b000010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> NOP 6&#x27;b000000</span></span><br><span class="line"><span class="keyword">module</span> CTRL (</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">0</span>] opcode,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">0</span>] func,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] instr,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> regwrite,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> alusrc,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> memwrite,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> memtoreg,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] extop,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] aluop,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> beq_if,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> j_if,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> jr_if,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> jal_if,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> sll_if,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> srl_if</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (instr == <span class="number">32&#x27;b0</span>) <span class="keyword">begin</span></span><br><span class="line">            regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">            alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            extop = <span class="number">2&#x27;b00</span>;</span><br><span class="line">            beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">            aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">case</span> (opcode)</span><br><span class="line">                `OPCODE0:</span><br><span class="line">                <span class="keyword">case</span> (func)</span><br><span class="line">                    `ADD: <span class="keyword">begin</span></span><br><span class="line">                        regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        regwritedst = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                        alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        extop = <span class="number">2&#x27;b0</span>;</span><br><span class="line">                        beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    `SUB: <span class="keyword">begin</span></span><br><span class="line">                        regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        regwritedst = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                        alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        extop = <span class="number">2&#x27;b0</span>;</span><br><span class="line">                        beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        aluop = <span class="number">4&#x27;b0001</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    `JR: <span class="keyword">begin</span></span><br><span class="line">                        regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                        alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        extop = <span class="number">2&#x27;b0</span>;</span><br><span class="line">                        beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jr_if = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    `SLL: <span class="keyword">begin</span></span><br><span class="line">                        regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        regwritedst = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                        alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        extop = <span class="number">2&#x27;b0</span>;</span><br><span class="line">                        beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        sll_if = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        aluop = <span class="number">4&#x27;b0110</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    `SRL: <span class="keyword">begin</span></span><br><span class="line">                        regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        regwritedst = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                        alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        extop = <span class="number">2&#x27;b0</span>;</span><br><span class="line">                        beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        srl_if = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                        aluop = <span class="number">4&#x27;b0111</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">default</span>: <span class="keyword">begin</span></span><br><span class="line">                        regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                        alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        extop = <span class="number">2&#x27;b0</span>;</span><br><span class="line">                        beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                        aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">endcase</span></span><br><span class="line">                `ANDI: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0100</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `LUI: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b10</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `ORI: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0101</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `J: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `JAL: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b10</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `BEQ: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0001</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `SW: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                `LW: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b1</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b01</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">default</span>: <span class="keyword">begin</span></span><br><span class="line">                    regwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    regwritedst = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    alusrc = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memwrite = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    memtoreg = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    extop = <span class="number">2&#x27;b00</span>;</span><br><span class="line">                    beq_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    j_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jal_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    jr_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    sll_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    srl_if = <span class="number">1&#x27;b0</span>;</span><br><span class="line">                    aluop = <span class="number">4&#x27;b0000</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>各信号注意点：</p><ul><li>add、sub、jr指令需要先判断opcode再判断func。</li></ul><h2 id="8-HCTRL"><a href="#8-HCTRL" class="headerlink" title="8.HCTRL"></a>8.HCTRL</h2><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>批注</th></tr></thead><tbody><tr><td>IR_F</td><td>Input</td><td>31:0</td><td>/</td></tr><tr><td>IR_D</td><td>Input</td><td>31:0</td><td>/</td></tr><tr><td>RS_D</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>RT_D</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>RS_E</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>RT_E</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>WA_E</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>WA_M</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>WA_W</td><td>Input</td><td>4:0</td><td>/</td></tr><tr><td>memtoreg_E</td><td>Input</td><td>1</td><td>/</td></tr><tr><td>memtoreg_M</td><td>Input</td><td>1</td><td>/</td></tr><tr><td>regwrite_E</td><td>Input</td><td>1</td><td>/</td></tr><tr><td>regwrite_M</td><td>Input</td><td>1</td><td>/</td></tr><tr><td>regwrite_W</td><td>Input</td><td>1</td><td>/</td></tr><tr><td>memwrite_M</td><td>Input</td><td>1</td><td>/</td></tr><tr><td>D_CLEAR</td><td>Output</td><td>1</td><td>D流水寄存器清空</td></tr><tr><td>F_BLOCK</td><td>Output</td><td>1</td><td>F流水寄存器保持</td></tr><tr><td>PC_BLOCK</td><td>Output</td><td>1</td><td>PC保持</td></tr><tr><td>rd1_sel</td><td>Output</td><td>1:0</td><td>R1_D_IN选择</td></tr><tr><td>rd2_sel</td><td>Output</td><td>1:0</td><td>R2_D_IN选择</td></tr><tr><td>frd1_sel</td><td>Output</td><td>1:0</td><td>aluA选择</td></tr><tr><td>frd1_sel</td><td>Output</td><td>1:0</td><td>aluB选择</td></tr><tr><td>memdata_sel</td><td>Output</td><td>1:0</td><td>mem写入WD选择</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OPCODE0 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADD 6&#x27;b100000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB 6&#x27;b100010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ANDI 6&#x27;b001100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ORI 6&#x27;b001101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LUI 6&#x27;b001111</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> J 6&#x27;b000010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JAL 6&#x27;b000011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JR 6&#x27;b001000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SW 6&#x27;b101011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LW 6&#x27;b100011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BEQ 6&#x27;b000100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> FUNC0 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL 6&#x27;b000010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> NOP 6&#x27;b000000</span></span><br><span class="line"><span class="keyword">module</span> HCTRL (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] IR_F,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] IR_D,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] RS_D,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] RT_D,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] RS_E,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] RT_E,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] WA_M,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] WA_W,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] WA_E,</span><br><span class="line">    <span class="keyword">input</span> memtoreg_E,</span><br><span class="line">    <span class="keyword">input</span> memtoreg_M,</span><br><span class="line">    <span class="keyword">input</span> regwrite_E,</span><br><span class="line">    <span class="keyword">input</span> regwrite_M,</span><br><span class="line">    <span class="keyword">input</span> regwrite_W,</span><br><span class="line">    <span class="keyword">input</span> memwrite_M,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> D_CLEAR,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> F_BLOCK,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> PC_BLOCK,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] rd1_sel,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] rd2_sel,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] frd1_sel,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] frd2_sel,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] memdata_sel</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] E_T_new;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] M_T_new;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] W_T_new;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] T_use;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>] opcode_F;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>] func_F;</span><br><span class="line">    <span class="keyword">wire</span> use_less_E_new;</span><br><span class="line">    <span class="keyword">wire</span> use_less_M_new;</span><br><span class="line">    <span class="keyword">wire</span> use_less_W_new;</span><br><span class="line">    <span class="keyword">assign</span> use_less_E_new=(((WA_E==RS_D&amp;&amp;RS_D!=<span class="number">0</span>)||(WA_E==RT_D&amp;&amp;RT_D!=<span class="number">0</span>))&amp;&amp;(regwrite_E)&amp;&amp;(T_use &lt; E_T_new)===<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">assign</span> use_less_M_new=(((WA_M==RS_D&amp;&amp;RS_D!=<span class="number">0</span>)||(WA_M==RT_D&amp;&amp;RT_D!=<span class="number">0</span>))&amp;&amp;(regwrite_M)&amp;&amp;(T_use &lt; M_T_new)===<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">assign</span> use_less_W_new=(((WA_W==RS_D&amp;&amp;RS_D!=<span class="number">0</span>)||(WA_W==RT_D&amp;&amp;RT_D!=<span class="number">0</span>))&amp;&amp;(regwrite_W)&amp;&amp;(T_use &lt; W_T_new)===<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> opcode_F = IR_F[<span class="number">31</span>:<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">assign</span> func_F = IR_F[<span class="number">5</span>:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (memtoreg_E &amp;&amp; regwrite_E) <span class="keyword">begin</span></span><br><span class="line">            E_T_new = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ((!memtoreg_E) &amp;&amp; regwrite_E) <span class="keyword">begin</span></span><br><span class="line">            E_T_new = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            E_T_new = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (memtoreg_M) <span class="keyword">begin</span></span><br><span class="line">            M_T_new = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            M_T_new = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        W_T_new = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(((opcode_F==`OPCODE0)&amp;&amp;(func_F==`ADD||func_F==`SUB))||(opcode_F==`ORI)||(opcode_F==`SW)||(opcode_F==`LW)) <span class="keyword">begin</span></span><br><span class="line">            T_use = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> (opcode_F == `LUI || opcode_F == `J || opcode_F == `JAL || IR_F == <span class="number">32&#x27;b0</span>) <span class="keyword">begin</span></span><br><span class="line">            T_use = <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            T_use = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> (use_less_E_new || use_less_M_new || use_less_W_new) <span class="keyword">begin</span></span><br><span class="line">            PC_BLOCK = <span class="number">1</span>;</span><br><span class="line">            D_CLEAR  = <span class="number">1</span>;</span><br><span class="line">            F_BLOCK  = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">            PC_BLOCK = <span class="number">0</span>;</span><br><span class="line">            D_CLEAR  = <span class="number">0</span>;</span><br><span class="line">            F_BLOCK  = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((M_T_new == <span class="number">0</span>) &amp;&amp; (WA_M == RS_E) &amp;&amp; (regwrite_M)) <span class="keyword">begin</span></span><br><span class="line">            frd1_sel = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ((W_T_new == <span class="number">0</span>) &amp;&amp; (WA_W == RS_E) &amp;&amp; (regwrite_W)) <span class="keyword">begin</span></span><br><span class="line">            frd1_sel = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            frd1_sel = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((M_T_new == <span class="number">0</span>) &amp;&amp; (WA_M == RT_E) &amp;&amp; (regwrite_M)) <span class="keyword">begin</span></span><br><span class="line">            frd2_sel = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">if</span> ((W_T_new == <span class="number">0</span>) &amp;&amp; (WA_W == RT_E) &amp;&amp; (regwrite_W)) <span class="keyword">begin</span></span><br><span class="line">            frd2_sel = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            frd2_sel = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (M_T_new == <span class="number">0</span> &amp;&amp; WA_M == RS_D &amp;&amp; regwrite_M) <span class="keyword">begin</span></span><br><span class="line">            rd1_sel = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            rd1_sel = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> (M_T_new == <span class="number">0</span> &amp;&amp; WA_M == RT_D &amp;&amp; regwrite_M) <span class="keyword">begin</span></span><br><span class="line">            rd2_sel = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            rd2_sel = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (memwrite_M) <span class="keyword">begin</span></span><br><span class="line">            memdata_sel = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            memdata_sel = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="9-流水线REG"><a href="#9-流水线REG" class="headerlink" title="9.流水线REG"></a>9.流水线REG</h2><p>F:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> F_REG (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> BLOCK,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC_F_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] IR_F_IN,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] PC_F_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] IR_F_OUT</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] PC_F;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] IR_F;</span><br><span class="line">    <span class="keyword">assign</span> PC_F_OUT = PC_F;</span><br><span class="line">    <span class="keyword">assign</span> IR_F_OUT = IR_F;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            PC_F &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            IR_F &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (BLOCK) <span class="keyword">begin</span></span><br><span class="line">                PC_F &lt;= PC_F;</span><br><span class="line">                IR_F &lt;= IR_F;</span><br><span class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                PC_F &lt;= PC_F_IN;</span><br><span class="line">                IR_F &lt;= IR_F_IN;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>D:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> D_REG (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> D_CLEAR,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC_D_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] IR_D_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] R1_D_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] R2_D_IN,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] PC_D_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] R1_D_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] R2_D_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] IR_D_OUT,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> regwrite,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst,</span><br><span class="line">    <span class="keyword">input</span> alusrc,</span><br><span class="line">    <span class="keyword">input</span> memwrite,</span><br><span class="line">    <span class="keyword">input</span> memtoreg,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] aluop,</span><br><span class="line">    <span class="keyword">input</span> jal_if,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] IMM_D_IN,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">output</span> memtoreg_E,</span><br><span class="line">    <span class="keyword">output</span> regwrite_E,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst_E,</span><br><span class="line">    <span class="keyword">output</span> memwrite_E,</span><br><span class="line">    <span class="keyword">output</span> alusrc_E,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] aluop_E,</span><br><span class="line">    <span class="keyword">output</span> jal_if_E,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] IMM_D_OUT</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] PC_D;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] R1_D;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] R2_D;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] IR_D;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] IMM_D;</span><br><span class="line">    <span class="keyword">reg</span> regwritereg;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedstreg;</span><br><span class="line">    <span class="keyword">reg</span> alusrcreg;</span><br><span class="line">    <span class="keyword">reg</span> memwritereg;</span><br><span class="line">    <span class="keyword">reg</span> memtoregreg;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">3</span>:<span class="number">0</span>] aluopreg;</span><br><span class="line">    <span class="keyword">reg</span> jal_ifreg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> PC_D_OUT = PC_D;</span><br><span class="line">    <span class="keyword">assign</span> R1_D_OUT = R1_D;</span><br><span class="line">    <span class="keyword">assign</span> R2_D_OUT = R2_D;</span><br><span class="line">    <span class="keyword">assign</span> IR_D_OUT = IR_D;</span><br><span class="line">    <span class="keyword">assign</span> IMM_D_OUT = IMM_D;</span><br><span class="line">    <span class="keyword">assign</span> regwrite_E = regwritereg;</span><br><span class="line">    <span class="keyword">assign</span> regwritedst_E = regwritedstreg;</span><br><span class="line">    <span class="keyword">assign</span> memtoreg_E = memtoregreg;</span><br><span class="line">    <span class="keyword">assign</span> memwrite_E = memwritereg;</span><br><span class="line">    <span class="keyword">assign</span> alusrc_E = alusrcreg;</span><br><span class="line">    <span class="keyword">assign</span> aluop_E = aluopreg;</span><br><span class="line">    <span class="keyword">assign</span> jal_if_E = jal_ifreg;</span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            PC_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            R1_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            R2_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            IR_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            IMM_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            jal_ifreg &lt;= <span class="number">0</span>;</span><br><span class="line">            regwritereg &lt;= <span class="number">0</span>;</span><br><span class="line">            regwritedstreg &lt;= <span class="number">2&#x27;b0</span>;</span><br><span class="line">            alusrcreg &lt;= <span class="number">0</span>;</span><br><span class="line">            memwritereg &lt;= <span class="number">0</span>;</span><br><span class="line">            memtoregreg &lt;= <span class="number">0</span>;</span><br><span class="line">            aluopreg &lt;= <span class="number">4&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (D_CLEAR) <span class="keyword">begin</span></span><br><span class="line">                PC_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">                R1_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">                R2_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">                IR_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">                IMM_D &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">                jal_ifreg &lt;= <span class="number">0</span>;</span><br><span class="line">                regwritereg &lt;= <span class="number">0</span>;</span><br><span class="line">                regwritedstreg &lt;= <span class="number">2&#x27;b0</span>;</span><br><span class="line">                alusrcreg &lt;= <span class="number">0</span>;</span><br><span class="line">                memwritereg &lt;= <span class="number">0</span>;</span><br><span class="line">                memtoregreg &lt;= <span class="number">0</span>;</span><br><span class="line">                aluopreg &lt;= <span class="number">4&#x27;b0</span>;</span><br><span class="line">            <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">                PC_D &lt;= PC_D_IN;</span><br><span class="line">                IR_D &lt;= IR_D_IN;</span><br><span class="line">                R1_D &lt;= R1_D_IN;</span><br><span class="line">                R2_D &lt;= R2_D_IN;</span><br><span class="line">                IMM_D &lt;= IMM_D_IN;</span><br><span class="line">                jal_ifreg &lt;= jal_if;</span><br><span class="line">                regwritereg &lt;= regwrite;</span><br><span class="line">                regwritedstreg &lt;= regwritedst;</span><br><span class="line">                alusrcreg &lt;= alusrc;</span><br><span class="line">                memwritereg &lt;= memwrite;</span><br><span class="line">                memtoregreg &lt;= memtoreg;</span><br><span class="line">                aluopreg &lt;= aluop;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>E:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> E_REG(</span><br><span class="line"><span class="keyword">input</span> clk,</span><br><span class="line"><span class="keyword">input</span> reset,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC_E_IN,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] AO_E_IN,</span><br><span class="line">        <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] WD_E_IN,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] WA_E_IN,</span><br><span class="line">        <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] IR_E_IN,</span><br><span class="line"><span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] PC_E_OUT,</span><br><span class="line"><span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] AO_E_OUT,</span><br><span class="line">        <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] WD_E_OUT,</span><br><span class="line"><span class="keyword">output</span> [<span class="number">4</span>:<span class="number">0</span>] WA_E_OUT,</span><br><span class="line">        <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] IR_E_OUT,</span><br><span class="line"></span><br><span class="line">        <span class="keyword">input</span>  regwrite,</span><br><span class="line">        <span class="keyword">input</span>  memwrite,</span><br><span class="line">        <span class="keyword">input</span>  memtoreg,</span><br><span class="line"></span><br><span class="line">        <span class="keyword">output</span>  memtoreg_M,</span><br><span class="line">        <span class="keyword">output</span>  regwrite_M,</span><br><span class="line">        <span class="keyword">output</span>  memwrite_M</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] PC_E;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] AO_E;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] WD_E;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] WA_E;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] IR_E;</span><br><span class="line"><span class="keyword">reg</span>  regwritereg;</span><br><span class="line"><span class="keyword">reg</span>  memtoregreg;</span><br><span class="line"><span class="keyword">reg</span>  memwritereg;</span><br><span class="line"><span class="keyword">assign</span> PC_E_OUT=PC_E;</span><br><span class="line"><span class="keyword">assign</span> AO_E_OUT=AO_E;</span><br><span class="line"><span class="keyword">assign</span> WD_E_OUT=WD_E;</span><br><span class="line"><span class="keyword">assign</span> WA_E_OUT=WA_E;</span><br><span class="line"><span class="keyword">assign</span> IR_E_OUT=IR_E;</span><br><span class="line"><span class="keyword">assign</span> memtoreg_M=memtoregreg;</span><br><span class="line"><span class="keyword">assign</span> memwrite_M=memwritereg;</span><br><span class="line"><span class="keyword">assign</span> regwrite_M=regwritereg;</span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            PC_E&lt;=<span class="number">32&#x27;b0</span>;</span><br><span class="line">            AO_E&lt;=<span class="number">32&#x27;b0</span>;</span><br><span class="line">            WD_E&lt;=<span class="number">32&#x27;b0</span>;</span><br><span class="line">            WA_E&lt;=<span class="number">5&#x27;b0</span>;</span><br><span class="line">            IR_E&lt;=<span class="number">31&#x27;b0</span>;</span><br><span class="line">            memtoregreg&lt;=<span class="number">0</span>;</span><br><span class="line">            memwritereg&lt;=<span class="number">0</span>;</span><br><span class="line">            regwritereg&lt;=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            </span><br><span class="line">            PC_E&lt;=PC_E_IN;</span><br><span class="line">            AO_E&lt;=AO_E_IN;</span><br><span class="line">            WD_E&lt;=WD_E_IN;</span><br><span class="line">            WA_E&lt;=WA_E_IN;</span><br><span class="line">            IR_E&lt;=IR_E_IN;</span><br><span class="line">            memtoregreg&lt;=memtoreg;</span><br><span class="line">            memwritereg&lt;=memwrite;</span><br><span class="line">            regwritereg&lt;=regwrite;;</span><br><span class="line">            </span><br><span class="line">                </span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>M:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> M_REG (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC_M_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] AO_M_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] MD_M_IN,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] WA_M_IN,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] AO_M_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] MD_M_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">4</span>:<span class="number">0</span>] WA_M_OUT,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] PC_M_OUT,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">input</span> regwrite,</span><br><span class="line">    <span class="keyword">input</span> memtoreg,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">output</span> memtoreg_W,</span><br><span class="line">    <span class="keyword">output</span> regwrite_W</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] AO_M;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] MD_M;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] WA_M;</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] PC_M;</span><br><span class="line">    <span class="keyword">reg</span> regwritereg;</span><br><span class="line">    <span class="keyword">reg</span> memtoregreg;</span><br><span class="line">    <span class="keyword">assign</span> AO_M_OUT   = AO_M;</span><br><span class="line">    <span class="keyword">assign</span> MD_M_OUT   = MD_M;</span><br><span class="line">    <span class="keyword">assign</span> WA_M_OUT   = WA_M;</span><br><span class="line">    <span class="keyword">assign</span> PC_M_OUT   = PC_M;</span><br><span class="line">    <span class="keyword">assign</span> regwrite_W = regwritereg;</span><br><span class="line">    <span class="keyword">assign</span> memtoreg_W = memtoregreg;</span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            AO_M &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            MD_M &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            WA_M &lt;= <span class="number">5&#x27;b0</span>;</span><br><span class="line">            PC_M &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            regwritereg &lt;= <span class="number">0</span>;</span><br><span class="line">            memtoregreg &lt;= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">            AO_M &lt;= AO_M_IN;</span><br><span class="line">            MD_M &lt;= MD_M_IN;</span><br><span class="line">            WA_M &lt;= WA_M_IN;</span><br><span class="line">            PC_M &lt;= PC_M_IN;</span><br><span class="line">            regwritereg &lt;= regwrite;</span><br><span class="line">            memtoregreg &lt;= memtoreg;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>注意一下特殊的<strong>清空或者阻塞</strong>信号即可。</p><h2 id="10-mips-顶层模块"><a href="#10-mips-顶层模块" class="headerlink" title="10.mips(顶层模块)"></a>10.mips(顶层模块)</h2><p><strong>注意流水寄存器中为pc+4，使用时需要减去4，而jal的pc+8需要加4</strong>。</p><p>添加了31号和pc+8的选择。</p><p>x_D_IN表示一个名为x的信号，IN表示输入，D表示输入的流水线寄存器</p><p>x_E 表示一个名为x的信号，处于E时期，可能为D_OUT或者E_IN。</p><p>M_REG表示其前一阶段为M阶段。</p><p>转发表：</p><div class="table-container"><table><thead><tr><th>供给者序号\需求者</th><th>D级grf的输出</th><th>E级alu的输入</th><th>M级mem的内存写入数据WD</th></tr></thead><tbody><tr><td>0</td><td>AO_E_OUT</td><td>r1_D_OUT/r2_D_OUT</td><td>WD_E_OUT</td></tr><tr><td>1</td><td>rd1/rd2</td><td>AO_E_OUT</td><td>realgrfdata(真实值)</td></tr><tr><td>2</td><td>/</td><td>grfwritedata(包括memout和AO_M_OUT)</td><td>/</td></tr></tbody></table></div><p>mux暂时不用，改为assign选择。</p><p>MUX选择信号表：</p><div class="table-container"><table><thead><tr><th>序号  \  需求者/控制信号</th><th>aluB/alusrc</th><th>AO_E_IN/jal_if</th><th>WA_E_IN/regdst_E</th><th>grfwritedata/memtoreg_W</th></tr></thead><tbody><tr><td>0</td><td>转发后的rd2</td><td>aluresult</td><td>rt</td><td>AO_M_OUT(alu结果)</td></tr><tr><td>1</td><td>imm</td><td>pc+8(jal使用0)</td><td>rd</td><td>MD_M_OUT(内存读取)</td></tr><tr><td>2</td><td>/</td><td>/</td><td>31</td><td>/</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> mips (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset</span><br><span class="line">);</span><br><span class="line"><span class="comment">///////////////////////////////////////////////WIRE</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>]pc_4;</span><br><span class="line">    <span class="keyword">wire</span> d_clear;</span><br><span class="line">    <span class="keyword">wire</span> f_block;</span><br><span class="line">    <span class="keyword">wire</span> pc_block;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] rd1_sel;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] rd2_sel;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] frd1_sel;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] frd2_sel;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] pc_NPC_IM;<span class="comment">//</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] ir_IM_F;<span class="comment">//</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] pc_F_OUT;<span class="comment">//</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] ir_F_OUT;<span class="comment">//</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] r1_D_IN;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] r2_D_IN;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] rd1;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] rd2;</span><br><span class="line">    <span class="keyword">wire</span> memwrite;</span><br><span class="line">    <span class="keyword">wire</span> memtoreg;</span><br><span class="line">    <span class="keyword">wire</span> regwrite;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst;</span><br><span class="line">    <span class="keyword">wire</span> alusrc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> beq_if;</span><br><span class="line">    <span class="keyword">wire</span> j_if;</span><br><span class="line">    <span class="keyword">wire</span> jr_if;</span><br><span class="line">    <span class="keyword">wire</span> jal_if;</span><br><span class="line">    <span class="keyword">wire</span> sll_if;</span><br><span class="line">    <span class="keyword">wire</span> srl_if;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] extop;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] aluop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] extresult;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] imm_D_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] pc_D_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] r1_D_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] r2_D_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] ir_D_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] aluop_E;</span><br><span class="line">    <span class="keyword">wire</span> memwrite_E;</span><br><span class="line">    <span class="keyword">wire</span> memtoreg_E;</span><br><span class="line">    <span class="keyword">wire</span> regwrite_E;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst_E;</span><br><span class="line">    <span class="keyword">wire</span> alusrc_E;</span><br><span class="line">    <span class="keyword">wire</span> beq_judge;</span><br><span class="line">    <span class="keyword">wire</span> jal_if_E;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] aluA;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] aluB;</span><br><span class="line">    <span class="keyword">wire</span> overflow;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] aluresult;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] ao_E_IN;</span><br><span class="line">    <span class="keyword">wire</span> memwrite_M;</span><br><span class="line">    <span class="keyword">wire</span> memtoreg_M;</span><br><span class="line">    <span class="keyword">wire</span> regwrite_M;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] wd_E_IN;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] wa_E_IN;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] pc_E_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] ao_E_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] wd_E_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] wa_E_OUT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] memoutdata;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> memtoreg_W;</span><br><span class="line">    <span class="keyword">wire</span> regwrite_W;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] md_M_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] ao_M_OUT;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] wa_M_OUT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] pc_M_OUT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] grfdata;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>]memdata;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>]memdata_sel;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>]realgrfdata;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>]ir_E_OUT;</span><br><span class="line"><span class="comment">////////////////////////////////////////////////////MUX_F</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> r1_D_IN=(rd1_sel===<span class="number">2&#x27;b00</span>)?((wa_E_OUT===<span class="number">5&#x27;b0</span>)?<span class="number">32&#x27;b0</span>:ao_E_OUT):rd1;</span><br><span class="line">    <span class="keyword">assign</span> r2_D_IN=(rd2_sel===<span class="number">2&#x27;b00</span>)?((wa_E_OUT===<span class="number">5&#x27;b0</span>)?<span class="number">32&#x27;b0</span>:ao_E_OUT):rd2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> beq_judge=(beq_if&amp;&amp;(r1_D_IN==r2_D_IN))?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////MUX_D</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> aluA=(ir_D_OUT[<span class="number">25</span>:<span class="number">21</span>]===<span class="number">5&#x27;b0</span>)?(<span class="number">32&#x27;b0</span>):((frd1_sel===<span class="number">2&#x27;b00</span>)?r1_D_OUT:</span><br><span class="line">    (frd1_sel===<span class="number">2&#x27;b01</span>)?ao_E_OUT:grfdata);</span><br><span class="line">    <span class="keyword">assign</span> aluB=(alusrc_E===<span class="number">1&#x27;b0</span>)?((ir_D_OUT[<span class="number">20</span>:<span class="number">16</span>]===<span class="number">5&#x27;b0</span>)?<span class="number">32&#x27;b0</span>:(frd2_sel===<span class="number">2&#x27;b00</span>)?r2_D_OUT:</span><br><span class="line">    (frd2_sel===<span class="number">2&#x27;b01</span>)?ao_E_OUT:grfdata):(imm_D_OUT);</span><br><span class="line">    <span class="keyword">assign</span> grfdata=(memtoreg_W===<span class="number">0</span>)?ao_M_OUT:md_M_OUT;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////MUX_E</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> ao_E_IN=(jal_if_E===<span class="number">1&#x27;b0</span>)?aluresult:(pc_D_OUT+<span class="number">4</span>);<span class="comment">//pc+8</span></span><br><span class="line">    <span class="keyword">assign</span> wd_E_IN=((frd2_sel===<span class="number">2&#x27;b00</span>)?r2_D_OUT:</span><br><span class="line">    (frd2_sel===<span class="number">2&#x27;b01</span>)?ao_E_OUT:grfdata);</span><br><span class="line">    <span class="keyword">assign</span> wa_E_IN=(regwritedst_E===<span class="number">2&#x27;b00</span>)?ir_D_OUT[<span class="number">20</span>:<span class="number">16</span>]:</span><br><span class="line">    (regwritedst_E===<span class="number">2&#x27;b01</span>)?ir_D_OUT[<span class="number">15</span>:<span class="number">11</span>]:<span class="number">5&#x27;b11111</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////MUX_M</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> memdata=(memdata_sel===<span class="number">2&#x27;b00</span>)?(wd_E_OUT):</span><br><span class="line">    realgrfdata;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////MUX_W</span></span><br><span class="line">    HCTRL hctrl(</span><br><span class="line">        <span class="variable">.clk</span>(clk),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.IR_F</span>(ir_F_OUT),</span><br><span class="line">        <span class="variable">.IR_D</span>(ir_D_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.D_CLEAR</span>(d_clear),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.F_BLOCK</span>(f_block),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_BLOCK</span>(pc_block),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.RS_D</span>(ir_F_OUT[<span class="number">25</span>:<span class="number">21</span>]),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.RT_D</span>(ir_F_OUT[<span class="number">20</span>:<span class="number">16</span>]),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.RS_E</span>(ir_D_OUT[<span class="number">25</span>:<span class="number">21</span>]),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.RT_E</span>(ir_D_OUT[<span class="number">20</span>:<span class="number">16</span>]),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_M</span>(wa_E_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_W</span>(wa_M_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_E</span>(wa_E_IN),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg_E</span>(memtoreg_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg_M</span>(memtoreg_M),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite_E</span>(regwrite_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite_M</span>(regwrite_M),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite_W</span>(regwrite_W),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memwrite_M</span>(memwrite_M),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="variable">.rd1_sel</span>(rd1_sel),</span><br><span class="line">        <span class="variable">.rd2_sel</span>(rd2_sel),</span><br><span class="line">        <span class="variable">.frd1_sel</span>(frd1_sel),</span><br><span class="line">        <span class="variable">.frd2_sel</span>(frd2_sel),</span><br><span class="line">        <span class="variable">.memdata_sel</span>(memdata_sel)</span><br><span class="line">    );</span><br><span class="line"><span class="comment">///////////////////////////////////F_REG</span></span><br><span class="line">    NPC npc (</span><br><span class="line">        <span class="variable">.clk</span>(clk),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.NPC</span>(pc_NPC_IM),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.NPC_4</span>(pc_4), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_D</span>(pc_F_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.block</span>(pc_block),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.beq_judge</span>(beq_judge),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.j_if</span>(j_if),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.jr_if</span>(jr_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.jal_if</span>(jal_if), <span class="comment">// </span></span><br><span class="line">        <span class="variable">.imm</span>(extresult),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.j_addr</span>(ir_F_OUT[<span class="number">25</span>:<span class="number">0</span>]), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.jr_addr</span>(r1_D_IN)<span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    IM im (</span><br><span class="line">        <span class="variable">.pc</span>(pc_NPC_IM),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.instr</span>(ir_IM_F) <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">F_REG f_reg (</span><br><span class="line">        <span class="variable">.clk</span>(clk), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.BLOCK</span>(f_block), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_F_IN</span>(pc_4), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.IR_F_IN</span>(ir_IM_F), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_F_OUT</span>(pc_F_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.IR_F_OUT</span>(ir_F_OUT)<span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">////////////////////////////////////D_REG</span></span><br><span class="line">    GRF grf (</span><br><span class="line">        <span class="variable">.clk</span>(clk),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC</span>(pc_M_OUT-<span class="number">4</span>), <span class="comment">// </span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.WE</span>(regwrite_W),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.A1</span>(ir_F_OUT[<span class="number">25</span>:<span class="number">21</span>]),  <span class="comment">//RS</span></span><br><span class="line">        <span class="variable">.A2</span>(ir_F_OUT[<span class="number">20</span>:<span class="number">16</span>]),  <span class="comment">//RT</span></span><br><span class="line">        <span class="variable">.A3</span>(wa_M_OUT), </span><br><span class="line">        <span class="variable">.EXTRA</span>(ir_E_OUT[<span class="number">20</span>:<span class="number">16</span>]), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WD</span>(grfdata),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.RD1</span>(rd1), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.RD2</span>(rd2),</span><br><span class="line">        <span class="variable">.RDEXTRA</span>(realgrfdata)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    CTRL ctrl (  </span><br><span class="line">        <span class="variable">.instr</span>(ir_F_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.opcode</span>(ir_F_OUT[<span class="number">31</span>:<span class="number">26</span>]),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.func</span>(ir_F_OUT[<span class="number">5</span>:<span class="number">0</span>]),<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.regwrite</span>(regwrite),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwritedst</span>(regwritedst),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.alusrc</span>(alusrc),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memwrite</span>(memwrite),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg</span>(memtoreg),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.beq_if</span>(beq_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.j_if</span>(j_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.jr_if</span>(jr_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.jal_if</span>(jal_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.sll_if</span>(sll_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.srl_if</span>(srl_if),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.extop</span>(extop),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.aluop</span>(aluop)<span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    EXT ext (</span><br><span class="line">        <span class="variable">.extop</span>(extop),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.imm</span>(ir_F_OUT[<span class="number">15</span>:<span class="number">0</span>]),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.extresult</span>(extresult)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">D_REG d_reg (</span><br><span class="line">        <span class="variable">.clk</span>(clk), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.D_CLEAR</span>(d_clear), <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.regwrite</span>(regwrite),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwritedst</span>(regwritedst),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.alusrc</span>(alusrc),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memwrite</span>(memwrite),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg</span>(memtoreg),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.aluop</span>(aluop),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.jal_if</span>(jal_if),<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.regwritedst_E</span>(regwritedst_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.alusrc_E</span>(alusrc_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memwrite_E</span>(memwrite_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg_E</span>(memtoreg_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite_E</span>(regwrite_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.aluop_E</span>(aluop_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.jal_if_E</span>(jal_if_E),</span><br><span class="line"></span><br><span class="line">        <span class="variable">.PC_D_IN</span>(pc_F_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.IR_D_IN</span>(ir_F_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.IMM_D_IN</span>(extresult),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.R1_D_IN</span>(r1_D_IN), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.R2_D_IN</span>(r2_D_IN), <span class="comment">//</span></span><br><span class="line">        </span><br><span class="line">        <span class="variable">.IMM_D_OUT</span>(imm_D_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_D_OUT</span>(pc_D_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.R1_D_OUT</span>(r1_D_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.R2_D_OUT</span>(r2_D_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.IR_D_OUT</span>(ir_D_OUT)<span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">////////////////////////////////////E_REG</span></span><br><span class="line">    ALU alu (</span><br><span class="line">        <span class="variable">.aluop</span>(aluop_E),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.A</span>(aluA),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.B</span>(aluB),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.result</span>(aluresult),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.overflow</span>(overflow)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E_REG e_reg (</span><br><span class="line">        <span class="variable">.clk</span>(clk), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.IR_E_IN</span>(ir_D_OUT),</span><br><span class="line">        <span class="variable">.IR_E_OUT</span>(ir_E_OUT),</span><br><span class="line"></span><br><span class="line">        <span class="variable">.memwrite</span>(memwrite_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg</span>(memtoreg_E),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite</span>(regwrite_E),<span class="comment">//</span></span><br><span class="line">        </span><br><span class="line">        <span class="variable">.memwrite_M</span>(memwrite_M),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.memtoreg_M</span>(memtoreg_M),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite_M</span>(regwrite_M),<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.PC_E_IN</span>(pc_D_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.AO_E_IN</span>(ao_E_IN), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WD_E_IN</span>(wd_E_IN), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_E_IN</span>(wa_E_IN), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_E_OUT</span>(pc_E_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.AO_E_OUT</span>(ao_E_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WD_E_OUT</span>(wd_E_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_E_OUT</span>(wa_E_OUT)<span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">/////////////////////////////////M_REG</span></span><br><span class="line">    DM dm (</span><br><span class="line">        <span class="variable">.clk</span>(clk),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC</span>(pc_E_OUT-<span class="number">4</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.memwrite</span>(memwrite_M),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.memaddr</span>(ao_E_OUT),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.memdata</span>(memdata),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.outdata</span>(memoutdata)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    M_REG m_reg (</span><br><span class="line">        <span class="variable">.clk</span>(clk), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset), <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.memtoreg</span>(memtoreg_M),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite</span>(regwrite_M),<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.memtoreg_W</span>(memtoreg_W),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.regwrite_W</span>(regwrite_W),<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">.AO_M_IN</span>(ao_E_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.MD_M_IN</span>(memoutdata), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_M_IN</span>(wa_E_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_M_IN</span>(pc_E_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.AO_M_OUT</span>(ao_M_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.MD_M_OUT</span>(md_M_OUT), <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WA_M_OUT</span>(wa_M_OUT),<span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC_M_OUT</span>(pc_M_OUT)<span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>AT法详表：</strong></p><div class="table-container"><table><thead><tr><th>指令</th><th>T_use</th><th>E_T_new</th><th>M_T_new</th><th>W_T_new</th></tr></thead><tbody><tr><td>ADD/SUB/ORI</td><td>1</td><td>1</td><td>0</td><td>0</td></tr><tr><td>LW</td><td>1</td><td>2</td><td>1</td><td>0</td></tr><tr><td>SW</td><td>1 or 2（特殊）</td><td>0</td><td>0</td><td>0</td></tr><tr><td>LUI</td><td>INF</td><td>1</td><td>0</td><td>0</td></tr><tr><td>BEQ</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>JR</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>J</td><td>INF</td><td>0</td><td>0</td><td>0</td></tr><tr><td>JAL</td><td>INF</td><td>1(用aluresult传入pc+8)</td><td>0</td><td>0</td></tr><tr><td>NOP</td><td>INF</td><td>0</td><td>0</td><td>0</td></tr></tbody></table></div><p><strong>对于sw</strong>：</p><p>如果sw处于E级，lw处于M级，会产生wd无法正确转发的错误。</p><p>其读取rt的值写入内存时所需的rt是有可能在后方的先前指令修改，用grf魔改端口实现实时输出真实值，通过对E级memwrite判断是否需要写入内存，来选择真实值，避免对sw进行错误的判断。</p><h1 id="测试方案"><a href="#测试方案" class="headerlink" title="测试方案"></a>测试方案</h1><p>通过mars编写汇编程序，编写相关测试代码，将mars生成的机器码通过文件导入到verilog，通过向输出中间数据，和mars进行对拍，以此验证各代码是否运行正确。</p><h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>例如:</p><figure class="highlight mips"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add </span>$<span class="built_in">t1</span>,$<span class="built_in">t1</span>,$<span class="built_in">t2</span></span><br><span class="line"><span class="keyword">add </span>$<span class="built_in">t1</span>,$<span class="built_in">t1</span>,$<span class="built_in">t2</span></span><br><span class="line"><span class="keyword">beq </span>$<span class="built_in">t1</span>,$<span class="built_in">t3</span>,label</span><br></pre></td></tr></table></figure><p>提前分支判断会导致其阻塞一周期，但是如果在M级分支判断可以通过转发解决。</p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>延迟槽会导致跳转指令下一条指令也会被执行，但是如果使用pc+4会导致跳转回来时候重复执行，所以需要pc+8。</p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>这样可以保证时序的准确性，如果直接接到元器件上，可能会产生一些毛刺数据造成潜在的转发错误。</p><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>因为要实现在D级跳转，如果此时W级有写入数据，那么需要在判断时转发数据保证正确性，而此时转发的接收者和发送者都是grf,因此可以内部转发。</p><p>实现：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assign</span> RD1 = (A1 == <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : ((A1 == A3) &amp;&amp; WE) ? WD : registers[A1];</span><br><span class="line"><span class="keyword">assign</span> RD2 = (A2 == <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : ((A2 == A3) &amp;&amp; WE) ? WD : registers[A2];</span><br></pre></td></tr></table></figure><p>值得注意的是需要对$0特判。</p><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><div class="table-container"><table><thead><tr><th>供给者序号\需求者</th><th>D级grf的输出</th><th>E级alu的输入</th><th>M级mem的内存写入数据WD</th></tr></thead><tbody><tr><td>0</td><td>AO_E_OUT</td><td>r1_D_OUT/r2_D_OUT</td><td>WD_E_OUT</td></tr><tr><td>1</td><td>rd1/rd2</td><td>AO_E_OUT</td><td>realgrfdata(真实值)</td></tr><tr><td>2</td><td>/</td><td>grfwritedata(包括memout和AO_M_OUT)</td><td>/</td></tr></tbody></table></div><h3 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h3><p>可能的修改：</p><p>alu内部计算逻辑、alu计算数选择、grf的读取写入寄存器选择、冒险控制元件判断逻辑、PC增加逻辑、imm预处理、</p><h3 id="7"><a href="#7" class="headerlink" title="7."></a>7.</h3><p>通过对opcode和func的分层判断，以此来判断命令类型译码，采用命令控制的信号驱动，对每一条指令产生的所有信号进行判断，这种好处是如果产生的新的命令，可以方便地加入，缺点是如果同时加入大量指令，可能有大部分无效添加的低电平信号，而且不便于管理单个信号的命令控制。</p><h1 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h1><h2 id="题目测试代码翻译："><a href="#题目测试代码翻译：" class="headerlink" title="题目测试代码翻译："></a>题目测试代码翻译：</h2><figure class="highlight mips"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x0000000000000000</span>:  <span class="number">34</span> <span class="number">1</span>C <span class="number">00</span> <span class="number">00</span>    <span class="keyword">ori </span>$<span class="built_in">gp</span>, $<span class="built_in">zero</span>, <span class="number">0</span></span><br><span class="line"><span class="number">0x0000000000000004</span>:  <span class="number">34</span> <span class="number">1</span>D <span class="number">00</span> <span class="number">00</span>    <span class="keyword">ori </span>$<span class="built_in">sp</span>, $<span class="built_in">zero</span>, <span class="number">0</span></span><br><span class="line"><span class="number">0x0000000000000008</span>:  <span class="number">34</span> <span class="number">01</span> <span class="number">10</span> <span class="number">10</span>    <span class="keyword">ori </span>$<span class="built_in">at</span>, $<span class="built_in">zero</span>, <span class="number">0x1010</span></span><br><span class="line"><span class="number">0x000000000000000c</span>:  <span class="number">3</span>C <span class="number">02</span> <span class="number">87</span> <span class="number">23</span>    <span class="keyword">lui </span>$<span class="built_in">v0</span>, <span class="number">0x8723</span></span><br><span class="line"><span class="number">0x0000000000000010</span>:  <span class="number">34</span> <span class="number">03</span> <span class="number">78</span> <span class="number">56</span>    <span class="keyword">ori </span>$<span class="built_in">v1</span>, $<span class="built_in">zero</span>, <span class="number">0x7856</span></span><br><span class="line"><span class="number">0x0000000000000014</span>:  <span class="number">3</span>C <span class="number">04</span> <span class="number">85</span> FF    <span class="keyword">lui </span>$<span class="built_in">a0</span>, <span class="number">0x85ff</span></span><br><span class="line"><span class="number">0x0000000000000018</span>:  <span class="number">34</span> <span class="number">05</span> <span class="number">00</span> <span class="number">01</span>    <span class="keyword">ori </span>$<span class="built_in">a1</span>, $<span class="built_in">zero</span>, <span class="number">1</span></span><br><span class="line"><span class="number">0x000000000000001c</span>:  <span class="number">3</span>C <span class="number">06</span> FF FF    <span class="keyword">lui </span>$<span class="built_in">a2</span>, <span class="number">0xffff</span></span><br><span class="line"><span class="number">0x0000000000000020</span>:  <span class="number">34</span> <span class="number">07</span> FF FF    <span class="keyword">ori </span>$<span class="built_in">a3</span>, $<span class="built_in">zero</span>, <span class="number">0xffff</span></span><br><span class="line"><span class="number">0x0000000000000024</span>:  <span class="number">00</span> <span class="number">22</span> <span class="number">08</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">v0</span></span><br><span class="line"><span class="number">0x0000000000000028</span>:  <span class="number">00</span> <span class="number">23</span> <span class="number">48</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">t1</span>, $<span class="built_in">at</span>, $<span class="built_in">v1</span></span><br><span class="line"><span class="number">0x000000000000002c</span>:  <span class="number">00</span> <span class="number">22</span> <span class="number">40</span> <span class="number">22</span>    <span class="keyword">sub </span>$<span class="built_in">t0</span>, $<span class="built_in">at</span>, $<span class="built_in">v0</span></span><br><span class="line"><span class="number">0x0000000000000030</span>:  <span class="number">00</span> E0 <span class="number">00</span> <span class="number">22</span>    <span class="keyword">sub </span>$<span class="built_in">zero</span>, $<span class="built_in">a3</span>, $<span class="built_in">zero</span></span><br><span class="line"><span class="number">0x0000000000000034</span>:  <span class="number">13</span> <span class="number">91</span> <span class="number">00</span> <span class="number">03</span>    <span class="keyword">beq </span>$<span class="built_in">gp</span>, $<span class="built_in">s1</span>, <span class="number">0x44</span></span><br><span class="line"><span class="number">0x0000000000000038</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x000000000000003c</span>:  <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">15</span>    <span class="keyword">b </span>  <span class="number">0x94</span></span><br><span class="line"><span class="number">0x0000000000000040</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000000044</span>:  <span class="number">10</span> <span class="number">22</span> <span class="number">00</span> <span class="number">13</span>    <span class="keyword">beq </span>$<span class="built_in">at</span>, $<span class="built_in">v0</span>, <span class="number">0x94</span></span><br><span class="line"><span class="number">0x0000000000000048</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x000000000000004c</span>:  <span class="number">34</span> <span class="number">02</span> <span class="number">00</span> <span class="number">0</span>C    <span class="keyword">ori </span>$<span class="built_in">v0</span>, $<span class="built_in">zero</span>, <span class="number">0xc</span></span><br><span class="line"><span class="number">0x0000000000000050</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000000054</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000000058</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x000000000000005c</span>:  <span class="number">0</span>C <span class="number">00</span> <span class="number">0</span>C <span class="number">1</span>B    <span class="keyword">jal </span><span class="number">0x306c</span></span><br><span class="line"><span class="number">0x0000000000000060</span>:  AC <span class="number">41</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">sw </span> $<span class="built_in">at</span>, ($<span class="built_in">v0</span>)</span><br><span class="line"><span class="number">0x0000000000000064</span>:  <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">0</span>B    <span class="keyword">b </span>  <span class="number">0x94</span></span><br><span class="line"><span class="number">0x0000000000000068</span>:  <span class="number">00</span> <span class="number">22</span> <span class="number">08</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">v0</span></span><br><span class="line"><span class="number">0x000000000000006c</span>:  <span class="number">00</span> <span class="number">22</span> <span class="number">08</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">v0</span></span><br><span class="line"><span class="number">0x0000000000000070</span>:  <span class="number">00</span> <span class="number">22</span> <span class="number">08</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">v0</span></span><br><span class="line"><span class="number">0x0000000000000074</span>:  <span class="number">00</span> <span class="number">22</span> <span class="number">08</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">v0</span></span><br><span class="line"><span class="number">0x0000000000000078</span>:  AC <span class="number">5</span>F <span class="number">00</span> <span class="number">00</span>    <span class="keyword">sw </span> $<span class="built_in">ra</span>, ($<span class="built_in">v0</span>)</span><br><span class="line"><span class="number">0x000000000000007c</span>:  <span class="number">8</span>C <span class="number">41</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">lw </span> $<span class="built_in">at</span>, ($<span class="built_in">v0</span>)</span><br><span class="line"><span class="number">0x0000000000000080</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000000084</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000000088</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x000000000000008c</span>:  <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">08</span>    <span class="keyword">jr </span> $<span class="built_in">at</span></span><br><span class="line"><span class="number">0x0000000000000090</span>:  AC <span class="number">5</span>F <span class="number">00</span> <span class="number">00</span>    <span class="keyword">sw </span> $<span class="built_in">ra</span>, ($<span class="built_in">v0</span>)</span><br><span class="line"><span class="number">0x0000000000000094</span>:  <span class="number">10</span> <span class="number">00</span> FF FF    <span class="keyword">b </span>  <span class="number">0x94</span></span><br><span class="line"><span class="number">0x0000000000000098</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span></span><br></pre></td></tr></table></figure><h2 id="标准输出"><a href="#标准输出" class="headerlink" title="标准输出"></a>标准输出</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@<span class="number">00003000</span>: $<span class="number">28</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003004</span>: $<span class="number">29</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003008</span>: $ <span class="number">1</span> &lt;= <span class="number">00001010</span></span><br><span class="line">@<span class="number">0000300</span>c: $ <span class="number">2</span> &lt;= <span class="number">87230000</span></span><br><span class="line">@<span class="number">00003010</span>: $ <span class="number">3</span> &lt;= <span class="number">00007856</span></span><br><span class="line">@<span class="number">00003014</span>: $ <span class="number">4</span> &lt;= <span class="number">85</span>ff0000</span><br><span class="line">@<span class="number">00003018</span>: $ <span class="number">5</span> &lt;= <span class="number">00000001</span></span><br><span class="line">@<span class="number">0000301</span>c: $ <span class="number">6</span> &lt;= ffff0000</span><br><span class="line">@<span class="number">00003020</span>: $ <span class="number">7</span> &lt;= <span class="number">0000</span>ffff</span><br><span class="line">@<span class="number">00003024</span>: $ <span class="number">1</span> &lt;= <span class="number">87231010</span></span><br><span class="line">@<span class="number">00003028</span>: $ <span class="number">9</span> &lt;= <span class="number">87238866</span></span><br><span class="line">@<span class="number">0000302</span>c: $ <span class="number">8</span> &lt;= <span class="number">00001010</span></span><br><span class="line">@<span class="number">00003030</span>: $ <span class="number">0</span> &lt;= <span class="number">0000</span>ffff</span><br><span class="line">@<span class="number">0000304</span>c: $ <span class="number">2</span> &lt;= <span class="number">0000000</span>c</span><br><span class="line">@<span class="number">0000305</span>c: $<span class="number">31</span> &lt;= <span class="number">00003064</span></span><br><span class="line">@<span class="number">00003060</span>: *<span class="number">0000000</span>c &lt;= <span class="number">87231010</span></span><br><span class="line">@<span class="number">0000306</span>c: $ <span class="number">1</span> &lt;= <span class="number">8723101</span>c</span><br><span class="line">@<span class="number">00003070</span>: $ <span class="number">1</span> &lt;= <span class="number">87231028</span></span><br><span class="line">@<span class="number">00003074</span>: $ <span class="number">1</span> &lt;= <span class="number">87231034</span></span><br><span class="line">@<span class="number">00003078</span>: *<span class="number">0000000</span>c &lt;= <span class="number">00003064</span></span><br><span class="line">@<span class="number">0000307</span>c: $ <span class="number">1</span> &lt;= <span class="number">00003064</span></span><br><span class="line">@<span class="number">00003090</span>: *<span class="number">0000000</span>c &lt;= <span class="number">00003064</span></span><br><span class="line">@<span class="number">00003068</span>: $ <span class="number">1</span> &lt;= <span class="number">00003070</span></span><br></pre></td></tr></table></figure><h2 id="所涉及的指令的手册解释"><a href="#所涉及的指令的手册解释" class="headerlink" title="所涉及的指令的手册解释"></a>所涉及的指令的手册解释</h2><img src="/2024/11/11/p5cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-23%20124456-1731308842899-2.png" class="" title="屏幕截图 2024-10-23 124456"><img src="/2024/11/11/p5cpu/image-20241030110029895-1731308842899-4.png" class="" title="image-20241030110029895"><img src="/2024/11/11/p5cpu/image-20241030110128847-1731308842899-3.png" class="" title="image-20241030110128847"><img src="/2024/11/11/p5cpu/image-20241030110256266-1731308842899-5.png" class="" title="image-20241030110256266"><p><img src="./p5cpu/image-20241030110149128-1731308842899-6.png" alt="image-20241030110149128"><img src="./p5cpu/image-20241030110215113-1731308842899-7.png" alt="image-20241030110215113"></p><img src="/2024/11/11/p5cpu/image-20241030110315747-1731308842899-10.png" class="" title="image-20241030110315747"><img src="/2024/11/11/p5cpu/image-20241030110343638-1731308842899-8.png" class="" title="image-20241030110343638"><img src="/2024/11/11/p5cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-23%20124227-1731308842899-9.png" class="" title="屏幕截图 2024-10-23 124227"><img src="/2024/11/11/p5cpu/image-20241030110407911-1731308842899-11.png" class="" title="image-20241030110407911"><img src="/2024/11/11/p5cpu/image-20241030110414004.png" class="" title="image-20241030110414004">]]></content>
      
      
      <categories>
          
          <category> buaa-co </category>
          
          <category> verilog </category>
          
          <category> 流水线cpu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> co </tag>
            
            <tag> cpu </tag>
            
            <tag> verilog </tag>
            
            <tag> P5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4-verilog单周期CPU（简化指令）</title>
      <link href="/2024/11/05/p4cpu.html"/>
      <url>/2024/11/05/p4cpu.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="verilog单周期CPU（简化指令）"><a href="#verilog单周期CPU（简化指令）" class="headerlink" title="verilog单周期CPU（简化指令）"></a>verilog单周期CPU（简化指令）</h1><h1 id="模块设计"><a href="#模块设计" class="headerlink" title="模块设计"></a>模块设计</h1><p><strong>整体视图：</strong></p><img src="/2024/11/05/p4cpu/image-20241030105712157.png" class="" title="image-20241030105712157"><img src="/2024/11/05/p4cpu/08fc7beb2771b32143f800bdf93535e.png" class="" title="08fc7beb2771b32143f800bdf93535e"><h3 id="1-GRF-寄存器堆"><a href="#1-GRF-寄存器堆" class="headerlink" title="1. GRF(寄存器堆)"></a>1. GRF(寄存器堆)</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>WE</td><td>Input</td><td>1</td><td>使能信号</td></tr><tr><td>PC</td><td>Input</td><td>31:0</td><td>pc</td></tr><tr><td>A1</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口1</td></tr><tr><td>A2</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口2</td></tr><tr><td>A3</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口3，写寄存器地址</td></tr><tr><td>WD</td><td>Input</td><td>31:0</td><td>数据输入端口，输入一个32位数据，存入编码为A3的寄存器中</td></tr><tr><td>RD1</td><td>Output</td><td>31:0</td><td>输出编码为A1中输入的寄存器中的值</td></tr><tr><td>RD2</td><td>Output</td><td>31:0</td><td>输出编码为A2中输入的寄存器中的值</td></tr></tbody></table></div><p><strong>初始化!!</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> GRF(</span><br><span class="line"><span class="keyword">input</span> clk,</span><br><span class="line"><span class="keyword">input</span> reset,</span><br><span class="line"><span class="keyword">input</span> WE,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] A1,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] A2,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">4</span>:<span class="number">0</span>] A3,</span><br><span class="line"><span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] WD,</span><br><span class="line"><span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] RD1,</span><br><span class="line"><span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] RD2</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] registers [<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line"><span class="keyword">integer</span> i;</span><br><span class="line"><span class="keyword">assign</span> RD1 = (A1 == <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : registers[A1];</span><br><span class="line"><span class="keyword">assign</span> RD2 = (A2 == <span class="number">5&#x27;b0</span>) ? <span class="number">32&#x27;b0</span> : registers[A2];</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i=i+<span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">registers[i]=<span class="number">32&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk ) <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(reset) <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i=i+<span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">registers[i]&lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(WE) <span class="keyword">begin</span></span><br><span class="line"><span class="built_in">$display</span>(<span class="string">&quot;@%h: $%d &lt;= %h&quot;</span>, PC, A3, WD);</span><br><span class="line">registers[A3]&lt;=WD;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="2-DM"><a href="#2-DM" class="headerlink" title="2. DM"></a>2. DM</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>PC</td><td>Input</td><td>31:0</td><td>pc</td></tr><tr><td>memwrite</td><td>Input</td><td>1</td><td>内存写使能</td></tr><tr><td>memaddr</td><td>Input</td><td>31:0</td><td>内存地址</td></tr><tr><td>memdata</td><td>Input</td><td>31:0</td><td>写入的内存数据</td></tr><tr><td>outdata</td><td>Output</td><td>31:0</td><td>输出的内存数据</td></tr></tbody></table></div><p>使用寄存器数组实现。<strong>初始化!!</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> DM (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] PC,</span><br><span class="line">    <span class="keyword">input</span> memwrite,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] memaddr,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] memdata,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] outdata</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] mem[<span class="number">4095</span>:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">integer</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assign</span> outdata = mem[memaddr[<span class="number">13</span>:<span class="number">2</span>]];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4096</span>; i = i + <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">            mem[i] = <span class="number">32&#x27;b0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4096</span>; i = i + <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">                mem[i] &lt;= <span class="number">32&#x27;b0</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (memwrite) <span class="keyword">begin</span></span><br><span class="line">                <span class="built_in">$display</span>(<span class="string">&quot;@%h: *%h &lt;= %h&quot;</span>, PC, &#123;<span class="number">22&#x27;b0</span>,memaddr[<span class="number">11</span>:<span class="number">0</span>]&#125;, memdata);</span><br><span class="line">                mem[memaddr[<span class="number">13</span>:<span class="number">2</span>]] &lt;= memdata;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>DM中一个字是一个地址</strong>，按字节为14位（16K），按字为12位地址（32bit*4096），端口应该连接ALU输出端的2~13位。</p><h3 id="3-NPC"><a href="#3-NPC" class="headerlink" title="3. NPC"></a>3. NPC</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>beq_if</td><td>Input</td><td>1</td><td>beq指令pc选择</td></tr><tr><td>zero</td><td>Input</td><td>1</td><td>beq指令相等判断</td></tr><tr><td>j_if</td><td>Input</td><td>1</td><td>j指令pc选择</td></tr><tr><td>jr_if</td><td>Input</td><td>1</td><td>jr指令pc选择</td></tr><tr><td>jal_if</td><td>Input</td><td>1</td><td>jal指令pc选择</td></tr><tr><td>imm</td><td>Input</td><td>31:0</td><td>位扩展后的立即数</td></tr><tr><td>j_addr</td><td>Input</td><td>25:0</td><td>j指令跳转地址</td></tr><tr><td>jr_addr</td><td>Input</td><td>31:0</td><td>jr指令跳转地址</td></tr><tr><td>NPC</td><td>Output</td><td>31:0</td><td>输出的真实pc值</td></tr><tr><td>NPC_4</td><td>Output</td><td>31:0</td><td>pc+4(用于jal指令写入$ra)</td></tr></tbody></table></div><p>外部引入两个对应位置的寄存器通过ALU的减法结果zero，通过与beq_if（判断指令是否为beq）连接,实现beq（<em>if$[rs]==$[rt]</em>）:  PC=PC+offest+4。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">module</span> NPC (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset,</span><br><span class="line">    <span class="keyword">input</span> beq_if,</span><br><span class="line">    <span class="keyword">input</span> j_if,</span><br><span class="line">    <span class="keyword">input</span> jr_if,</span><br><span class="line">    <span class="keyword">input</span> jal_if,</span><br><span class="line">    <span class="keyword">input</span> zero,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] imm,<span class="comment">//afterext</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">25</span>:<span class="number">0</span>] j_addr,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] jr_addr,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] NPC,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] NPC_4  <span class="comment">//pc+4</span></span><br><span class="line">);</span><br><span class="line">    <span class="keyword">assign</span> NPC_4 = (NPC + <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        NPC = <span class="number">32&#x27;h0000_3000</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span> (reset) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= <span class="number">32&#x27;h00003000</span>;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j_if == <span class="number">1&#x27;b1</span>||jal_if == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= &#123;NPC[<span class="number">31</span> : <span class="number">28</span>], j_addr, <span class="number">2&#x27;b00</span>&#125;;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (jr_if == <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= jr_addr;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (beq_if == <span class="number">1&#x27;b1</span>&amp;&amp;zero== <span class="number">1&#x27;b1</span>) <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= ((imm &lt;&lt; <span class="number">2</span>) + NPC + <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">            NPC &lt;= NPC_4;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-IM"><a href="#4-IM" class="headerlink" title="4.IM:"></a>4.IM:</h3><p>通过ROM元件存储和读入指令代码，PC在内部为0x00000000起始，而外部为<strong>0x00003000</strong>,需要减去一个偏移量</p><p><strong>ROM中一个字是一个地址</strong>，按字为12位地址端口应该连接ALU输出端的<strong>2~13</strong>位。</p><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>pc</td><td>Input</td><td>31:0</td><td>pc</td></tr><tr><td>inster</td><td>Output</td><td>31:0</td><td>指令机器码</td></tr><tr><td>Opcode</td><td>Output</td><td>5:0</td><td>高六位opcode</td></tr><tr><td>rs</td><td>Output</td><td>4:0</td><td>rs寄存器序号</td></tr><tr><td>rt</td><td>Output</td><td>4:0</td><td>rt寄存器序号</td></tr><tr><td>rd</td><td>Output</td><td>4:0</td><td>rd寄存器序号</td></tr><tr><td>s</td><td>Output</td><td>4:0</td><td>输出6-10位</td></tr><tr><td>func</td><td>Output</td><td>5:0</td><td>输出func码</td></tr><tr><td>imm</td><td>Output</td><td>15:0</td><td>输出低16位立即数imm</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> IM(</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] pc,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] instr,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">5</span>:<span class="number">0</span>] opcode,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">4</span>:<span class="number">0</span>] rs,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">4</span>:<span class="number">0</span>] rt,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">4</span>:<span class="number">0</span>] rd,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">4</span>:<span class="number">0</span>] s,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">5</span>:<span class="number">0</span>] func,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">15</span>:<span class="number">0</span>] imm</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>] mem[<span class="number">4095</span>:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] fakepc; </span><br><span class="line">    <span class="keyword">assign</span> fakepc = pc-<span class="number">32&#x27;h0000_3000</span>;</span><br><span class="line">    <span class="keyword">assign</span> instr = mem[fakepc[<span class="number">13</span>:<span class="number">2</span>]];</span><br><span class="line">    <span class="keyword">assign</span> opcode = instr[<span class="number">31</span>:<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">assign</span> rs = instr[<span class="number">25</span>:<span class="number">21</span>];</span><br><span class="line">    <span class="keyword">assign</span> rt = instr[<span class="number">20</span>:<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">assign</span> rd = instr[<span class="number">15</span>:<span class="number">11</span>];</span><br><span class="line">    <span class="keyword">assign</span> s = instr[<span class="number">10</span>:<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">assign</span> func = instr[<span class="number">5</span>:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">assign</span> imm = instr[<span class="number">15</span>:<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="built_in">$readmemh</span>(<span class="string">&quot;code.txt&quot;</span>, mem);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>使用<strong>$readmemh(“code.txt”, mem)</strong>指令读取文件，初始化im。</p><h3 id="5-ALU"><a href="#5-ALU" class="headerlink" title="5.ALU"></a>5.ALU</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>ALUOp</td><td>Input</td><td>3：0</td><td>ALU功能选择</td></tr><tr><td>A</td><td>Input</td><td>31：0</td><td>待处理数字1</td></tr><tr><td>B</td><td>Input</td><td>31：0</td><td>待处理数字2</td></tr><tr><td>result</td><td>Output</td><td>31：0</td><td>计算结果</td></tr><tr><td>zero</td><td>Output</td><td>1</td><td>计算结果为零</td></tr><tr><td>overflow</td><td>Output</td><td>1</td><td>溢出判断</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">`<span class="keyword">define</span> ADD 4&#x27;b0000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB  4&#x27;b0001</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> MUL 4&#x27;b0010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> DIV 4&#x27;b0011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> AND 4&#x27;b0100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OR 4&#x27;b0101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL 4&#x27;b0110</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL 4&#x27;b0111</span></span><br><span class="line"><span class="keyword">module</span> ALU(</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">3</span>:<span class="number">0</span>] aluop,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] A,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] B,</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] result,</span><br><span class="line">    <span class="keyword">output</span> zero,</span><br><span class="line">    <span class="keyword">output</span> overflow</span><br><span class="line">    );</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">0</span>] bit_33;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assign</span> overflow = bit_33[<span class="number">32</span>];</span><br><span class="line"><span class="keyword">assign</span> result = bit_33[<span class="number">31</span>:<span class="number">0</span>];</span><br><span class="line"><span class="keyword">assign</span> zero = (result==<span class="number">32&#x27;h00000000</span>)? <span class="number">1</span>:<span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span>(aluop) </span><br><span class="line">    `ADD: bit_33 = A + B;</span><br><span class="line">    `SUB: bit_33 = A - B;</span><br><span class="line">    `MUL: bit_33 = A * B;</span><br><span class="line">    `DIV: bit_33 = A / B;</span><br><span class="line">    `AND: bit_33 = A &amp; B;</span><br><span class="line">    `OR:  bit_33 = A | B;</span><br><span class="line">    `SLL: bit_33 = (A &lt;&lt; B[<span class="number">4</span>:<span class="number">0</span>]);</span><br><span class="line">    `SRL: bit_33 = (A &gt;&gt; B[<span class="number">4</span>:<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">default</span>: <span class="keyword">begin</span></span><br><span class="line">        bit_33 =<span class="number">33&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">endcase</span> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><em>ALUOp:</em>（留一位给剩下的）</p><div class="table-container"><table><thead><tr><th>0000</th><th>0001</th><th>0010</th><th>0011</th><th>0100</th><th>0101</th><th>0110</th><th>0111</th></tr></thead><tbody><tr><td>add</td><td>sub</td><td>mul</td><td>div</td><td>and</td><td>or</td><td>sll</td><td>srl</td></tr></tbody></table></div><h3 id="6-EXT"><a href="#6-EXT" class="headerlink" title="6.EXT"></a>6.EXT</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>imm</td><td>Input</td><td>15:0</td><td>16位立即数</td></tr><tr><td>extp</td><td>Input</td><td>1</td><td>位扩展选择功能</td></tr><tr><td>extresult</td><td>Output</td><td>31:0</td><td>位扩展计算结果</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> EXT (</span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">1</span>:<span class="number">0</span>] extop,</span><br><span class="line">    <span class="keyword">input</span>  [<span class="number">15</span>:<span class="number">0</span>] imm,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] extresult</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">assign</span> extresult = (extop == <span class="number">2&#x27;b00</span>) ? &#123;<span class="number">16&#x27;h0000</span>, imm&#125; :</span><br><span class="line">                    (extop == <span class="number">2&#x27;b01</span>) ? &#123;&#123;<span class="number">16</span>&#123;imm[<span class="number">15</span>]&#125;&#125;, imm&#125; :</span><br><span class="line">                    (extop == <span class="number">2&#x27;b10</span>) ? &#123;imm, <span class="number">16&#x27;h0000</span>&#125; : &#123;<span class="number">16&#x27;h0000</span>, imm&#125;;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th><em>EXTOp:</em></th><th>00</th><th>01</th><th>10</th><th>11</th></tr></thead><tbody><tr><td>功能</td><td>0扩展</td><td>符号扩展</td><td>高位加载</td><td>空余</td></tr></tbody></table></div><h3 id="7-CTRL"><a href="#7-CTRL" class="headerlink" title="7.CTRL"></a>7.CTRL</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>opcode</td><td>Input</td><td>5:0</td><td>高六位opcode</td></tr><tr><td>func</td><td>Input</td><td>5:0</td><td>低六位opcode</td></tr><tr><td>instr</td><td>Input</td><td>31:0</td><td>指令码</td></tr><tr><td>regwrite</td><td>Output</td><td>1</td><td>reg写使能</td></tr><tr><td>regwritedst</td><td>Output</td><td>1:0</td><td>寄存器写选择</td></tr><tr><td>alusrc</td><td>Output</td><td>1</td><td>alu选择imm入B口</td></tr><tr><td>memwrite</td><td>Output</td><td>1</td><td>mem写使能</td></tr><tr><td>memtoreg</td><td>Output</td><td>1</td><td>mem写入reg选择</td></tr><tr><td>jr_if</td><td>Output</td><td>1</td><td>jr判断</td></tr><tr><td>j_if</td><td>Output</td><td>1</td><td>j判断</td></tr><tr><td>jal_if</td><td>Output</td><td>1</td><td>jal判断</td></tr><tr><td>sll_if</td><td>Output</td><td>1</td><td>sll判断</td></tr><tr><td>srl_if</td><td>Output</td><td>1</td><td>srl判断</td></tr><tr><td>beq_if</td><td>Output</td><td>1</td><td>beq判断</td></tr><tr><td>extop</td><td>Output</td><td>1:0</td><td>ext功能选择</td></tr><tr><td>aluop</td><td>Output</td><td>3:0</td><td>alu功能选择</td></tr></tbody></table></div><p>通过输入的指令码各部分，进行操作状态输出。</p><p><strong><em> sll指令未实现</em></strong></p><div class="table-container"><table><thead><tr><th>执行指令</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>信号名</td><td>add</td><td>sub</td><td>andi</td><td>lui</td><td>ori</td><td>j</td><td>jal</td><td>jr</td><td>beq</td><td>sw</td><td>lw</td><td>nop</td><td>sll</td><td>srl</td></tr><tr><td>opcode</td><td>000000</td><td>000000</td><td>001100</td><td>001111</td><td>001101</td><td>000010</td><td>000011</td><td>000000</td><td>000100</td><td>101011</td><td>100011</td><td>000000</td><td>000000</td><td>000000</td></tr><tr><td>func</td><td>100000</td><td>100010</td><td></td><td></td><td></td><td></td><td></td><td>001000</td><td></td><td></td><td></td><td>000000</td><td>000000</td><td>000010</td></tr><tr><td>regwrite</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>regwritedst（2）</td><td>01(rd)</td><td>01</td><td>00</td><td>00</td><td>00(rt)</td><td>00</td><td>10($ra)</td><td>00</td><td>00</td><td>00</td><td>00</td><td>01</td><td>01</td><td>01</td></tr><tr><td>alusrc(imm)</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>memwrite</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>memtoreg</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>extop（2）</td><td>00</td><td>00</td><td>00</td><td>10</td><td>00</td><td>00</td><td>00</td><td>00</td><td>01</td><td>01</td><td>01</td><td>00</td><td>00</td><td>00</td></tr><tr><td>beq_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>j_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>jal_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>jr_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>sll_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td></tr><tr><td>srl_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>ALU_ctr3</td><td>0</td><td>0</td><td>1</td><td>0(add$0)</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>ALU_ctr2</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>ALU_ctr1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1(sub验证)</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table></div><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> OPCODE0 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ADD 6&#x27;b100000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SUB 6&#x27;b100010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ANDI 6&#x27;b001100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> ORI 6&#x27;b001101</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LUI 6&#x27;b001111</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> J 6&#x27;b000010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JAL 6&#x27;b000011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> JR 6&#x27;b001000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SW 6&#x27;b101011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> LW 6&#x27;b100011</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> BEQ 6&#x27;b000100</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> FUNC0 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SLL 6&#x27;b000000</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> SRL 6&#x27;b000010</span></span><br><span class="line"><span class="meta">`<span class="keyword">define</span> NOP 6&#x27;b000000</span></span><br><span class="line"><span class="keyword">module</span> CTRL (</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">0</span>] opcode,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">0</span>] func,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] instr,</span><br><span class="line">    <span class="keyword">output</span> regwrite,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst,</span><br><span class="line">    <span class="keyword">output</span> alusrc,</span><br><span class="line">    <span class="keyword">output</span> memwrite,</span><br><span class="line">    <span class="keyword">output</span> memtoreg,</span><br><span class="line">    <span class="keyword">output</span> beq_if,</span><br><span class="line">    <span class="keyword">output</span> j_if,</span><br><span class="line">    <span class="keyword">output</span> jr_if,</span><br><span class="line">    <span class="keyword">output</span> jal_if,</span><br><span class="line">    <span class="keyword">output</span> sll_if,</span><br><span class="line">    <span class="keyword">output</span> srl_if,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">1</span>:<span class="number">0</span>] extop,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">3</span>:<span class="number">0</span>] aluop</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">assign</span> &#123;regwrite,regwritedst,alusrc,memwrite,memtoreg,extop,beq_if,j_if,jal_if,jr_if,sll_if,srl_if,aluop&#125; = </span><br><span class="line">    (instr==<span class="number">32&#x27;b0</span>)?&#123;<span class="number">18&#x27;b0_00_0_00_00_000000_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`ADD)?&#123;<span class="number">18&#x27;b1_01_0_00_00_000000_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SUB)?&#123;<span class="number">18&#x27;b1_01_0_00_00_000000_0001</span>&#125;:</span><br><span class="line">    (opcode==`ANDI)?&#123;<span class="number">18&#x27;b1_00_1_00_00_000000_0100</span>&#125;:</span><br><span class="line"></span><br><span class="line">    (opcode==`LUI)?&#123;<span class="number">18&#x27;b1_00_1_00_10_000000_0000</span>&#125;:</span><br><span class="line"></span><br><span class="line">    (opcode==`ORI)?&#123;<span class="number">18&#x27;b1_00_1_00_00_000000_0101</span>&#125;:</span><br><span class="line"></span><br><span class="line">    (opcode==`J)?&#123;<span class="number">18&#x27;b0_00_0_00_00_010000_0000</span>&#125;:</span><br><span class="line">    (opcode==`JAL)?&#123;<span class="number">18&#x27;b1_10_0_00_00_001000_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`JR)?&#123;<span class="number">18&#x27;b0_00_0_00_00_000100_0000</span>&#125;:</span><br><span class="line">    (opcode==`BEQ)?&#123;<span class="number">18&#x27;b0_00_0_00_01_100000_0001</span>&#125;:</span><br><span class="line">    (opcode==`SW)?&#123;<span class="number">18&#x27;b0_00_1_10_01_000000_0000</span>&#125;:</span><br><span class="line">    (opcode==`LW)?&#123;<span class="number">18&#x27;b1_00_1_01_01_000000_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SLL)?&#123;<span class="number">18&#x27;b1_01_0_00_00_000010_0110</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SRL)?&#123;<span class="number">18&#x27;b1_01_0_00_00_000001_0111</span>&#125;:&#123;<span class="number">18&#x27;b0_00_0_00_00_000000_0000</span>&#125;;</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>各信号注意点：</p><ul><li>add、sub、jr指令需要先判断opcode再判断func。</li></ul><h2 id="8-MUX"><a href="#8-MUX" class="headerlink" title="8.MUX"></a>8.MUX</h2><div class="table-container"><table><thead><tr><th>名称/信号\</th><th>输出</th><th>00</th><th>01</th><th>10</th><th>11</th></tr></thead><tbody><tr><td>mem_or_alu</td><td>alu计算结果</td><td>mem数据</td><td></td><td></td></tr><tr><td>normal_or_ra(grfdatain)</td><td>mem_or_alu</td><td>jal_ra(PC+4)</td><td></td><td></td></tr><tr><td>grfwrite</td><td>rt</td><td>rd</td><td>0x1f(<strong>$31</strong>/<strong>$ra</strong>)</td><td></td></tr><tr><td>aluAin</td><td>rs</td><td>rt</td><td></td><td></td></tr><tr><td>grf_or_imm</td><td>GRF_2(rt)</td><td>extresult(扩展后的imm)</td><td></td><td></td></tr><tr><td>aluBin</td><td>grf_or_imm</td><td>s</td><td></td></tr></tbody></table></div><p>MUX均为32bit两位选择器，多余端口空余待未来使用。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">module</span> MUX(</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">1</span>:<span class="number">0</span>]sel,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] sel0,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] sel1,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] sel2,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>] sel3,</span><br><span class="line">    <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] out</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line"><span class="keyword">assign</span> out = (sel==<span class="number">2&#x27;b00</span>)?sel0:</span><br><span class="line">             (sel==<span class="number">2&#x27;b01</span>)?sel1:</span><br><span class="line">             (sel==<span class="number">2&#x27;b10</span>)?sel2:sel3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="9-mips-顶层模块"><a href="#9-mips-顶层模块" class="headerlink" title="9.mips(顶层模块)"></a>9.mips(顶层模块)</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> mips (</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> reset</span><br><span class="line">);</span><br><span class="line">    <span class="comment">//im</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] pc;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] jal_ra;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>] opcode;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>] func;</span><br><span class="line">    <span class="comment">//ctrl</span></span><br><span class="line">    <span class="keyword">wire</span> regwrite;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] regwritedst;</span><br><span class="line">    <span class="keyword">wire</span> alusrc;</span><br><span class="line">    <span class="comment">//dm</span></span><br><span class="line">    <span class="keyword">wire</span> memwrite;</span><br><span class="line">    <span class="keyword">wire</span> memtoreg;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] memoutdata;</span><br><span class="line">    <span class="comment">//ctrl</span></span><br><span class="line">    <span class="keyword">wire</span> beq_if;</span><br><span class="line">    <span class="keyword">wire</span> j_if;</span><br><span class="line">    <span class="keyword">wire</span> jr_if;</span><br><span class="line">    <span class="keyword">wire</span> jal_if;</span><br><span class="line">    <span class="keyword">wire</span> sll_if;</span><br><span class="line">    <span class="keyword">wire</span> srl_if;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">1</span>:<span class="number">0</span>] extop;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">3</span>:<span class="number">0</span>] aluop;</span><br><span class="line">    <span class="comment">//alu</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] aluA;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] aluB;</span><br><span class="line">    <span class="keyword">wire</span> zero;</span><br><span class="line">    <span class="keyword">wire</span> overflow;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] aluresult;</span><br><span class="line">    <span class="comment">//im</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] instr;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] rs;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] rt;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] rd;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">4</span>:<span class="number">0</span>] s;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">15</span>:<span class="number">0</span>] imm;</span><br><span class="line">    <span class="comment">//ext</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] extresult;</span><br><span class="line">    <span class="comment">//grf</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] grf_1;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] grf_2;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] grfwriteaddr;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] grfdatain;</span><br><span class="line">    <span class="comment">//muxfor</span></span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] mem_or_alu_out;</span><br><span class="line">    <span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>] grf_2_or_imm;</span><br><span class="line"></span><br><span class="line">    CTRL ctrl (  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.instr</span>(instr),</span><br><span class="line">        <span class="variable">.opcode</span>(opcode),</span><br><span class="line">        <span class="variable">.func</span>(func),</span><br><span class="line">        <span class="variable">.regwrite</span>(regwrite),</span><br><span class="line">        <span class="variable">.regwritedst</span>(regwritedst),</span><br><span class="line">        <span class="variable">.alusrc</span>(alusrc),</span><br><span class="line">        <span class="variable">.memwrite</span>(memwrite),</span><br><span class="line">        <span class="variable">.memtoreg</span>(memtoreg),</span><br><span class="line">        <span class="variable">.beq_if</span>(beq_if),</span><br><span class="line">        <span class="variable">.j_if</span>(j_if),</span><br><span class="line">        <span class="variable">.jr_if</span>(jr_if),</span><br><span class="line">        <span class="variable">.jal_if</span>(jal_if),</span><br><span class="line">        <span class="variable">.sll_if</span>(sll_if),</span><br><span class="line">        <span class="variable">.srl_if</span>(srl_if),</span><br><span class="line">        <span class="variable">.extop</span>(extop),</span><br><span class="line">        <span class="variable">.aluop</span>(aluop)</span><br><span class="line">    );</span><br><span class="line">    MUX mem_or_alu (</span><br><span class="line">        <span class="variable">.sel</span>(&#123;<span class="number">1&#x27;b0</span>, memtoreg&#125;),</span><br><span class="line">        <span class="variable">.sel0</span>(aluresult),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel1</span>(memoutdata),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel2</span>(<span class="number">32&#x27;h00000000</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel3</span>(<span class="number">32&#x27;h00000000</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.out</span>(mem_or_alu_out)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    MUX normal_or_ra (</span><br><span class="line">        <span class="variable">.sel</span>(&#123;<span class="number">1&#x27;b0</span>, jal_if&#125;),<span class="comment">//grf写入寄存器选择</span></span><br><span class="line">        <span class="variable">.sel0</span>(mem_or_alu_out),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel1</span>(jal_ra),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel2</span>(<span class="number">32&#x27;h00000000</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel3</span>(<span class="number">32&#x27;h00000000</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.out</span>(grfdatain)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    GRF grf (</span><br><span class="line">        <span class="variable">.clk</span>(clk),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC</span>(pc),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WE</span>(regwrite),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.A1</span>(rs),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.A2</span>(rt),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.A3</span>(grfwriteaddr[<span class="number">4</span>:<span class="number">0</span>]),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.WD</span>(grfdatain),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.RD1</span>(grf_1),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.RD2</span>(grf_2)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    IM im (</span><br><span class="line">        <span class="variable">.pc</span>(pc),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.instr</span>(instr),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.opcode</span>(opcode),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.rs</span>(rs),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.rt</span>(rt),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.rd</span>(rd),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.s</span>(s),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.func</span>(func),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.imm</span>(imm)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    EXT ext (</span><br><span class="line">        <span class="variable">.extop</span>(extop),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.imm</span>(imm),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.extresult</span>(extresult)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">wire</span> s_if;</span><br><span class="line">    <span class="keyword">assign</span> s_if=sll_if|srl_if;</span><br><span class="line">    MUX grf_or_imm (</span><br><span class="line">        <span class="variable">.sel</span>(&#123;<span class="number">1&#x27;b0</span>, alusrc&#125;),</span><br><span class="line">        <span class="variable">.sel0</span>(grf_2),  <span class="comment">// </span></span><br><span class="line">        <span class="variable">.sel1</span>(extresult),</span><br><span class="line">        <span class="variable">.sel2</span>(<span class="number">32&#x27;h00000000</span>),</span><br><span class="line">        <span class="variable">.sel3</span>(<span class="number">32&#x27;h00000000</span>),</span><br><span class="line">        <span class="variable">.out</span>(grf_2_or_imm)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    MUX aluBin (</span><br><span class="line">        <span class="variable">.sel</span>(&#123;<span class="number">1&#x27;b0</span>, s_if&#125;),</span><br><span class="line">        <span class="variable">.sel0</span>(grf_2_or_imm),  <span class="comment">// </span></span><br><span class="line">        <span class="variable">.sel1</span>(&#123;<span class="number">27&#x27;b0</span>,s&#125;),</span><br><span class="line">        <span class="variable">.sel2</span>(<span class="number">32&#x27;h00000000</span>),</span><br><span class="line">        <span class="variable">.sel3</span>(<span class="number">32&#x27;h00000000</span>),</span><br><span class="line">        <span class="variable">.out</span>(aluB)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    MUX aluAin (</span><br><span class="line">        <span class="variable">.sel</span>(&#123;<span class="number">1&#x27;b0</span>, s_if&#125;),</span><br><span class="line">        <span class="variable">.sel0</span>(grf_1),  <span class="comment">// </span></span><br><span class="line">        <span class="variable">.sel1</span>(grf_2),</span><br><span class="line">        <span class="variable">.sel2</span>(<span class="number">32&#x27;h00000000</span>),</span><br><span class="line">        <span class="variable">.sel3</span>(<span class="number">32&#x27;h00000000</span>),</span><br><span class="line">        <span class="variable">.out</span>(aluA)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    ALU alu (</span><br><span class="line">        <span class="variable">.aluop</span>(aluop),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.A</span>(aluA),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.B</span>(aluB),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.result</span>(aluresult),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.zero</span>(zero),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.overflow</span>(overflow)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    MUX grfwrite (</span><br><span class="line">        <span class="variable">.sel</span>(regwritedst),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel0</span>(&#123;<span class="number">27&#x27;b0</span>, rt&#125;),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel1</span>(&#123;<span class="number">27&#x27;b0</span>, rd&#125;),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel2</span>(<span class="number">32&#x27;b11111</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.sel3</span>(<span class="number">32&#x27;h00000000</span>),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.out</span>(grfwriteaddr)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    NPC npc (</span><br><span class="line">        <span class="variable">.clk</span>(clk),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.beq_if</span>(beq_if),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.j_if</span>(j_if),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.jr_if</span>(jr_if),</span><br><span class="line">        <span class="variable">.jal_if</span>(jal_if),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.zero</span>(zero),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.imm</span>(extresult),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.j_addr</span>(instr[<span class="number">25</span>:<span class="number">0</span>]),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.jr_addr</span>(grf_1),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.NPC</span>(pc),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.NPC_4</span>(jal_ra)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line">    DM dm (</span><br><span class="line">        <span class="variable">.clk</span>(clk),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.reset</span>(reset),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.PC</span>(pc),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.memwrite</span>(memwrite),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.memaddr</span>(aluresult),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.memdata</span>(grf_2),  <span class="comment">//</span></span><br><span class="line">        <span class="variable">.outdata</span>(memoutdata)  <span class="comment">//</span></span><br><span class="line">    );</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="测试方案"><a href="#测试方案" class="headerlink" title="测试方案"></a>测试方案</h1><p>通过mars编写汇编程序，编写相关测试代码，将mars生成的机器码通过文件导入到verilog，通过向输出中间数据，和mars进行对拍，以此验证各代码是否运行正确。</p><h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>addr信号来自于ALU的结果，地址信号 addr 位数为什么是 [11:2] 而不是 [9:0]是因为DM是按照字存储的，需要除以4，同时低两位用于其他作用，不可使用。</p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>如果采用<strong>控制信号每种取值所对应的指令</strong>：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assign</span> regwrite = ((opcode==`OPCODE0&amp;&amp;(func==`ADD||func==`SUB))||opcode==`ANDI||opcode==`ORI||opcode==`LUI||opcode==`JAL||opcode==`LW)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> regwritedst = (opcode==`OPCODE0&amp;&amp;(func==`ADD||func==`SUB||func==`SLL))?<span class="number">2&#x27;b01</span>:</span><br><span class="line">    (opcode==`JAL)?<span class="number">2&#x27;b10</span>:<span class="number">2&#x27;b00</span>;</span><br><span class="line">    <span class="keyword">assign</span> alusrc = (opcode==`ANDI||opcode==`ORI||opcode==`LUI||opcode==`SW||opcode==`LW)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> memwrite = (opcode==`SW)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> memtoreg = (opcode==`LW)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> extop = (opcode==`SW||opcode==`LW||opcode==`BEQ)?<span class="number">2&#x27;b01</span>:</span><br><span class="line">    (opcode==`LUI)?<span class="number">2&#x27;b10</span>:<span class="number">2&#x27;b00</span>;</span><br><span class="line">    <span class="keyword">assign</span> beq_if = (opcode==`BEQ)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> j_if = (opcode==`J)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> jal_if = (opcode==`JAL)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> jr_if = (opcode==`OPCODE0&amp;&amp;func==`JR)?<span class="number">1&#x27;b1</span>:<span class="number">1&#x27;b0</span>;</span><br><span class="line">    <span class="keyword">assign</span> aluop = </span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`ADD)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SUB)?<span class="number">4&#x27;b0001</span>:</span><br><span class="line">    (opcode==`ANDI)?<span class="number">4&#x27;b0100</span>:</span><br><span class="line">    (opcode==`ORI)?<span class="number">4&#x27;b0101</span>:</span><br><span class="line">    (opcode==`LUI)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`J)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`JAL)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`JR)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`BEQ)?<span class="number">4&#x27;b0001</span>:</span><br><span class="line">    (opcode==`SW)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`LW)?<span class="number">4&#x27;b0000</span>:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SLL)?<span class="number">4&#x27;b0000</span>:<span class="number">4&#x27;b0000</span>;</span><br></pre></td></tr></table></figure><p>这种做法是可以方便地管理不同信号的控制，如果新添加信号只需要更改对应信号控制即可，但是如果要添加的指令过多可能存在修改过多信号的问题，而且不便于管理同类命令。</p><p>如果采用<strong>指令对应的控制信号如何取值</strong>：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assign</span> &#123;regwrite,regwritedst,alusrc,memwrite,memtoreg,extop,beq_if,j_if,jal_if,jr_if,aluop&#125; = </span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`ADD)?&#123;<span class="number">16&#x27;b1_01_0_00_00_0000_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SUB)?&#123;<span class="number">16&#x27;b1_01_0_00_00_0000_0001</span>&#125;:</span><br><span class="line">    (opcode==`ANDI)?&#123;<span class="number">16&#x27;b1_00_1_00_00_0000_0100</span>&#125;:</span><br><span class="line"></span><br><span class="line">    (opcode==`LUI)?&#123;<span class="number">16&#x27;b1_00_1_00_10_0000_0000</span>&#125;:</span><br><span class="line"></span><br><span class="line">    (opcode==`ORI)?&#123;<span class="number">16&#x27;b1_00_1_00_00_0000_0101</span>&#125;:</span><br><span class="line"></span><br><span class="line">    (opcode==`J)?&#123;<span class="number">16&#x27;b0_00_0_00_00_0100_0000</span>&#125;:</span><br><span class="line">    (opcode==`JAL)?&#123;<span class="number">16&#x27;b1_10_0_00_00_0010_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`JR)?&#123;<span class="number">16&#x27;b0_00_0_00_00_0001_0000</span>&#125;:</span><br><span class="line">    (opcode==`BEQ)?&#123;<span class="number">16&#x27;b0_00_0_00_01_1000_0001</span>&#125;:</span><br><span class="line">    (opcode==`SW)?&#123;<span class="number">16&#x27;b0_00_1_10_01_0000_0000</span>&#125;:</span><br><span class="line">    (opcode==`LW)?&#123;<span class="number">16&#x27;b1_00_1_01_01_0000_0000</span>&#125;:</span><br><span class="line">    (opcode==`OPCODE0&amp;&amp;func==`SLL)?&#123;<span class="number">16&#x27;b0_01_0_00_00_0000_0000</span>&#125;:&#123;<span class="number">16&#x27;b0_00_0_00_00_0000_0000</span>&#125;;</span><br></pre></td></tr></table></figure><p>这种优点是可以分类管理不同的命令，如果要新添加命令就只需要添加对应命令的所有信号输出即可，不会影响其他命令，缺点是如果新添加的命令有新的信号，剩下的所有命令也需要更改输出信号格式。</p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p><strong>同步复位</strong>：只有clk处于上升沿时，reset为高电平才能复位，所有元器件<strong>同步</strong>在时钟上升沿复位。</p><p><strong>异步复位</strong>：只要reset为上升沿，元器件就会复位，与clk信号无关，是<strong>异步</strong>的。</p><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>add和addu,addi 与 addiu,本质上只是是否考虑溢出的问题，MIPS本身都是对其进行无符号运算，如果不考虑溢出自然是相同的。</p><h1 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h1><h2 id="题目测试代码翻译："><a href="#题目测试代码翻译：" class="headerlink" title="题目测试代码翻译："></a>题目测试代码翻译：</h2><figure class="highlight mips"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x0000000000003000</span>: <span class="number">34</span> <span class="number">1</span>C <span class="number">00</span> <span class="number">00</span> <span class="keyword">ori </span>$<span class="built_in">gp</span>, $<span class="built_in">zero</span>, <span class="number">0</span> </span><br><span class="line"><span class="number">0x0000000000003004</span>: <span class="number">34</span> <span class="number">1</span>D <span class="number">00</span> <span class="number">00</span> <span class="keyword">ori </span>$<span class="built_in">sp</span>, $<span class="built_in">zero</span>, <span class="number">0</span> </span><br><span class="line"><span class="number">0x0000000000003008</span>: <span class="number">34</span> <span class="number">01</span> <span class="number">34</span> <span class="number">56</span> <span class="keyword">ori </span>$<span class="built_in">at</span>, $<span class="built_in">zero</span>, <span class="number">0x3456</span> </span><br><span class="line"><span class="number">0x000000000000300c</span>: <span class="number">00</span> <span class="number">21</span> <span class="number">08</span> <span class="number">20</span> <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">at</span> </span><br><span class="line"><span class="number">0x0000000000003010</span>: <span class="number">8</span>C <span class="number">01</span> <span class="number">00</span> <span class="number">04</span> <span class="keyword">lw </span>$<span class="built_in">at</span>, <span class="number">4</span>($<span class="built_in">zero</span>) </span><br><span class="line"><span class="number">0x0000000000003014</span>: AC <span class="number">01</span> <span class="number">00</span> <span class="number">04</span> <span class="keyword">sw </span>$<span class="built_in">at</span>, <span class="number">4</span>($<span class="built_in">zero</span>) </span><br><span class="line"><span class="number">0x0000000000003018</span>: <span class="number">3</span>C <span class="number">02</span> <span class="number">78</span> <span class="number">78</span> <span class="keyword">lui </span>$<span class="built_in">v0</span>, <span class="number">0x7878</span> </span><br><span class="line"><span class="number">0x000000000000301c</span>: <span class="number">00</span> <span class="number">41</span> <span class="number">18</span> <span class="number">22</span> <span class="keyword">sub </span>$<span class="built_in">v1</span>, $<span class="built_in">v0</span>, $<span class="built_in">at</span> </span><br><span class="line"><span class="number">0x0000000000003020</span>: <span class="number">3</span>C <span class="number">05</span> <span class="number">12</span> <span class="number">34</span> <span class="keyword">lui </span>$<span class="built_in">a1</span>, <span class="number">0x1234</span> </span><br><span class="line"><span class="number">0x0000000000003024</span>: <span class="number">34</span> <span class="number">04</span> <span class="number">00</span> <span class="number">05</span> <span class="keyword">ori </span>$<span class="built_in">a0</span>, $<span class="built_in">zero</span>, <span class="number">5</span> </span><br><span class="line"><span class="number">0x0000000000003028</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x000000000000302c</span>: AC <span class="number">85</span> FF FF <span class="keyword">sw </span>$<span class="built_in">a1</span>, -<span class="number">1</span>($<span class="built_in">a0</span>) </span><br><span class="line"><span class="number">0x0000000000003030</span>: <span class="number">8</span>C <span class="number">83</span> FF FF <span class="keyword">lw </span>$<span class="built_in">v1</span>, -<span class="number">1</span>($<span class="built_in">a0</span>) </span><br><span class="line"><span class="number">0x0000000000003034</span>: <span class="number">10</span> <span class="number">65</span> <span class="number">00</span> <span class="number">03</span> <span class="keyword">beq </span>$<span class="built_in">v1</span>, $<span class="built_in">a1</span>, <span class="number">0x44</span> </span><br><span class="line"><span class="number">0x0000000000003038</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x000000000000303c</span>: <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">11</span> <span class="keyword">b </span><span class="number">0x84</span> </span><br><span class="line"><span class="number">0x0000000000003040</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000003044</span>: <span class="number">34</span> <span class="number">67</span> <span class="number">04</span> <span class="number">04</span> <span class="keyword">ori </span>$<span class="built_in">a3</span>, $<span class="built_in">v1</span>, <span class="number">0x404</span> </span><br><span class="line"><span class="number">0x0000000000003048</span>: <span class="number">10</span> E3 <span class="number">00</span> <span class="number">0</span>E <span class="keyword">beq </span>$<span class="built_in">a3</span>, $<span class="built_in">v1</span>, <span class="number">0x84</span> </span><br><span class="line"><span class="number">0x000000000000304c</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000003050</span>: <span class="number">3</span>C <span class="number">08</span> <span class="number">77</span> <span class="number">77</span> <span class="keyword">lui </span>$<span class="built_in">t0</span>, <span class="number">0x7777</span> </span><br><span class="line"><span class="number">0x0000000000003054</span>: <span class="number">35</span> <span class="number">08</span> FF FF <span class="keyword">ori </span>$<span class="built_in">t0</span>, $<span class="built_in">t0</span>, <span class="number">0xffff</span> </span><br><span class="line"><span class="number">0x0000000000003058</span>: <span class="number">00</span> <span class="number">08</span> <span class="number">00</span> <span class="number">22</span> neg $<span class="built_in">zero</span>, $<span class="built_in">t0</span> </span><br><span class="line"><span class="number">0x000000000000305c</span>: <span class="number">34</span> <span class="number">00</span> <span class="number">11</span> <span class="number">00</span> <span class="keyword">ori </span>$<span class="built_in">zero</span>, $<span class="built_in">zero</span>, <span class="number">0x1100</span> </span><br><span class="line"><span class="number">0x0000000000003060</span>: <span class="number">00</span> E6 <span class="number">50</span> <span class="number">20</span> <span class="keyword">add </span>$<span class="built_in">t2</span>, $<span class="built_in">a3</span>, $<span class="built_in">a2</span> </span><br><span class="line"><span class="number">0x0000000000003064</span>: <span class="number">34</span> <span class="number">08</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">ori </span>$<span class="built_in">t0</span>, $<span class="built_in">zero</span>, <span class="number">0</span> </span><br><span class="line"><span class="number">0x0000000000003068</span>: <span class="number">34</span> <span class="number">09</span> <span class="number">00</span> <span class="number">01</span> <span class="keyword">ori </span>$<span class="built_in">t1</span>, $<span class="built_in">zero</span>, <span class="number">1</span> </span><br><span class="line"><span class="number">0x000000000000306c</span>: <span class="number">34</span> <span class="number">0</span>A <span class="number">00</span> <span class="number">01</span> <span class="keyword">ori </span>$<span class="built_in">t2</span>, $<span class="built_in">zero</span>, <span class="number">1</span> </span><br><span class="line"><span class="number">0x0000000000003070</span>: <span class="number">01</span> <span class="number">0</span>A <span class="number">40</span> <span class="number">20</span> <span class="keyword">add </span>$<span class="built_in">t0</span>, $<span class="built_in">t0</span>, $<span class="built_in">t2</span> </span><br><span class="line"><span class="number">0x0000000000003074</span>: <span class="number">11</span> <span class="number">09</span> FF FE <span class="keyword">beq </span>$<span class="built_in">t0</span>, $<span class="built_in">t1</span>, <span class="number">0x70</span> </span><br><span class="line"><span class="number">0x0000000000003078</span>: <span class="number">0</span>C <span class="number">00</span> <span class="number">0</span>C <span class="number">22</span> <span class="keyword">jal </span><span class="number">0x3088</span> </span><br><span class="line"><span class="number">0x000000000000307c</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">nop </span></span><br><span class="line"><span class="number">0x0000000000003080</span>: <span class="number">01</span> <span class="number">4</span>A <span class="number">50</span> <span class="number">20</span> <span class="keyword">add </span>$<span class="built_in">t2</span>, $<span class="built_in">t2</span>, $<span class="built_in">t2</span> </span><br><span class="line"><span class="number">0x0000000000003084</span>: <span class="number">10</span> <span class="number">00</span> FF FF <span class="keyword">b </span><span class="number">0x84</span> </span><br><span class="line"><span class="number">0x0000000000003088</span>: <span class="number">01</span> <span class="number">4</span>A <span class="number">50</span> <span class="number">20</span> <span class="keyword">add </span>$<span class="built_in">t2</span>, $<span class="built_in">t2</span>, $<span class="built_in">t2</span> </span><br><span class="line"><span class="number">0x000000000000308c</span>: <span class="number">03</span> E0 <span class="number">00</span> <span class="number">08</span> <span class="keyword">jr </span>$<span class="built_in">ra</span> </span><br><span class="line"><span class="number">0x0000000000003090</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="keyword">nop</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">@<span class="number">00003000</span>: $<span class="number">28</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003004</span>: $<span class="number">29</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003008</span>: $ <span class="number">1</span> &lt;= <span class="number">00003456</span></span><br><span class="line">@<span class="number">0000300</span>c: $ <span class="number">1</span> &lt;= <span class="number">000068</span>ac</span><br><span class="line">@<span class="number">00003010</span>: $ <span class="number">1</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003014</span>: *<span class="number">00000004</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003018</span>: $ <span class="number">2</span> &lt;= <span class="number">78780000</span></span><br><span class="line">@<span class="number">0000301</span>c: $ <span class="number">3</span> &lt;= <span class="number">78780000</span></span><br><span class="line">@<span class="number">00003020</span>: $ <span class="number">5</span> &lt;= <span class="number">12340000</span></span><br><span class="line">@<span class="number">00003024</span>: $ <span class="number">4</span> &lt;= <span class="number">00000005</span></span><br><span class="line">@<span class="number">0000302</span>c: *<span class="number">00000004</span> &lt;= <span class="number">12340000</span></span><br><span class="line">@<span class="number">00003030</span>: $ <span class="number">3</span> &lt;= <span class="number">12340000</span></span><br><span class="line">@<span class="number">00003044</span>: $ <span class="number">7</span> &lt;= <span class="number">12340404</span></span><br><span class="line">@<span class="number">00003050</span>: $ <span class="number">8</span> &lt;= <span class="number">77770000</span></span><br><span class="line">@<span class="number">00003054</span>: $ <span class="number">8</span> &lt;= <span class="number">7777</span>ffff</span><br><span class="line">@<span class="number">00003058</span>: $ <span class="number">0</span> &lt;= <span class="number">88880001</span></span><br><span class="line">@<span class="number">0000305</span>c: $ <span class="number">0</span> &lt;= <span class="number">00001100</span></span><br><span class="line">@<span class="number">00003060</span>: $<span class="number">10</span> &lt;= <span class="number">12340404</span></span><br><span class="line">@<span class="number">00003064</span>: $ <span class="number">8</span> &lt;= <span class="number">00000000</span></span><br><span class="line">@<span class="number">00003068</span>: $ <span class="number">9</span> &lt;= <span class="number">00000001</span></span><br><span class="line">@<span class="number">0000306</span>c: $<span class="number">10</span> &lt;= <span class="number">00000001</span></span><br><span class="line">@<span class="number">00003070</span>: $ <span class="number">8</span> &lt;= <span class="number">00000001</span></span><br><span class="line">@<span class="number">00003070</span>: $ <span class="number">8</span> &lt;= <span class="number">00000002</span></span><br><span class="line">@<span class="number">00003078</span>: $<span class="number">31</span> &lt;= <span class="number">0000307</span>c</span><br><span class="line">@<span class="number">00003088</span>: $<span class="number">10</span> &lt;= <span class="number">00000002</span></span><br><span class="line">@<span class="number">00003080</span>: $<span class="number">10</span> &lt;= <span class="number">00000004</span></span><br></pre></td></tr></table></figure><h2 id="所涉及的指令的手册解释"><a href="#所涉及的指令的手册解释" class="headerlink" title="所涉及的指令的手册解释"></a>所涉及的指令的手册解释</h2><img src="/2024/11/05/p4cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-23%20124456.png" class="" title="屏幕截图 2024-10-23 124456"><img src="/2024/11/05/p4cpu/image-20241030110029895.png" class="" title="image-20241030110029895"><img src="/2024/11/05/p4cpu/image-20241030110128847.png" class="" title="image-20241030110128847"><img src="/2024/11/05/p4cpu/image-20241030110256266.png" class="" title="image-20241030110256266"><p><img src="./p4cpu/image-20241030110149128.png" alt="image-20241030110149128"><img src="./p4cpu/image-20241030110215113.png" alt="image-20241030110215113"></p><img src="/2024/11/05/p4cpu/image-20241030110315747.png" class="" title="image-20241030110315747"><img src="/2024/11/05/p4cpu/image-20241030110343638.png" class="" title="image-20241030110343638"><img src="/2024/11/05/p4cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-23%20124227.png" class="" title="屏幕截图 2024-10-23 124227"><img src="/2024/11/05/p4cpu/image-20241030110407911.png" class="" title="image-20241030110407911"><img src="/2024/11/05/p4cpu/image-20241030110414004.png" class="" title="image-20241030110414004">]]></content>
      
      
      <categories>
          
          <category> buaa-co </category>
          
          <category> verilog </category>
          
          <category> 单周期cpu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> co </tag>
            
            <tag> cpu </tag>
            
            <tag> verilog </tag>
            
            <tag> P4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3-logisim单周期CPU（简化指令）</title>
      <link href="/2024/10/23/p3cpu.html"/>
      <url>/2024/10/23/p3cpu.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="logisim单周期CPU（简化指令）"><a href="#logisim单周期CPU（简化指令）" class="headerlink" title="logisim单周期CPU（简化指令）"></a>logisim单周期CPU（简化指令）</h1><h1 id="模块设计"><a href="#模块设计" class="headerlink" title="模块设计"></a>模块设计</h1><p><strong>整体视图：</strong></p><img src="/2024/10/23/p3cpu/image-20241023122425027.png" class="" title="image-20241023122425027"><h3 id="1-GRF-寄存器堆"><a href="#1-GRF-寄存器堆" class="headerlink" title="1. GRF(寄存器堆)"></a>1. GRF(寄存器堆)</h3><img src="/2024/10/23/p3cpu/image-20241023122348957.png" class="" title="image-20241023122348957"><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>WE</td><td>Input</td><td>1</td><td>使能信号</td></tr><tr><td>A1</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口1，对应指令码25：21</td></tr><tr><td>A2</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口2，对应指令码20：16</td></tr><tr><td>A3</td><td>Input</td><td>4:0</td><td>输入寄存器地址端口3，根据R型或I型指令分别对应指令码15：11和20：16</td></tr><tr><td>WD</td><td>Input</td><td>31:0</td><td>数据输入端口，输入一个32位数据，存入编码为A3的寄存器中</td></tr><tr><td>RD1</td><td>Output</td><td>31:0</td><td>输出编码为A1中输入的寄存器中的值</td></tr><tr><td>RD2</td><td>Output</td><td>31:0</td><td>输出编码为A2中输入的寄存器中的值</td></tr></tbody></table></div><h3 id="2-DM"><a href="#2-DM" class="headerlink" title="2. DM"></a>2. DM</h3><img src="/2024/10/23/p3cpu/image-20241023122532012.png" class="" title="image-20241023122532012"><p>使用一个RAM实现，str口连接MemWrite信号，ld口连接Mem2Reg信号，clr口连接reset异步复位信号，输入数据为GRF模块的RD2口。</p><p><strong>DM中一个字是一个地址</strong>，按字节为14位（16K），按字为12位地址端口应该连接ALU输出端的2~13位。</p><h3 id="3-IFU"><a href="#3-IFU" class="headerlink" title="3. IFU"></a>3. IFU</h3><img src="/2024/10/23/p3cpu/image-20241023122556389.png" class="" title="image-20241023122556389"><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>clk</td><td>Input</td><td>1</td><td>时钟信号</td></tr><tr><td>reset</td><td>Input</td><td>1</td><td>复位信号</td></tr><tr><td>beq_if</td><td>Input</td><td>1</td><td>beq使能信号</td></tr><tr><td>j_if</td><td>Input</td><td>1</td><td>j指令pc选择</td></tr><tr><td>Inster</td><td>Output</td><td>31：0</td><td>当前pc所指内存对应指令码</td></tr><tr><td>pc</td><td>Output</td><td>31：0</td><td>输出的真实pc值（偏移0x00003000）</td></tr></tbody></table></div><p>外部引入两个对应位置的寄存器通过ALU的减法结果，通过与门和nPC_Sel（判断指令是否为beq）连接,实现beq（if$[rs]==$[rt]）:  PC=PC+offest+4。</p><h3 id="IM"><a href="#IM" class="headerlink" title="IM:"></a>IM:</h3><p>通过ROM元件存储和读入指令代码，PC在内部为0x00000000起始，而外部为<strong>0x00003000</strong>,需要加一个偏移量，之后j型指令需注意地址问题。</p><p><strong>ROM中一个字是一个地址</strong>，按字为12位地址端口应该连接ALU输出端的2~13位。</p><h3 id="4-splitter-切分指令码"><a href="#4-splitter-切分指令码" class="headerlink" title="4.splitter(切分指令码)"></a>4.splitter(切分指令码)</h3><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>instr</td><td>Input</td><td>31:0</td><td>指令码</td></tr><tr><td>Opcode</td><td>Output</td><td>5:0</td><td>高六位opcode</td></tr><tr><td>rs</td><td>Output</td><td>4:0</td><td>rs寄存器序号</td></tr><tr><td>rt</td><td>Output</td><td>4:0</td><td>rt寄存器序号</td></tr><tr><td>rd</td><td>Output</td><td>4:0</td><td>rd寄存器序号</td></tr><tr><td>6-10(暂定)</td><td>Output</td><td>4:0</td><td>输出6-10位</td></tr><tr><td>func</td><td>Output</td><td>5:0</td><td>输出func码</td></tr><tr><td>imm</td><td>Output</td><td>15:0</td><td>输出低16位立即数imm</td></tr></tbody></table></div><h3 id="5-ALU"><a href="#5-ALU" class="headerlink" title="5.ALU"></a>5.ALU</h3><img src="/2024/10/23/p3cpu/image-20241023123036161.png" class="" title="image-20241023123036161"><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>ALUOp</td><td>Input</td><td>2：0</td><td>ALU功能选择</td></tr><tr><td>A</td><td>Input</td><td>31：0</td><td>待处理数字1</td></tr><tr><td>B</td><td>Input</td><td>31：0</td><td>待处理数字2</td></tr><tr><td>result</td><td>Output</td><td>31：0</td><td>计算结果</td></tr></tbody></table></div><p><em>ALUOp:</em></p><div class="table-container"><table><thead><tr><th>000</th><th>001</th><th>010</th><th>011</th><th>100</th><th>101</th><th>110</th><th>111</th></tr></thead><tbody><tr><td>add</td><td>sub</td><td>mul</td><td>div</td><td>and</td><td>or</td><td>sll</td><td>lui</td></tr></tbody></table></div><h3 id="6-EXT"><a href="#6-EXT" class="headerlink" title="6.EXT"></a>6.EXT</h3><img src="/2024/10/23/p3cpu/image-20241023123048116.png" class="" title="image-20241023123048116"><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>imm16</td><td>Input</td><td>15:0</td><td>16位立即数</td></tr><tr><td>EXTOp</td><td>Input</td><td>1</td><td>位扩展选择功能</td></tr><tr><td>ext32</td><td>Output</td><td>31:0</td><td>位扩展计算结果</td></tr></tbody></table></div><p><em>EXTOp:</em></p><p>0：0扩展</p><p>1：符号扩展</p><h3 id="7-controller"><a href="#7-controller" class="headerlink" title="7.controller"></a>7.controller</h3><img src="/2024/10/23/p3cpu/image-20241023123149559.png" class="" title="image-20241023123149559"><div class="table-container"><table><thead><tr><th>端口名</th><th>输入\输出</th><th>位宽</th><th>功能</th></tr></thead><tbody><tr><td>Opcode</td><td>Input</td><td>5:0</td><td>高六位opcode</td></tr><tr><td>Func</td><td>Input</td><td>5:0</td><td>指令码</td></tr><tr><td>RegDst</td><td>Output</td><td>1</td><td>REG选择</td></tr><tr><td>ALUSrc</td><td>Output</td><td>1</td><td>imm选择入alu的B口</td></tr><tr><td>Mem2Reg</td><td>Output</td><td>1</td><td>mem读出使能</td></tr><tr><td>RegWrite</td><td>Output</td><td>1</td><td>reg写使能</td></tr><tr><td>Npc_sel</td><td>Output</td><td>1</td><td>beq选择</td></tr><tr><td>ExtOp</td><td>Output</td><td>1</td><td>ext选择</td></tr><tr><td>J_if</td><td>Output</td><td>1</td><td>是否跳转</td></tr><tr><td>Sll_Sel</td><td>Output</td><td>1</td><td>移位选择</td></tr><tr><td>ALUop</td><td>Output</td><td>2:0</td><td>alu操作</td></tr></tbody></table></div><p>通过输入的指令码各部分，进行操作状态输出。</p><p><strong><em> mul和div指令未实现，暂不列出</em></strong></p><div class="table-container"><table><thead><tr><th>执行指令</th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>信号名</td><td>add</td><td>sub</td><td>andi</td><td>ori</td><td>lui</td><td>j</td><td>sw</td><td>lw</td><td>beq</td><td>nop/sll</td></tr><tr><td>op</td><td>000000</td><td>000000</td><td>001100</td><td>001101</td><td>001111</td><td>000010</td><td>101011</td><td>100011</td><td>000100</td><td>000000</td></tr><tr><td>func</td><td>100000</td><td>100010</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>000000</td></tr><tr><td>RegDst</td><td>1(rd)</td><td>1</td><td>0</td><td>0(rt)</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>ALUSrc</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td></tr><tr><td>Mem2Reg</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td></tr><tr><td>RegWrite</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td></tr><tr><td>MemWrite</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td></tr><tr><td>Npc_sel</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td></tr><tr><td>ExtOp</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><td>ALU_ctr1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1(sub验证)</td><td>0</td></tr><tr><td>ALU_ctr2</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>ALU_ctr3</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>J_if</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>Sll_Sel</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table></div><p>各信号功能：</p><ul><li>RegDst:被写入的寄存器的编码，由于MIPS中R型指令和I型指令被写入寄存器的编码对应的指令码位数不相同，故需要多路选择器对信号进行选择，多路选择器选择信号连接RegDst，R型指令时置1（rd），I型指令时置0（rt）。</li><li>ALUsrc:选择使用立即数还是使用GRF的RD2口输出数据，指令码为R型指令时置0，I型指令时置1</li><li>Mem2Reg:是否将数据存储器中的数据读入寄存器中，lw为1。</li><li>RegWrite:是否将数据写入寄存器堆中，连接GRF模块的使能端，需要向寄存器堆中写入数据时为1。</li><li>MenWrite:是否将数据写入数据存储器中，连接数据存储器的写入使能端，需要向数据存储器中写入数据时为1。</li><li>Npc_sel:跳转信号，当指令为beq时，该信号置1，指令存储器输入端选择输入信号为当前pc值加立即数,和两寄存器是否相等的判断通过与门接入IFU的beq_if。</li><li>ExtOp:位扩展器功能选择，为0时高位0扩展，为1时高位符号扩展。</li><li>ALU_ctr:ALU计算结果选择信号，addu时为00，subu时为01，ori时为10，lui时为11。</li><li>J_if:j指令时pc行为控制。</li><li>Sll_Sel：sll指令时指令码切分选择控制。<h1 id="测试方案"><a href="#测试方案" class="headerlink" title="测试方案"></a>测试方案</h1></li></ul><p>通过mars编写汇编程序，编写相关测试代码，将mars生成的机器码通过文件导入到logisim,通过向内存中输入中间数据，和mars进行对拍，以此验证各代码是否运行正确。</p><h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><ol><li><p>controller发挥状态转移，控制内存和寄存器等储存元件发生变化，IFU中PC寄存器负责状态储存（当前位于的代码位置），通过beq相关端口实现状态转移（+4或者跳转）</p></li><li><p>有其合理性。IM只需要读取，因此选择ROM,而DM需要读取和写入，因此选用RAM,寄存器堆本身就由寄存器构成，因此选用寄存器组成符合其组成。</p></li><li><p>splitter，用于切分指令码，定义见上方。</p></li><li><p>nop对应指令码为0x00000000，其本质为一个sll指令，对$0 进行了移位，不产生任何影响。同时，不加入控制信号真值表，使其对应的所有指令控制值为0，那么不论对寄存器还是对内存的操作都不会实际发生。</p></li><li><p>lw和sw指令对寄存器取值覆盖不全面，只有其为0的情况，应该再加入为负数和正数的情况。</p><p>beq指令只有向后跳转的相等和不相等，应加入向前跳转的相关操作。</p><ul><li><p>offset 方面，可以考虑以下情况：</p><ul><li>offset 是正数</li><li>offset 是零</li><li><p>offset 是负数</p></li><li><p>寄存器方面，可以考虑以下情况：</p><ul><li><code>$base</code> 寄存器中的值是正数</li><li><code>$base</code> 寄存器中的值是零</li><li><code>$base</code> 寄存器中的值是负数</li></ul></li></ul></li></ul></li></ol><p>   add应该在边界附近测试，0 及附近的数，32 位数边界附近的数。</p><p>   未涉及到sub指令。</p><p>   未对$0寄存器进行写入测试。</p><h1 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h1><h2 id="题目测试代码翻译："><a href="#题目测试代码翻译：" class="headerlink" title="题目测试代码翻译："></a>题目测试代码翻译：</h2><figure class="highlight mips"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x0000000000000000</span>:  <span class="number">34</span> <span class="number">1</span>C <span class="number">00</span> <span class="number">00</span>    <span class="keyword">ori </span>$<span class="built_in">gp</span>, $<span class="built_in">zero</span>, <span class="number">0</span> </span><br><span class="line"><span class="number">0x0000000000000004</span>:  <span class="number">34</span> <span class="number">1</span>D <span class="number">00</span> <span class="number">00</span>    <span class="keyword">ori </span>$<span class="built_in">sp</span>, $<span class="built_in">zero</span>, <span class="number">0</span> </span><br><span class="line"><span class="number">0x0000000000000008</span>:  <span class="number">34</span> <span class="number">01</span> <span class="number">34</span> <span class="number">56</span>    <span class="keyword">ori </span>$<span class="built_in">at</span>, $<span class="built_in">zero</span>, <span class="number">0x3456</span> </span><br><span class="line"><span class="number">0x000000000000000c</span>:  <span class="number">00</span> <span class="number">21</span> <span class="number">08</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">at</span>, $<span class="built_in">at</span>, $<span class="built_in">at</span> </span><br><span class="line"><span class="number">0x0000000000000010</span>:  <span class="number">8</span>C <span class="number">01</span> <span class="number">00</span> <span class="number">04</span>    <span class="keyword">lw </span> $<span class="built_in">at</span>, <span class="number">4</span>($<span class="built_in">zero</span>) </span><br><span class="line"><span class="number">0x0000000000000014</span>:  AC <span class="number">01</span> <span class="number">00</span> <span class="number">04</span>    <span class="keyword">sw </span> $<span class="built_in">at</span>, <span class="number">4</span>($<span class="built_in">zero</span>) </span><br><span class="line"><span class="number">0x0000000000000018</span>:  <span class="number">3</span>C <span class="number">02</span> <span class="number">78</span> <span class="number">78</span>    <span class="keyword">lui </span>$<span class="built_in">v0</span>, <span class="number">0x7878</span> </span><br><span class="line"><span class="number">0x000000000000001c</span>:  <span class="number">00</span> <span class="number">41</span> <span class="number">18</span> <span class="number">22</span>    <span class="keyword">sub </span>$<span class="built_in">v1</span>, $<span class="built_in">v0</span>, $<span class="built_in">at</span> </span><br><span class="line"><span class="number">0x0000000000000020</span>:  <span class="number">3</span>C <span class="number">05</span> <span class="number">12</span> <span class="number">34</span>    <span class="keyword">lui </span>$<span class="built_in">a1</span>, <span class="number">0x1234</span> </span><br><span class="line"><span class="number">0x0000000000000024</span>:  <span class="number">34</span> <span class="number">04</span> <span class="number">00</span> <span class="number">05</span>    <span class="keyword">ori </span>$<span class="built_in">a0</span>, $<span class="built_in">zero</span>, <span class="number">5</span> </span><br><span class="line"><span class="number">0x0000000000000028</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span> </span><br><span class="line"><span class="number">0x000000000000002c</span>:  AC <span class="number">85</span> FF FF    <span class="keyword">sw </span> $<span class="built_in">a1</span>, -<span class="number">1</span>($<span class="built_in">a0</span>) </span><br><span class="line"><span class="number">0x0000000000000030</span>:  <span class="number">8</span>C <span class="number">83</span> FF FF    <span class="keyword">lw </span> $<span class="built_in">v1</span>, -<span class="number">1</span>($<span class="built_in">a0</span>) </span><br><span class="line"><span class="number">0x0000000000000034</span>:  <span class="number">10</span> <span class="number">65</span> <span class="number">00</span> <span class="number">01</span>    <span class="keyword">beq </span>$<span class="built_in">v1</span>, $<span class="built_in">a1</span>, <span class="number">0x3c</span> </span><br><span class="line"><span class="number">0x0000000000000038</span>:  <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">0</span>D    <span class="keyword">b </span>  <span class="number">0x70</span> </span><br><span class="line"><span class="number">0x000000000000003c</span>:  <span class="number">34</span> <span class="number">67</span> <span class="number">04</span> <span class="number">04</span>    <span class="keyword">ori </span>$<span class="built_in">a3</span>, $<span class="built_in">v1</span>, <span class="number">0x404</span> </span><br><span class="line"><span class="number">0x0000000000000040</span>:  <span class="number">10</span> E3 <span class="number">00</span> <span class="number">0</span>B    <span class="keyword">beq </span>$<span class="built_in">a3</span>, $<span class="built_in">v1</span>, <span class="number">0x70</span> </span><br><span class="line"><span class="number">0x0000000000000044</span>:  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">nop </span> </span><br><span class="line"><span class="number">0x0000000000000048</span>:  <span class="number">3</span>C <span class="number">08</span> <span class="number">77</span> <span class="number">77</span>    <span class="keyword">lui </span>$<span class="built_in">t0</span>, <span class="number">0x7777</span> </span><br><span class="line"><span class="number">0x000000000000004c</span>:  <span class="number">35</span> <span class="number">08</span> FF FF    <span class="keyword">ori </span>$<span class="built_in">t0</span>, $<span class="built_in">t0</span>, <span class="number">0xffff</span> </span><br><span class="line"><span class="number">0x0000000000000050</span>:  <span class="number">00</span> <span class="number">08</span> <span class="number">00</span> <span class="number">22</span>    neg $<span class="built_in">zero</span>, $<span class="built_in">t0</span> </span><br><span class="line"><span class="number">0x0000000000000054</span>:  <span class="number">34</span> <span class="number">00</span> <span class="number">11</span> <span class="number">00</span>    <span class="keyword">ori </span>$<span class="built_in">zero</span>, $<span class="built_in">zero</span>, <span class="number">0x1100</span> </span><br><span class="line"><span class="number">0x0000000000000058</span>:  <span class="number">00</span> E6 <span class="number">50</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">t2</span>, $<span class="built_in">a3</span>, $<span class="built_in">a2</span> </span><br><span class="line"><span class="number">0x000000000000005c</span>:  <span class="number">34</span> <span class="number">08</span> <span class="number">00</span> <span class="number">00</span>    <span class="keyword">ori </span>$<span class="built_in">t0</span>, $<span class="built_in">zero</span>, <span class="number">0</span> </span><br><span class="line"><span class="number">0x0000000000000060</span>:  <span class="number">34</span> <span class="number">09</span> <span class="number">00</span> <span class="number">01</span>    <span class="keyword">ori </span>$<span class="built_in">t1</span>, $<span class="built_in">zero</span>, <span class="number">1</span> </span><br><span class="line"><span class="number">0x0000000000000064</span>:  <span class="number">34</span> <span class="number">0</span>A <span class="number">00</span> <span class="number">01</span>    <span class="keyword">ori </span>$<span class="built_in">t2</span>, $<span class="built_in">zero</span>, <span class="number">1</span> </span><br><span class="line"><span class="number">0x0000000000000068</span>:  <span class="number">01</span> <span class="number">0</span>A <span class="number">40</span> <span class="number">20</span>    <span class="keyword">add </span>$<span class="built_in">t0</span>, $<span class="built_in">t0</span>, $<span class="built_in">t2</span> </span><br><span class="line"><span class="number">0x000000000000006c</span>:  <span class="number">11</span> <span class="number">09</span> FF FE    <span class="keyword">beq </span>$<span class="built_in">t0</span>, $<span class="built_in">t1</span>, <span class="number">0x68</span> </span><br><span class="line"><span class="number">0x0000000000000070</span>:  <span class="number">10</span> <span class="number">00</span> FF FF    <span class="keyword">b </span>  <span class="number">0x70</span> </span><br></pre></td></tr></table></figure><h2 id="所涉及的指令的手册解释"><a href="#所涉及的指令的手册解释" class="headerlink" title="所涉及的指令的手册解释"></a>所涉及的指令的手册解释</h2><p>add<img src="/2024/10/23/p3cpu/image-20241023124502729.png" class="" title="image-20241023124502729"></p><p>sub<img src="/2024/10/23/p3cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-22%20135124.png" class=""></p><p>ori <img src="/2024/10/23/p3cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-22%20135239.png" class=""><br>andi<img src="/2024/10/23/p3cpu/image-20241023124340810.png" class="" title="image-20241023124340810"><br>lw <img src="/2024/10/23/p3cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-22%20135259.png" class=""><br>sw <img src="/2024/10/23/p3cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-22%20135314.png" class=""><br>beq <img src="/2024/10/23/p3cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-22%20135336.png" class=""><br>lui <img src="/2024/10/23/p3cpu/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-10-22%20135350.png" class=""><br>j<img src="/2024/10/23/p3cpu/image-20241023124234724.png" class=""><br>sll<img src="/2024/10/23/p3cpu/image-20241023124548470.png" class="" title="image-20241023124548470"></p>]]></content>
      
      
      <categories>
          
          <category> buaa-co </category>
          
          <category> logisim </category>
          
          <category> 单周期cpu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> co </tag>
            
            <tag> cpu </tag>
            
            <tag> logisim </tag>
            
            <tag> P3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mips知识点</title>
      <link href="/2024/09/22/mipscommand.html"/>
      <url>/2024/09/22/mipscommand.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="寄存器地址："><a href="#寄存器地址：" class="headerlink" title="寄存器地址："></a>寄存器地址：</h2><img src="/2024/09/22/mipscommand/image-20240903164135575.png" class="" title="image-20240903164135575"><h2 id="伪指令"><a href="#伪指令" class="headerlink" title="伪指令"></a>伪指令</h2><ul><li><strong>.data：</strong>用于预先存储数据的伪指令的开始标志。</li><li><strong>.text：</strong>程序代码指令开始的标志。</li><li><strong>.word：</strong>以字为单位存储数据。</li><li><strong>.asciiz：</strong>以字节为单位存储字符串。</li><li><strong>.space：</strong>申请若干个字节的未初始化的内存空间。</li></ul><h2 id="V0-的不同值"><a href="#V0-的不同值" class="headerlink" title="V0   的不同值"></a>V0   的不同值</h2><p>常用：</p><div class="table-container"><table><thead><tr><th>Service</th><th>Code in $v0</th><th>Arguments</th><th style="text-align:center">Result</th></tr></thead><tbody><tr><td><strong><em>print integer</em></strong></td><td><strong><em>1</em></strong></td><td>$a0 = integer to print</td><td style="text-align:center"></td></tr><tr><td>print float</td><td>2</td><td>$f12 = float to print</td><td style="text-align:center"></td></tr><tr><td>print double</td><td>3</td><td>$f12 = double to print</td><td style="text-align:center"></td></tr><tr><td><strong><em>print string</em></strong></td><td><strong><em>4</em></strong></td><td>$a0 = address of null-terminated string to print</td><td style="text-align:center"></td></tr><tr><td>read integer</td><td>5</td><td></td><td style="text-align:center">$v0 contains integer read</td></tr><tr><td>read float</td><td>6</td><td></td><td style="text-align:center">$f0 contains float read</td></tr><tr><td>read double</td><td>7</td><td></td><td style="text-align:center">$f0 contains double read</td></tr><tr><td>read string</td><td>8</td><td>$a0 = address of input buffer $a1 = maximum number of characters           to read</td><td style="text-align:center"><em>See note below table</em></td></tr><tr><td>sbrk (allocate heap memory)</td><td>9</td><td>$a0 = number of bytes to allocate</td><td style="text-align:center">$v0 contains address of allocated memory</td></tr><tr><td><strong><em>exit (terminate execution)</em></strong></td><td><strong><em>10</em></strong></td><td></td><td style="text-align:center"></td></tr><tr><td>print character</td><td>11</td><td>$a0 = character to print</td><td style="text-align:center"><em>See note below table</em></td></tr><tr><td>read character</td><td>12</td><td></td><td style="text-align:center">$v0 contains character read</td></tr><tr><td>open file</td><td>13</td><td>$a0 = address of null-terminated string containing filename $a1 =           flags $a2 = mode</td><td style="text-align:center">$v0 contains file descriptor (negative if error). <em>See note below           table</em></td></tr><tr><td>read from file</td><td>14</td><td>$a0 = file descriptor $a1 = address of input buffer $a2 =           maximum number of characters to read</td><td style="text-align:center">$v0 contains number of characters read (0 if end-of-file, negative           if error). <em>See note below table</em></td></tr><tr><td>write to file</td><td>15</td><td>$a0 = file descriptor $a1 = address of output buffer $a2 =           number of characters to write</td><td style="text-align:center">$v0 contains number of characters written (negative if error). <em>See           note below table</em></td></tr><tr><td>close file</td><td>16</td><td>$a0 = file descriptor</td><td style="text-align:center"></td></tr><tr><td>exit2 (terminate with value)</td><td>17</td><td>$a0 = termination result</td><td style="text-align:center"><em>See note below table</em></td></tr><tr><td><em>Services 1 through 17 are compatible with the SPIM simulator,           other than Open File (13) as described in the Notes below the table.           Services 30 and higher are exclusive to MARS.</em></td><td></td><td></td><td style="text-align:center"></td></tr><tr><td>time (system time)</td><td>30</td><td></td><td style="text-align:center">$a0 = low order 32 bits of system time $a1 = high order 32 bits           of system time. <em>See note below table</em></td></tr><tr><td>MIDI out</td><td>31</td><td>$a0 = pitch (0-127) $a1 = duration in milliseconds $a2 =           instrument (0-127) $a3 = volume (0-127)</td><td style="text-align:center">Generate tone and return immediately. <em>See note below table</em></td></tr><tr><td>sleep</td><td>32</td><td>$a0 = the length of time to sleep in milliseconds.</td><td style="text-align:center">Causes the MARS Java thread to sleep for (at least) the specified           number of milliseconds. This timing will not be precise, as the Java           implementation will add some overhead.</td></tr><tr><td>MIDI out synchronous</td><td>33</td><td>$a0 = pitch (0-127) $a1 = duration in milliseconds $a2 =           instrument (0-127) $a3 = volume (0-127)</td><td style="text-align:center">Generate tone and return upon tone completion. <em>See note below           table</em></td></tr><tr><td>print integer in hexadecimal</td><td>34</td><td>$a0 = integer to print</td><td style="text-align:center">Displayed value is 8 hexadecimal digits, left-padding with zeroes if           necessary.</td></tr><tr><td>print integer in binary</td><td>35</td><td>$a0 = integer to print</td><td style="text-align:center">Displayed value is 32 bits, left-padding with zeroes if necessary.</td></tr><tr><td>print integer as unsigned</td><td>36</td><td>$a0 = integer to print</td><td style="text-align:center">Displayed as unsigned decimal value.</td></tr><tr><td>(not used)</td><td>37-39</td><td></td><td style="text-align:center"></td></tr><tr><td>set seed</td><td>40</td><td>$a0 = i.d. of pseudorandom number generator (any int). $a1 = seed           for corresponding pseudorandom number generator.</td><td style="text-align:center">No values are returned. Sets the seed of the corresponding           underlying Java pseudorandom number generator (<code>java.util.Random</code>).           <em>See note below table</em></td></tr><tr><td>random int</td><td>41</td><td>$a0 = i.d. of pseudorandom number generator (any int).</td><td style="text-align:center">$a0 contains the next pseudorandom, uniformly distributed int value           from this random number generator’s sequence. <em>See note below table</em></td></tr><tr><td>random int range</td><td>42</td><td>$a0 = i.d. of pseudorandom number generator (any int). $a1 =           upper bound of range of returned values.</td><td style="text-align:center">$a0 contains pseudorandom, uniformly distributed int value in the           range 0 = [int] [upper bound], drawn from this random number           generator’s sequence. <em>See note below table</em></td></tr><tr><td>random float</td><td>43</td><td>$a0 = i.d. of pseudorandom number generator (any int).</td><td style="text-align:center">$f0 contains the next pseudorandom, uniformly distributed float           value in the range 0.0 = f 1.0 from this random number generator’s           sequence. <em>See note below table</em></td></tr><tr><td>random double</td><td>44</td><td>$a0 = i.d. of pseudorandom number generator (any int).</td><td style="text-align:center">$f0 contains the next pseudorandom, uniformly distributed double           value in the range 0.0 = f 1.0 from this random number generator’s           sequence. <em>See note below table</em></td></tr><tr><td>(not used)</td><td>45-49</td><td></td><td style="text-align:center"></td></tr><tr><td>ConfirmDialog</td><td>50</td><td>$a0 = address of null-terminated string that is the message to user</td><td style="text-align:center">$a0 contains value of user-chosen option 0: Yes 1: No 2:           Cancel</td></tr><tr><td>InputDialogInt</td><td>51</td><td>$a0 = address of null-terminated string that is the message to user</td><td style="text-align:center">$a0 contains int read $a1 contains status value 0: OK status -1:           input data cannot be correctly parsed -2: Cancel was chosen -3:           OK was chosen but no data had been input into field</td></tr><tr><td>InputDialogFloat</td><td>52</td><td>$a0 = address of null-terminated string that is the message to user</td><td style="text-align:center">$f0 contains float read $a1 contains status value 0: OK status -1:           input data cannot be correctly parsed -2: Cancel was chosen -3:           OK was chosen but no data had been input into field</td></tr><tr><td>InputDialogDouble</td><td>53</td><td>$a0 = address of null-terminated string that is the message to user</td><td style="text-align:center">$f0 contains double read $a1 contains status value 0: OK status -1:           input data cannot be correctly parsed -2: Cancel was chosen -3:           OK was chosen but no data had been input into field</td></tr><tr><td>InputDialogString</td><td>54</td><td>$a0 = address of null-terminated string that is the message to user $a1           = address of input buffer $a2 = maximum number of characters to           read</td><td style="text-align:center"><em>See Service 8 note below table</em> $a1 contains status value 0:           OK status. Buffer contains the input string. -2: Cancel was           chosen. No change to buffer. -3: OK was chosen but no data had           been input into field. No change to buffer. -4: length of the           input string exceeded the specified maximum. Buffer contains the           maximum allowable input string plus a terminating null.</td></tr><tr><td>MessageDialog</td><td>55</td><td>$a0 = address of null-terminated string that is the message to user $a1           = the type of message to be displayed: 0: error message,           indicated by Error icon           1: information message, indicated by Information icon           2: warning message, indicated by Warning icon           3: question message, indicated by Question icon           other: plain message (no icon displayed)</td><td style="text-align:center">N/A</td></tr><tr><td>MessageDialogInt</td><td>56</td><td>$a0 = address of null-terminated string that is an information-type           message to user $a1 = int value to display in string form after           the first string</td><td style="text-align:center">N/A</td></tr><tr><td>MessageDialogFloat</td><td>57</td><td>$a0 = address of null-terminated string that is an information-type           message to user $f12 = float value to display in string form           after the first string</td><td style="text-align:center">N/A</td></tr><tr><td>MessageDialogDouble</td><td>58</td><td>$a0 = address of null-terminated string that is an information-type           message to user $f12 = double value to display in string form           after the first string</td><td style="text-align:center">N/A</td></tr><tr><td>MessageDialogString</td><td>59</td><td>$a0 = address of null-terminated string that is an information-type           message to user $a1 = address of null-terminated string to           display after the first string</td><td style="text-align:center">N/A</td></tr></tbody></table></div><p>注释：服务编号为30及以上的服务不包含在SPIM服务8中。它遵循UNIX ‘fgets’的语义。对于指定长度n，字符串的长度不能超过n-1。如果长度小于n-1，则在末尾添加换行符。在任何情况下，都会用空字符填充。如果n等于1，则忽略输入并将空字符放置在缓冲区地址上。如果n大于1，则忽略输入并且不会将任何内容写入缓冲区。</p><p>服务11 - 打印低字节所对应的ASCII字符。</p><p>服务13 - MARS实现了三个标志值：0表示只读，1表示可写且可创建，9表示可写且可创建和追加。它忽略模式。如果操作失败，则返回的文件描述符将为负数。底层文件I/O实现使用java.io.FileInputStream.read()读取和java.io.FileOutputStream.write()写入。MARS内部维护文件描述符，并从3开始分配它们。文件描述符0、1、2始终用于：从标准输入读取、向标准输出写入和向标准错误写入（自版本4.3起新增）。</p><p>服务13、14、15 - 在MARS 3.7中，结果寄存器已更改为与SPIM兼容。之前在《计算机组织与设计》的附录B中错误地印成了$a0，现在是$a1。</p><p>服务17 - 如果MIPS程序在MARS图形界面（GUI）的控制下运行，则忽略$a1中的退出代码。服务30 - 系统时间来自java.util.Date.getTime()，表示自1970年1月1日以来的毫秒数。</p><p>服务31、33 - 通过声卡模拟MIDI输出。详情见下文。</p><p>服务40至44使用Java底层的伪随机数生成器，由java.util.Random类提供。每个流（由$a0的内容标识）都由不同的Random对象模拟。没有默认的种子值，因此如果需要重复的随机序列，请使用Set Seed服务（40）。</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p><strong>str:   .asciiz “The numbers are:\n”</strong></p><p># 这里使用了宏，%i 为存储当前行数的寄存器，%j 为存储当前列数的寄存器 # 把 (%i <em> 8 + %j) </em> 4 存入 %ans 寄存器中 </p><p>.macro  getindex(%ans, %i, %<strong>j)</strong><br>    <strong>sll</strong> %ans, %i, 3             #%ans = %i <em> 8<br>    <strong>add</strong> %ans, %ans, %<strong>j</strong>          #%ans = %ans + %j<br>    <strong>sll</strong> %ans, %ans, 2           # %ans = %ans </em> 4 .end_macro</p><p>在汇编程序中，还有一种和C语言中 #define 类似的宏定义，一般用于常量的定义上，那就是 <code>.eqv</code>。<code>.eqv</code> 用法如下：</p><p>.eqv EQV_NAME string</p><p><strong>li</strong> $t0, 0                  # $t0=0</p><p><strong>la</strong>  $a0, str   地址</p><p><strong>beq</strong> $t0, $s0, loop_in_end  # $t0 == $s0 的时候跳出循环</p><p><strong>bne</strong> 不相等时</p><p><strong>array</strong>: .space 40           # 存储这些数需要用到数组，数组需要使用 10 * 4 = 40 字节                           # 一个 int 整数需要占用 4 个字节，需要存储 10 个 int 整数                           # 因此，array[0] 的地址为 0x00，array[1] 的地址为 0x04                           # array[2] 的地址为 0x08，以此类推。</p><p><strong>sll</strong> $t1, $t0, 2            # $t1 = $t0 &lt;&lt; 2，即 $t1 = $t0 * 4</p><p><strong>sw</strong> $v0, array($t1)         # 把输入的数v0存入地址为 array + $t1 的内存中</p><p><strong>lw</strong> $a0, array($t1)         # 把内存中地址为 array + $t1 的数取出到 $a0 中</p><p><strong>addi</strong> $t0, $t0, 1           # $t0 = $t0 + 1</p><p><strong>add</strong> $t0, $t0, $a0           # $t0 = $t0 + $a0</p><p><strong>jal</strong> f #跳转到函数f，并且将$ra变为下一句地址</p><p><strong>jr</strong> $ra 跳转到寄存器$ra</p><img src="/2024/09/22/mipscommand/1714882532767.jpg" class="" title="arc">]]></content>
      
      
      <categories>
          
          <category> buaa-co </category>
          
          <category> mips </category>
          
          <category> mips语法知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mips </tag>
            
            <tag> co </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode配置</title>
      <link href="/2024/08/25/vscode.html"/>
      <url>/2024/08/25/vscode.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-vscode简介"><a href="#1-vscode简介" class="headerlink" title="1.vscode简介"></a>1.vscode简介</h1><p>VSCode是微软出的一款轻量级编辑器，它本身只是一款文本编辑器而已，并不是一个集成开发环境(IDE)，几乎所有功能都是以插件扩展的形式所存在的。因此，我们想用它编程，不只是把vscode下载下来就行，还需要安装对应编程语言的扩展以及相应的编译器。</p><h1 id="2-安装vscode"><a href="#2-安装vscode" class="headerlink" title="2.安装vscode"></a>2.安装vscode</h1><p>进入vscode官网：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><img src="/2024/08/25/vscode/6ad5756096a415e42f6eb07f23f0a5fb.png" class=""> <p>点击红色圈出区域，见到下图所示选项。<br><img src="/2024/08/25/vscode/5662174db4a10ecf7ef464dd295e5b52.png" class="" title="alt"><br>根据自己电脑的系统选择相应的下载项。（注：stable是稳定版本；insider是内部测试版本，可能会出问题，建议选stable）<br>下载完成后得到下图所示安装程序，双击进入安装程序<br><img src="/2024/08/25/vscode/ee7b944ad6a1cb31277b9c9cd5c7de2d.png" class=""></p><p>这里我只勾选了这两个<br><img src="/2024/08/25/vscode/57f03270802c2494eadfb54ce785f4af.png" class=""><br>注意，这里安装路径最好是全英文的，不要创建中文文件夹。另外根据硬盘实际情况看要不要放在c盘<br><img src="/2024/08/25/vscode/c771458d34d362c5a60a63f68186fb3a.png" class=""><br>安装完成后打开vscode，点击红色圈出区域，在搜索框分别搜索“C/C++”以及“chinese”，安装C/C++插件(必须有)与简体中文插件编译运行插件(个人推荐)<br><img src="/2024/08/25/vscode/520eacd23076ad9f93ea4148743f3042.png" class=""><br><img src="/2024/08/25/vscode/20d86ed1b3392fa7d93fcbe8abe5d442.png" class=""><br><img src="/2024/08/25/vscode/18a8604f524c1d1afda73a7ceaa30a1a.png" class=""><br><img src="/2024/08/25/vscode/image.png" class="" title="alt text"></p><p>至此，vscode安装以及必备插件安装就完成了，可以关掉vscode了</p><h1 id="3-安装MinGW-w64"><a href="#3-安装MinGW-w64" class="headerlink" title="3.安装MinGW-w64"></a>3.安装MinGW-w64</h1><p>C/C++的编译器有很多种，大家可自行选择，但网上大部分人都用的MinGW-w64，故以此编译器为例。</p><p>MinGW-w64官网下载地址<a href="https://sourceforge.net/projects/mingw-w64/files/">https://sourceforge.net/projects/mingw-w64/files/</a><br>下载<br><img src="/2024/08/25/vscode/a6e078c88e94ce4041c30cce399d0249.png" class=""><br>系统架构，电脑系统是64位的选择x86_64，是32位的则选择 i686；<br>操作系统接口协议， 如果你想要开发 Windows 程序，需要选择 win32 ，而开发 Linux、Unix、Mac OS 等其他操作系统下的程序，则需要选择 posix<br>异常处理模型推荐seh(64位系统)或dwarf(32位系统)<br>build revision，默认值即可<br>注意安装目录需是纯英文的，且不含空格</p><p>解压<br><img src="/2024/08/25/vscode/66706b081ae101c45b3d9a48f0a239a6.png" class=""><br><img src="/2024/08/25/vscode/1cb773df8bf5d5d01544aec608f5a27b.png" class=""></p><p>bin目录里面就是需要的<br><img src="/2024/08/25/vscode/83ede902f054c57060e05c81f9ae4ea4.png" class=""></p><h1 id="4-设置系统环境变量"><a href="#4-设置系统环境变量" class="headerlink" title="4.设置系统环境变量"></a>4.设置系统环境变量</h1><p>右击“此电脑”——“属性”——“高级系统设置”——“环境变量”——找到“系统变量”中的“Path”条目——“编辑”——“新建”——将你的MinGW-w64下载路径复制到新条目中(格式形如C:\TDM-GCC-64\bin，一定要写到bin这个文件夹)——完成<br><img src="/2024/08/25/vscode/6bd4b29d6044f500661c66391de52c62.png" class=""></p><img src="/2024/08/25/vscode/b76a3acd726f71598068eee0d39255f6.png" class=""><img src="/2024/08/25/vscode/68e9419589f4f4b5e14d152138c52042.png" class=""><p>打开命令提示符(直接在Windows搜索框输入cmd即可找到)，输入gcc -v，然后回车，验证是否成功(如果出现十几行乱码一样的东西，则配置环境变量成功)(注意：gcc与-v之间有一个空格！)</p><h1 id="5-设置vscode里的环境"><a href="#5-设置vscode里的环境" class="headerlink" title="5.设置vscode里的环境"></a>5.设置vscode里的环境</h1><ol><li>配置编译器(生成c_cpp_properties.json文件)<br>该步用于告诉vscode你的编译器在哪儿</li></ol><p>在电脑中创建一个未来用于存放代码的文件夹(用英文命名)，随后打开vscode，点击“打开文件夹”，从而在vscode内打开该文件夹<br><img src="/2024/08/25/vscode/45321d811ef82ab3b630055fad750745.png" class=""><br>按下快捷键shift+ctrl+p，展示全局命令面板，搜索找到C/C++ Edit Configurations(UI)<br><img src="/2024/08/25/vscode/034b0cd860ed0874075c2f76ee622f88.png" class=""><br>点击该条目，进入如下画面，看左侧栏目可发现程序自动在我们存代码的文件夹下建立了一个“.vscode”文件夹(这个文件夹非常重要，后续的配置都是在它内部建立文件的)，该文件夹下还有一个c_cpp_properties.json文件<br><img src="/2024/08/25/vscode/05766f8fae865d9b9eafff81aedac274.png" class="" title="alt">  </p><p>配置“编译器路径”(写自己的编译器下载路径)以及“IntelliSense 模式”(设为：gcc-x64)<br><img src="/2024/08/25/vscode/ca8a63b6f7edf18cd0cc9f29496499f7.png" class="" title="alt">  </p><ol><li>配置构建任务(生成tasks.json文件)<br>该步用于告诉vscode如何构建（编译）程序</li></ol><p>点击“文件——新建文件”，输入一段简单的测试代码(我们会发现代码明明没错却被划上了曲线，这是因为配置还没完成，暂时不用管)，随后按ctrl+s保存(一定要保存，否则无法进行后续操作)，注意要保存为.c或.cpp格式而不是默认的.txt<br><img src="/2024/08/25/vscode/7a81a8f259aa0b7f17abce3ec32428c3.png" class=""></p><p>再次按快捷键Ctrl+Shift+P调出命令面板，输入tasks，选择“Tasks:Configure Default Build Task”，再选择“C/C++: g++.exe build active file”或叫“g++.exe - 生成和调试活动文件”，此时会出现一个名为tasks.json的配置文件，内容如下:<br><img src="/2024/08/25/vscode/3e7e44d3473bb36384b9c2d9d48d04ac.png" class=""></p><ol><li>配置调试设置(生成launch.json文件)<br>该步用于配置调试的相关信息</li></ol><p>回到测试代码界面，点击菜单栏的“Debug——Start Debugging”(或“运行——启动调试”)，再选择“C++(GDB/LLDB)”，再选择”g++.exe build active file”(或“g++.exe - 生成和调试活动文件”)，此时会出现一个名为launch.json的配置文件，内容如下：<br><img src="/2024/08/25/vscode/df4d0966a773c7a134a99a133b4cd7e5.png" class=""><br>选择该项，可以看到.exe文件成功生成，底部终端运行正常<br>关于断点调试可以查询有关教程。<br><img src="/2024/08/25/vscode/image-6.png" class="" title="alt text"><br>!!注意文件位置不要随意更改，可能出现配置错误，可以在新位置复制一份重新运行。</p><p>ps：如果安装了编译运行插件，会弹出窗口运行。可选择该选项直接运行代码，.exe文件会建立在另一个文件夹，这种方法可以避免配置问题和便于分类。<br><img src="/2024/08/25/vscode/image-1.png" class="" title="alt text"><br>大概的效果：<br><img src="/2024/08/25/vscode/image-5.png" class="" title="alt text"><br>配置里默认应该为gcc和g++：<br><img src="/2024/08/25/vscode/image-7.png" class="" title="alt text"></p><p>pps：如果想要实现运行其他语言，安装对应语言包和运行插件（如code runner或对应专属插件）即可<br><img src="/2024/08/25/vscode/image-2.png" class="" title="alt text"><br>选择该项：<br><img src="/2024/08/25/vscode/image-4.png" class="" title="alt text"><br><img src="/2024/08/25/vscode/image-3.png" class="" title="alt text"></p><p>至此，vscode安装及环境配置(C/C++)(Windows系统)完成</p>]]></content>
      
      
      <categories>
          
          <category> 软件配置 </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种测试</title>
      <link href="/2024/08/05/test.html"/>
      <url>/2024/08/05/test.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h2><h1 id="标题-2"><a href="#标题-2" class="headerlink" title="标题"></a>标题</h1><h2 id="标题-3"><a href="#标题-3" class="headerlink" title="标题"></a>标题</h2><p>测试正文1<br><strong>粗体</strong>简易换行\<br>测试<strong>粗体</strong>和<em>html（斜体）</em>换行<br><br><strong><em>斜体粗体</em></strong>  </p><p>\<br>\<br>\<br>转义符:<br>*<br>\<br>_  </p><blockquote><p>块引用</p><h1 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h1><ul><li>Revenue was off the chart.</li><li>Profits were higher than ever.</li></ul><blockquote><p> <em>Everything</em> is going according to <strong>plan</strong> </p></blockquote></blockquote><p>列表    </p><ul><li>This is the first list item.</li><li><p>Here’s the second list item.</p><p>I need to add another paragraph below the second list item.</p><blockquote><p> <em>Everything</em> is going according to <strong>plan</strong>.</p></blockquote></li><li><p>And here’s the third list item.</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y    </span><br><span class="line"><span class="keyword">assert</span> (f(np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]), np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])) == [<span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]).<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>1.  Open the file.2.  Find the following code block on lines3.  图片</code></pre><hr><hr><hr><p><code>#include&lt;stdio.h&gt;</code>  </p><p>这是一个链接 <a href="https://arcaea.lowiro.com/"><font color=#7D24CD size=4><strong><em>ARCAEA</em></strong></font></a><br>图片<img src="/2024/08/05/test/logo.png" class="" title="alt text"><br><img src="/2024/08/05/test/logo2.png" class="" title="alt"><br><img src="/2024/08/05/test/arc.png" class="" title="arc"><br>链接<del>616.sb</del>  <a href="https://arcaea.lowiro.com/">https://arcaea.lowiro.com/</a>  </p><p>图片链接： \<br><a href="https://arcaea.lowiro.com/"><img src="https://pic.imgdb.cn/item/66af8204d9c307b7e9d4daa7.jpg" alt="alt text"></a>   </p><script type="math/tex; mode=display">x+y/2</script>    <div id="aplayer-whTfieLW" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="243454282" data-server="netease" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="1000px" data-preload="auto" data-theme="#555"    ></div><div class="table-container"><table><thead><tr><th><font color=#7D24CD size=4>表格</font></th><th></th></tr></thead><tbody><tr><td></td><td></td></tr><tr><td><em>logo2</em></td><td><strong>logo1</strong></td></tr></tbody></table></div><p><del>太阳绕着地球转。</del><br>:sunny::earth_asia:</p><font color=#7D26CD size=4>诚然，脚下的“大地”肮脏且缺乏秩序，距离那片高贵而完美的“天空”遥不可及。但是这不就意味着我们可以亲眼见证“完美”吗？人可以认知完美，地球就是完美的观测特等席</font><p style="font-family:'幼圆';color:#FFFFFF;background:linear-gradient( 0deg,#00FFFF,30%,#00BFFF 100%)"><font color=#FFFFFF size=10>チ。</font><br><font color=#FFFFFF size=3>-地球の運動について-</font><p>&lt;/p&gt;</p><ul><li>[x] full recall</li><li>[x] pure memory</li><li>[ ] 3:star:</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>egg</title>
      <link href="/egg/index.html"/>
      <url>/egg/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>*你发现了彩蛋，但这里什么都没有，这使你充满了决心。</strong></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/live2d/message.json"/>
      <url>/live2d/message.json</url>
      
        <content type="html"><![CDATA[{"mouseover":[{"selector":".title a","text":["要看看 {text} 么？"]},{"selector":".searchbox","text":["在找什么东西呢，需要帮忙吗？"]}],"click":[{"selector":"#landlord #live2d","text":["不要动手动脚的！快把手拿开~~","真…真的是不知羞耻！","Hentai！","再摸的话我可要报警了！⌇●﹏●⌇","110吗，这里有个变态一直在摸我(ó﹏ò｡)"]}]}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>北航六系学生，喜欢摄影绘画，最喜欢的乐队是ずっと真夜中でいいのに。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><font color=#7D26CD size=6>ずっと真夜中でいいのに。</font><br><br><br><br></p>    <div id="aplayer-xyYScKhP" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="95050200" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="500px" data-preload="auto" data-theme="#555"    ></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/live2d/css/live2d.css"/>
      <url>/live2d/css/live2d.css</url>
      
        <content type="html"><![CDATA[#landlord {    user-select: none;    position: fixed;    left: 30px;    bottom: 0;    width: 280px;    height: 250px;    z-index: 10000;    font-size: 0;    transition: all .3s ease-in-out;}#live2d {    position: relative;}.message {    opacity: 0;    width: 300px;    height: auto;    margin: auto;    padding: 7px;    top: -80px;    left: -10px;    text-align: center;    border: 1px solid rgba(255,137,255,.4);    border-radius: 12px;    background-color: rgba(255,137,255,.2);    box-shadow: 0 3px 15px 2px rgba(255,137,255,.4);    font-size: 13px;    font-weight: 400;    text-overflow: ellipsis;    text-transform: uppercase;    overflow: hidden;    position: absolute;    animation-delay: 5s;    animation-duration: 50s;    animation-iteration-count: infinite;    animation-name: shake;    animation-timing-function: ease-in-out;}.hide-button {    position: absolute;    top: 10px;    right: 0;    /* bottom: 30px; */    display: none;    overflow: hidden;    /* padding: 4px; */    width: 60px;    height: 20px;    border: 1px solid rgba(255,137,255,.4);    border-radius: 12px;    background: rgba(255,137,255,.2);    box-shadow: 0 3px 15px 2px rgba(255,137,255,.4);    text-align: center;    font-size: 12px;    cursor: pointer;}.hide-button:hover {    border: 1px solid #f4a7b9;    background: #f4f6f8;}@media (max-width: 860px) {    #landlord {        display: none;    }}@keyframes shake {    2% {        transform: translate(0.5px, -1.5px) rotate(-0.5deg);    }    4% {        transform: translate(0.5px, 1.5px) rotate(1.5deg);    }    6% {        transform: translate(1.5px, 1.5px) rotate(1.5deg);    }    8% {        transform: translate(2.5px, 1.5px) rotate(0.5deg);    }    10% {        transform: translate(0.5px, 2.5px) rotate(0.5deg);    }    12% {        transform: translate(1.5px, 1.5px) rotate(0.5deg);    }    14% {        transform: translate(0.5px, 0.5px) rotate(0.5deg);    }    16% {        transform: translate(-1.5px, -0.5px) rotate(1.5deg);    }    18% {        transform: translate(0.5px, 0.5px) rotate(1.5deg);    }    20% {        transform: translate(2.5px, 2.5px) rotate(1.5deg);    }    22% {        transform: translate(0.5px, -1.5px) rotate(1.5deg);    }    24% {        transform: translate(-1.5px, 1.5px) rotate(-0.5deg);    }    26% {        transform: translate(1.5px, 0.5px) rotate(1.5deg);    }    28% {        transform: translate(-0.5px, -0.5px) rotate(-0.5deg);    }    30% {        transform: translate(1.5px, -0.5px) rotate(-0.5deg);    }    32% {        transform: translate(2.5px, -1.5px) rotate(1.5deg);    }    34% {        transform: translate(2.5px, 2.5px) rotate(-0.5deg);    }    36% {        transform: translate(0.5px, -1.5px) rotate(0.5deg);    }    38% {        transform: translate(2.5px, -0.5px) rotate(-0.5deg);    }    40% {        transform: translate(-0.5px, 2.5px) rotate(0.5deg);    }    42% {        transform: translate(-1.5px, 2.5px) rotate(0.5deg);    }    44% {        transform: translate(-1.5px, 1.5px) rotate(0.5deg);    }    46% {        transform: translate(1.5px, -0.5px) rotate(-0.5deg);    }    48% {        transform: translate(2.5px, -0.5px) rotate(0.5deg);    }    50% {        transform: translate(-1.5px, 1.5px) rotate(0.5deg);    }    52% {        transform: translate(-0.5px, 1.5px) rotate(0.5deg);    }    54% {        transform: translate(-1.5px, 1.5px) rotate(0.5deg);    }    56% {        transform: translate(0.5px, 2.5px) rotate(1.5deg);    }    58% {        transform: translate(2.5px, 2.5px) rotate(0.5deg);    }    60% {        transform: translate(2.5px, -1.5px) rotate(1.5deg);    }    62% {        transform: translate(-1.5px, 0.5px) rotate(1.5deg);    }    64% {        transform: translate(-1.5px, 1.5px) rotate(1.5deg);    }    66% {        transform: translate(0.5px, 2.5px) rotate(1.5deg);    }    68% {        transform: translate(2.5px, -1.5px) rotate(1.5deg);    }    70% {        transform: translate(2.5px, 2.5px) rotate(0.5deg);    }    72% {        transform: translate(-0.5px, -1.5px) rotate(1.5deg);    }    74% {        transform: translate(-1.5px, 2.5px) rotate(1.5deg);    }    76% {        transform: translate(-1.5px, 2.5px) rotate(1.5deg);    }    78% {        transform: translate(-1.5px, 2.5px) rotate(0.5deg);    }    80% {        transform: translate(-1.5px, 0.5px) rotate(-0.5deg);    }    82% {        transform: translate(-1.5px, 0.5px) rotate(-0.5deg);    }    84% {        transform: translate(-0.5px, 0.5px) rotate(1.5deg);    }    86% {        transform: translate(2.5px, 1.5px) rotate(0.5deg);    }    88% {        transform: translate(-1.5px, 0.5px) rotate(1.5deg);    }    90% {        transform: translate(-1.5px, -0.5px) rotate(-0.5deg);    }    92% {        transform: translate(-1.5px, -1.5px) rotate(1.5deg);    }    94% {        transform: translate(0.5px, 0.5px) rotate(-0.5deg);    }    96% {        transform: translate(2.5px, -0.5px) rotate(-0.5deg);    }    98% {        transform: translate(-1.5px, -1.5px) rotate(-0.5deg);    }    0%, 100% {        transform: translate(0, 0) rotate(0);    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/live2d/js/live2d.js"/>
      <url>/live2d/js/live2d.js</url>
      
        <content type="html"><![CDATA[!function(t){function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var e={};i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=4)}([function(t,i,e){"use strict";function r(){this.live2DModel=null,this.modelMatrix=null,this.eyeBlink=null,this.physics=null,this.pose=null,this.debugMode=!1,this.initialized=!1,this.updating=!1,this.alpha=1,this.accAlpha=0,this.lipSync=!1,this.lipSyncValue=0,this.accelX=0,this.accelY=0,this.accelZ=0,this.dragX=0,this.dragY=0,this.startTimeMSec=null,this.mainMotionManager=new h,this.expressionManager=new h,this.motions={},this.expressions={},this.isTexLoaded=!1}function o(){AMotion.prototype.constructor.call(this),this.paramList=new Array}function n(){this.id="",this.type=-1,this.value=null}function s(){this.nextBlinkTime=null,this.stateStartTime=null,this.blinkIntervalMsec=null,this.eyeState=g.STATE_FIRST,this.blinkIntervalMsec=4e3,this.closingMotionMsec=100,this.closedMotionMsec=50,this.openingMotionMsec=150,this.closeIfZero=!0,this.eyeID_L="PARAM_EYE_L_OPEN",this.eyeID_R="PARAM_EYE_R_OPEN"}function _(){this.tr=new Float32Array(16),this.identity()}function a(t,i){_.prototype.constructor.call(this),this.width=t,this.height=i}function h(){MotionQueueManager.prototype.constructor.call(this),this.currentPriority=null,this.reservePriority=null,this.super=MotionQueueManager.prototype}function l(){this.physicsList=new Array,this.startTimeMSec=UtSystem.getUserTimeMSec()}function $(){this.lastTime=0,this.lastModel=null,this.partsGroups=new Array}function u(t){this.paramIndex=-1,this.partsIndex=-1,this.link=null,this.id=t}function p(){this.EPSILON=.01,this.faceTargetX=0,this.faceTargetY=0,this.faceX=0,this.faceY=0,this.faceVX=0,this.faceVY=0,this.lastTimeSec=0}function f(){_.prototype.constructor.call(this),this.screenLeft=null,this.screenRight=null,this.screenTop=null,this.screenBottom=null,this.maxLeft=null,this.maxRight=null,this.maxTop=null,this.maxBottom=null,this.max=Number.MAX_VALUE,this.min=0}function c(){}var d=0;r.prototype.getModelMatrix=function(){return this.modelMatrix},r.prototype.setAlpha=function(t){t>.999&&(t=1),t<.001&&(t=0),this.alpha=t},r.prototype.getAlpha=function(){return this.alpha},r.prototype.isInitialized=function(){return this.initialized},r.prototype.setInitialized=function(t){this.initialized=t},r.prototype.isUpdating=function(){return this.updating},r.prototype.setUpdating=function(t){this.updating=t},r.prototype.getLive2DModel=function(){return this.live2DModel},r.prototype.setLipSync=function(t){this.lipSync=t},r.prototype.setLipSyncValue=function(t){this.lipSyncValue=t},r.prototype.setAccel=function(t,i,e){this.accelX=t,this.accelY=i,this.accelZ=e},r.prototype.setDrag=function(t,i){this.dragX=t,this.dragY=i},r.prototype.getMainMotionManager=function(){return this.mainMotionManager},r.prototype.getExpressionManager=function(){return this.expressionManager},r.prototype.loadModelData=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log("Load model : "+t);var r=this;e.loadLive2DModel(t,function(t){if(r.live2DModel=t,r.live2DModel.saveParam(),0!=Live2D.getError())return void console.error("Error : Failed to loadModelData().");r.modelMatrix=new a(r.live2DModel.getCanvasWidth(),r.live2DModel.getCanvasHeight()),r.modelMatrix.setWidth(2),r.modelMatrix.setCenterPosition(0,0),i(r.live2DModel)})},r.prototype.loadTexture=function(t,i,e){d++;var r=c.getPlatformManager();this.debugMode&&r.log("Load Texture : "+i);var o=this;r.loadTexture(this.live2DModel,t,i,function(){d--,0==d&&(o.isTexLoaded=!0),"function"==typeof e&&e()})},r.prototype.loadMotion=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log("Load Motion : "+i);var o=null,n=this;r.loadBytes(i,function(i){o=Live2DMotion.loadMotion(i),null!=t&&(n.motions[t]=o),e(o)})},r.prototype.loadExpression=function(t,i,e){var r=c.getPlatformManager();this.debugMode&&r.log("Load Expression : "+i);var n=this;r.loadBytes(i,function(i){null!=t&&(n.expressions[t]=o.loadJson(i)),"function"==typeof e&&e()})},r.prototype.loadPose=function(t,i){var e=c.getPlatformManager();this.debugMode&&e.log("Load Pose : "+t);var r=this;try{e.loadBytes(t,function(t){r.pose=$.load(t),"function"==typeof i&&i()})}catch(t){console.warn(t)}},r.prototype.loadPhysics=function(t){var i=c.getPlatformManager();this.debugMode&&i.log("Load Physics : "+t);var e=this;try{i.loadBytes(t,function(t){e.physics=l.load(t)})}catch(t){console.warn(t)}},r.prototype.hitTestSimple=function(t,i,e){if(null===this.live2DModel)return!1;var r=this.live2DModel.getDrawDataIndex(t);if(r<0)return!1;for(var o=this.live2DModel.getTransformedPoints(r),n=this.live2DModel.getCanvasWidth(),s=0,_=this.live2DModel.getCanvasHeight(),a=0,h=0;h<o.length;h+=2){var l=o[h],$=o[h+1];l<n&&(n=l),l>s&&(s=l),$<_&&(_=$),$>a&&(a=$)}var u=this.modelMatrix.invertTransformX(i),p=this.modelMatrix.invertTransformY(e);return n<=u&&u<=s&&_<=p&&p<=a},r.prototype.hitTestSimpleCustom=function(t,i,e,r){return null!==this.live2DModel&&(e>=t[0]&&e<=i[0]&&r<=t[1]&&r>=i[1])},o.prototype=new AMotion,o.EXPRESSION_DEFAULT="DEFAULT",o.TYPE_SET=0,o.TYPE_ADD=1,o.TYPE_MULT=2,o.loadJson=function(t){var i=new o,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t);if(i.setFadeIn(parseInt(r.fade_in)>0?parseInt(r.fade_in):1e3),i.setFadeOut(parseInt(r.fade_out)>0?parseInt(r.fade_out):1e3),null==r.params)return i;var s=r.params,_=s.length;i.paramList=[];for(var a=0;a<_;a++){var h=s[a],l=h.id.toString(),$=parseFloat(h.val),u=o.TYPE_ADD,p=null!=h.calc?h.calc.toString():"add";if((u="add"===p?o.TYPE_ADD:"mult"===p?o.TYPE_MULT:"set"===p?o.TYPE_SET:o.TYPE_ADD)==o.TYPE_ADD){var f=null==h.def?0:parseFloat(h.def);$-=f}else if(u==o.TYPE_MULT){var f=null==h.def?1:parseFloat(h.def);0==f&&(f=1),$/=f}var d=new n;d.id=l,d.type=u,d.value=$,i.paramList.push(d)}return i},o.prototype.updateParamExe=function(t,i,e,r){for(var n=this.paramList.length-1;n>=0;--n){var s=this.paramList[n];s.type==o.TYPE_ADD?t.addToParamFloat(s.id,s.value,e):s.type==o.TYPE_MULT?t.multParamFloat(s.id,s.value,e):s.type==o.TYPE_SET&&t.setParamFloat(s.id,s.value,e)}},s.prototype.calcNextBlink=function(){return UtSystem.getUserTimeMSec()+Math.random()*(2*this.blinkIntervalMsec-1)},s.prototype.setInterval=function(t){this.blinkIntervalMsec=t},s.prototype.setEyeMotion=function(t,i,e){this.closingMotionMsec=t,this.closedMotionMsec=i,this.openingMotionMsec=e},s.prototype.updateParam=function(t){var i,e=UtSystem.getUserTimeMSec(),r=0;switch(this.eyeState){case g.STATE_CLOSING:r=(e-this.stateStartTime)/this.closingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_CLOSED,this.stateStartTime=e),i=1-r;break;case g.STATE_CLOSED:r=(e-this.stateStartTime)/this.closedMotionMsec,r>=1&&(this.eyeState=g.STATE_OPENING,this.stateStartTime=e),i=0;break;case g.STATE_OPENING:r=(e-this.stateStartTime)/this.openingMotionMsec,r>=1&&(r=1,this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink()),i=r;break;case g.STATE_INTERVAL:this.nextBlinkTime<e&&(this.eyeState=g.STATE_CLOSING,this.stateStartTime=e),i=1;break;case g.STATE_FIRST:default:this.eyeState=g.STATE_INTERVAL,this.nextBlinkTime=this.calcNextBlink(),i=1}this.closeIfZero||(i=-i),t.setParamFloat(this.eyeID_L,i),t.setParamFloat(this.eyeID_R,i)};var g=function(){};g.STATE_FIRST="STATE_FIRST",g.STATE_INTERVAL="STATE_INTERVAL",g.STATE_CLOSING="STATE_CLOSING",g.STATE_CLOSED="STATE_CLOSED",g.STATE_OPENING="STATE_OPENING",_.mul=function(t,i,e){var r,o,n,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(r=0;r<4;r++)for(o=0;o<4;o++)for(n=0;n<4;n++)s[r+4*o]+=t[r+4*n]*i[n+4*o];for(r=0;r<16;r++)e[r]=s[r]},_.prototype.identity=function(){for(var t=0;t<16;t++)this.tr[t]=t%5==0?1:0},_.prototype.getArray=function(){return this.tr},_.prototype.getCopyMatrix=function(){return new Float32Array(this.tr)},_.prototype.setMatrix=function(t){if(null!=this.tr&&this.tr.length==this.tr.length)for(var i=0;i<16;i++)this.tr[i]=t[i]},_.prototype.getScaleX=function(){return this.tr[0]},_.prototype.getScaleY=function(){return this.tr[5]},_.prototype.transformX=function(t){return this.tr[0]*t+this.tr[12]},_.prototype.transformY=function(t){return this.tr[5]*t+this.tr[13]},_.prototype.invertTransformX=function(t){return(t-this.tr[12])/this.tr[0]},_.prototype.invertTransformY=function(t){return(t-this.tr[13])/this.tr[5]},_.prototype.multTranslate=function(t,i){var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},_.prototype.translate=function(t,i){this.tr[12]=t,this.tr[13]=i},_.prototype.translateX=function(t){this.tr[12]=t},_.prototype.translateY=function(t){this.tr[13]=t},_.prototype.multScale=function(t,i){var e=[t,0,0,0,0,i,0,0,0,0,1,0,0,0,0,1];_.mul(e,this.tr,this.tr)},_.prototype.scale=function(t,i){this.tr[0]=t,this.tr[5]=i},a.prototype=new _,a.prototype.setPosition=function(t,i){this.translate(t,i)},a.prototype.setCenterPosition=function(t,i){var e=this.width*this.getScaleX(),r=this.height*this.getScaleY();this.translate(t-e/2,i-r/2)},a.prototype.top=function(t){this.setY(t)},a.prototype.bottom=function(t){var i=this.height*this.getScaleY();this.translateY(t-i)},a.prototype.left=function(t){this.setX(t)},a.prototype.right=function(t){var i=this.width*this.getScaleX();this.translateX(t-i)},a.prototype.centerX=function(t){var i=this.width*this.getScaleX();this.translateX(t-i/2)},a.prototype.centerY=function(t){var i=this.height*this.getScaleY();this.translateY(t-i/2)},a.prototype.setX=function(t){this.translateX(t)},a.prototype.setY=function(t){this.translateY(t)},a.prototype.setHeight=function(t){var i=t/this.height,e=-i;this.scale(i,e)},a.prototype.setWidth=function(t){var i=t/this.width,e=-i;this.scale(i,e)},h.prototype=new MotionQueueManager,h.prototype.getCurrentPriority=function(){return this.currentPriority},h.prototype.getReservePriority=function(){return this.reservePriority},h.prototype.reserveMotion=function(t){return!(this.reservePriority>=t)&&(!(this.currentPriority>=t)&&(this.reservePriority=t,!0))},h.prototype.setReservePriority=function(t){this.reservePriority=t},h.prototype.updateParam=function(t){var i=MotionQueueManager.prototype.updateParam.call(this,t);return this.isFinished()&&(this.currentPriority=0),i},h.prototype.startMotionPrio=function(t,i){return i==this.reservePriority&&(this.reservePriority=0),this.currentPriority=i,this.startMotion(t,!1)},l.load=function(t){for(var i=new l,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.physics_hair,n=o.length,s=0;s<n;s++){var _=o[s],a=new PhysicsHair,h=_.setup,$=parseFloat(h.length),u=parseFloat(h.regist),p=parseFloat(h.mass);a.setup($,u,p);for(var f=_.src,d=f.length,g=0;g<d;g++){var y=f[g],m=y.id,T=PhysicsHair.Src.SRC_TO_X,P=y.ptype;"x"===P?T=PhysicsHair.Src.SRC_TO_X:"y"===P?T=PhysicsHair.Src.SRC_TO_Y:"angle"===P?T=PhysicsHair.Src.SRC_TO_G_ANGLE:UtDebug.error("live2d","Invalid parameter:PhysicsHair.Src");var S=parseFloat(y.scale),v=parseFloat(y.weight);a.addSrcParam(T,m,S,v)}for(var L=_.targets,M=L.length,g=0;g<M;g++){var E=L[g],m=E.id,T=PhysicsHair.Target.TARGET_FROM_ANGLE,P=E.ptype;"angle"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE:"angle_v"===P?T=PhysicsHair.Target.TARGET_FROM_ANGLE_V:UtDebug.error("live2d","Invalid parameter:PhysicsHair.Target");var S=parseFloat(E.scale),v=parseFloat(E.weight);a.addTargetParam(T,m,S,v)}i.physicsList.push(a)}return i},l.prototype.updateParam=function(t){for(var i=UtSystem.getUserTimeMSec()-this.startTimeMSec,e=0;e<this.physicsList.length;e++)this.physicsList[e].update(t,i)},$.load=function(t){for(var i=new $,e=c.getPlatformManager(),r=e.jsonParseFromBytes(t),o=r.parts_visible,n=o.length,s=0;s<n;s++){for(var _=o[s],a=_.group,h=a.length,l=new Array,p=0;p<h;p++){var f=a[p],d=new u(f.id);if(l[p]=d,null!=f.link){var g=f.link,y=g.length;d.link=new Array;for(var m=0;m<y;m++){var T=new u(g[m]);d.link.push(T)}}}i.partsGroups.push(l)}return i},$.prototype.updateParam=function(t){if(null!=t){t!=this.lastModel&&this.initParam(t),this.lastModel=t;var i=UtSystem.getUserTimeMSec(),e=0==this.lastTime?0:(i-this.lastTime)/1e3;this.lastTime=i,e<0&&(e=0);for(var r=0;r<this.partsGroups.length;r++)this.normalizePartsOpacityGroup(t,this.partsGroups[r],e),this.copyOpacityOtherParts(t,this.partsGroups[r])}},$.prototype.initParam=function(t){if(null!=t)for(var i=0;i<this.partsGroups.length;i++)for(var e=this.partsGroups[i],r=0;r<e.length;r++){e[r].initIndex(t);var o=e[r].partsIndex,n=e[r].paramIndex;if(!(o<0)){var s=0!=t.getParamFloat(n);if(t.setPartsOpacity(o,s?1:0),t.setParamFloat(n,s?1:0),null!=e[r].link)for(var _=0;_<e[r].link.length;_++)e[r].link[_].initIndex(t)}}},$.prototype.normalizePartsOpacityGroup=function(t,i,e){for(var r=-1,o=1,n=0;n<i.length;n++){var s=i[n].partsIndex,_=i[n].paramIndex;if(!(s<0)&&0!=t.getParamFloat(_)){if(r>=0)break;r=n,o=t.getPartsOpacity(s),o+=e/.5,o>1&&(o=1)}}r<0&&(r=0,o=1);for(var n=0;n<i.length;n++){var s=i[n].partsIndex;if(!(s<0))if(r==n)t.setPartsOpacity(s,o);else{var a,h=t.getPartsOpacity(s);a=o<.5?-.5*o/.5+1:.5*(1-o)/.5;var l=(1-a)*(1-o);l>.15&&(a=1-.15/(1-o)),h>a&&(h=a),t.setPartsOpacity(s,h)}}},$.prototype.copyOpacityOtherParts=function(t,i){for(var e=0;e<i.length;e++){var r=i[e];if(null!=r.link&&!(r.partsIndex<0))for(var o=t.getPartsOpacity(r.partsIndex),n=0;n<r.link.length;n++){var s=r.link[n];s.partsIndex<0||t.setPartsOpacity(s.partsIndex,o)}}},u.prototype.initIndex=function(t){this.paramIndex=t.getParamIndex("VISIBLE:"+this.id),this.partsIndex=t.getPartsDataIndex(PartsDataID.getID(this.id)),t.setParamFloat(this.paramIndex,1)},p.FRAME_RATE=30,p.prototype.setPoint=function(t,i){this.faceTargetX=t,this.faceTargetY=i},p.prototype.getX=function(){return this.faceX},p.prototype.getY=function(){return this.faceY},p.prototype.update=function(){var t=40/7.5/p.FRAME_RATE;if(0==this.lastTimeSec)return void(this.lastTimeSec=UtSystem.getUserTimeMSec());var i=UtSystem.getUserTimeMSec(),e=(i-this.lastTimeSec)*p.FRAME_RATE/1e3;this.lastTimeSec=i;var r=.15*p.FRAME_RATE,o=e*t/r,n=this.faceTargetX-this.faceX,s=this.faceTargetY-this.faceY;if(!(Math.abs(n)<=this.EPSILON&&Math.abs(s)<=this.EPSILON)){var _=Math.sqrt(n*n+s*s),a=t*n/_,h=t*s/_,l=a-this.faceVX,$=h-this.faceVY,u=Math.sqrt(l*l+$*$);(u<-o||u>o)&&(l*=o/u,$*=o/u,u=o),this.faceVX+=l,this.faceVY+=$;var f=.5*(Math.sqrt(o*o+16*o*_-8*o*_)-o),c=Math.sqrt(this.faceVX*this.faceVX+this.faceVY*this.faceVY);c>f&&(this.faceVX*=f/c,this.faceVY*=f/c),this.faceX+=this.faceVX,this.faceY+=this.faceVY}},f.prototype=new _,f.prototype.getMaxScale=function(){return this.max},f.prototype.getMinScale=function(){return this.min},f.prototype.setMaxScale=function(t){this.max=t},f.prototype.setMinScale=function(t){this.min=t},f.prototype.isMaxScale=function(){return this.getScaleX()==this.max},f.prototype.isMinScale=function(){return this.getScaleX()==this.min},f.prototype.adjustTranslate=function(t,i){this.tr[0]*this.maxLeft+(this.tr[12]+t)>this.screenLeft&&(t=this.screenLeft-this.tr[0]*this.maxLeft-this.tr[12]),this.tr[0]*this.maxRight+(this.tr[12]+t)<this.screenRight&&(t=this.screenRight-this.tr[0]*this.maxRight-this.tr[12]),this.tr[5]*this.maxTop+(this.tr[13]+i)<this.screenTop&&(i=this.screenTop-this.tr[5]*this.maxTop-this.tr[13]),this.tr[5]*this.maxBottom+(this.tr[13]+i)>this.screenBottom&&(i=this.screenBottom-this.tr[5]*this.maxBottom-this.tr[13]);var e=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1];_.mul(e,this.tr,this.tr)},f.prototype.adjustScale=function(t,i,e){var r=e*this.tr[0];r<this.min?this.tr[0]>0&&(e=this.min/this.tr[0]):r>this.max&&this.tr[0]>0&&(e=this.max/this.tr[0]);var o=[1,0,0,0,0,1,0,0,0,0,1,0,t,i,0,1],n=[e,0,0,0,0,e,0,0,0,0,1,0,0,0,0,1],s=[1,0,0,0,0,1,0,0,0,0,1,0,-t,-i,0,1];_.mul(s,this.tr,this.tr),_.mul(n,this.tr,this.tr),_.mul(o,this.tr,this.tr)},f.prototype.setScreenRect=function(t,i,e,r){this.screenLeft=t,this.screenRight=i,this.screenTop=r,this.screenBottom=e},f.prototype.setMaxScreenRect=function(t,i,e,r){this.maxLeft=t,this.maxRight=i,this.maxTop=r,this.maxBottom=e},f.prototype.getScreenLeft=function(){return this.screenLeft},f.prototype.getScreenRight=function(){return this.screenRight},f.prototype.getScreenBottom=function(){return this.screenBottom},f.prototype.getScreenTop=function(){return this.screenTop},f.prototype.getMaxLeft=function(){return this.maxLeft},f.prototype.getMaxRight=function(){return this.maxRight},f.prototype.getMaxBottom=function(){return this.maxBottom},f.prototype.getMaxTop=function(){return this.maxTop},c.platformManager=null,c.getPlatformManager=function(){return c.platformManager},c.setPlatformManager=function(t){c.platformManager=t},t.exports={L2DTargetPoint:p,Live2DFramework:c,L2DViewMatrix:f,L2DPose:$,L2DPartsParam:u,L2DPhysics:l,L2DMotionManager:h,L2DModelMatrix:a,L2DMatrix44:_,EYE_STATE:g,L2DEyeBlink:s,L2DExpressionParam:n,L2DExpressionMotion:o,L2DBaseModel:r}},function(t,i,e){"use strict";var r={DEBUG_LOG:!1,DEBUG_MOUSE_LOG:!1,DEBUG_DRAW_HIT_AREA:!1,DEBUG_DRAW_ALPHA_MODEL:!1,VIEW_MAX_SCALE:2,VIEW_MIN_SCALE:.8,VIEW_LOGICAL_LEFT:-1,VIEW_LOGICAL_RIGHT:1,VIEW_LOGICAL_MAX_LEFT:-2,VIEW_LOGICAL_MAX_RIGHT:2,VIEW_LOGICAL_MAX_BOTTOM:-2,VIEW_LOGICAL_MAX_TOP:2,PRIORITY_NONE:0,PRIORITY_IDLE:1,PRIORITY_SLEEPY:2,PRIORITY_NORMAL:3,PRIORITY_FORCE:4,MOTION_GROUP_IDLE:"idle",MOTION_GROUP_SLEEPY:"sleepy",MOTION_GROUP_TAP_BODY:"tap_body",MOTION_GROUP_FLICK_HEAD:"flick_head",MOTION_GROUP_PINCH_IN:"pinch_in",MOTION_GROUP_PINCH_OUT:"pinch_out",MOTION_GROUP_SHAKE:"shake",HIT_AREA_HEAD:"head",HIT_AREA_BODY:"body"};t.exports=r},function(t,i,e){"use strict";function r(t){n=t}function o(){return n}Object.defineProperty(i,"__esModule",{value:!0}),i.setContext=r,i.getContext=o;var n=void 0},function(t,i,e){"use strict";function r(){}r.matrixStack=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.depth=0,r.currentMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r.tmp=new Array(16),r.reset=function(){this.depth=0},r.loadIdentity=function(){for(var t=0;t<16;t++)this.currentMatrix[t]=t%5==0?1:0},r.push=function(){var t=(this.depth,16*(this.depth+1));this.matrixStack.length<t+16&&(this.matrixStack.length=t+16);for(var i=0;i<16;i++)this.matrixStack[t+i]=this.currentMatrix[i];this.depth++},r.pop=function(){--this.depth<0&&(myError("Invalid matrix stack."),this.depth=0);for(var t=16*this.depth,i=0;i<16;i++)this.currentMatrix[i]=this.matrixStack[t+i]},r.getMatrix=function(){return this.currentMatrix},r.multMatrix=function(t){var i,e,r;for(i=0;i<16;i++)this.tmp[i]=0;for(i=0;i<4;i++)for(e=0;e<4;e++)for(r=0;r<4;r++)this.tmp[i+4*e]+=this.currentMatrix[i+4*r]*t[r+4*e];for(i=0;i<16;i++)this.currentMatrix[i]=this.tmp[i]},t.exports=r},function(t,i,e){t.exports=e(5)},function(t,i,e){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){C=document.getElementById(t),C.addEventListener&&(window.addEventListener("click",g),window.addEventListener("mousedown",g),window.addEventListener("mousemove",g),window.addEventListener("mouseup",g),document.addEventListener("mouseout",g),window.addEventListener("touchstart",y),window.addEventListener("touchend",y),window.addEventListener("touchmove",y))}function n(t){var i=C.width,e=C.height;N=new M.L2DTargetPoint;var r=e/i,o=w.default.VIEW_LOGICAL_LEFT,n=w.default.VIEW_LOGICAL_RIGHT,_=-r,h=r;if(window.Live2D.captureFrame=!1,B=new M.L2DViewMatrix,B.setScreenRect(o,n,_,h),B.setMaxScreenRect(w.default.VIEW_LOGICAL_MAX_LEFT,w.default.VIEW_LOGICAL_MAX_RIGHT,w.default.VIEW_LOGICAL_MAX_BOTTOM,w.default.VIEW_LOGICAL_MAX_TOP),B.setMaxScale(w.default.VIEW_MAX_SCALE),B.setMinScale(w.default.VIEW_MIN_SCALE),U=new M.L2DMatrix44,U.multScale(1,i/e),G=new M.L2DMatrix44,G.multTranslate(-i/2,-e/2),G.multScale(2/i,-2/i),F=v(),(0,D.setContext)(F),!F)return console.error("Failed to create WebGL context."),void(window.WebGLRenderingContext&&console.error("Your browser don't support WebGL, check https://get.webgl.org/ for futher information."));window.Live2D.setGL(F),F.clearColor(0,0,0,0),a(t),s()}function s(){b||(b=!0,function t(){_();var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;if(window.Live2D.captureFrame){window.Live2D.captureFrame=!1;var e=document.createElement("a");document.body.appendChild(e),e.setAttribute("type","hidden"),e.href=C.toDataURL(),e.download=window.Live2D.captureName||"live2d.png",e.click()}i(t,C)}())}function _(){O.default.reset(),O.default.loadIdentity(),N.update(),R.setDrag(N.getX(),N.getY()),F.clear(F.COLOR_BUFFER_BIT),O.default.multMatrix(U.getArray()),O.default.multMatrix(B.getArray()),O.default.push();for(var t=0;t<R.numModels();t++){var i=R.getModel(t);if(null==i)return;i.initialized&&!i.updating&&(i.update(),i.draw(F))}O.default.pop()}function a(t){R.reloadFlg=!0,R.count++,R.changeModel(F,t)}function h(t,i){return t.x*i.x+t.y*i.y}function l(t,i){var e=Math.sqrt(t*t+i*i);return{x:t/e,y:i/e}}function $(t,i,e){function r(t,i){return 180*Math.acos(h({x:0,y:1},l(t,i)))/Math.PI}if(i.x<e.left+e.width&&i.y<e.top+e.height&&i.x>e.left&&i.y>e.top)return i;var o=t.x-i.x,n=t.y-i.y,s=r(o,n);i.x<t.x&&(s=360-s);var _=360-r(e.left-t.x,-1*(e.top-t.y)),a=360-r(e.left-t.x,-1*(e.top+e.height-t.y)),$=r(e.left+e.width-t.x,-1*(e.top-t.y)),u=r(e.left+e.width-t.x,-1*(e.top+e.height-t.y)),p=n/o,f={};if(s<$){var c=e.top-t.y,d=c/p;f={y:t.y+c,x:t.x+d}}else if(s<u){var g=e.left+e.width-t.x,y=g*p;f={y:t.y+y,x:t.x+g}}else if(s<a){var m=e.top+e.height-t.y,T=m/p;f={y:t.y+m,x:t.x+T}}else if(s<_){var P=t.x-e.left,S=P*p;f={y:t.y-S,x:t.x-P}}else{var v=e.top-t.y,L=v/p;f={y:t.y+v,x:t.x+L}}return f}function u(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log("onMouseMove device( x:"+t.clientX+" y:"+t.clientY+" ) view( x:"+n+" y:"+s+")"),k=e,V=r,N.setPoint(n,s)}function p(t){Y=!0;var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log("onMouseDown device( x:"+t.clientX+" y:"+t.clientY+" ) view( x:"+n+" y:"+s+")"),k=e,V=r,R.tapEvent(n,s)}function f(t){var i=C.getBoundingClientRect(),e=P(t.clientX-i.left),r=S(t.clientY-i.top),o=$({x:i.left+i.width/2,y:i.top+i.height*X},{x:t.clientX,y:t.clientY},i),n=m(o.x-i.left),s=T(o.y-i.top);w.default.DEBUG_MOUSE_LOG&&console.log("onMouseMove device( x:"+t.clientX+" y:"+t.clientY+" ) view( x:"+n+" y:"+s+")"),Y&&(k=e,V=r,N.setPoint(n,s))}function c(){Y&&(Y=!1),N.setPoint(0,0)}function d(){w.default.DEBUG_LOG&&console.log("Set Session Storage."),sessionStorage.setItem("Sleepy","1")}function g(t){if("mousewheel"==t.type);else if("mousedown"==t.type)p(t);else if("mousemove"==t.type){var i=sessionStorage.getItem("Sleepy");"1"===i&&sessionStorage.setItem("Sleepy","0"),u(t)}else if("mouseup"==t.type){if("button"in t&&0!=t.button)return}else if("mouseout"==t.type){w.default.DEBUG_LOG&&console.log("Mouse out Window."),c();var e=sessionStorage.getItem("SleepyTimer");window.clearTimeout(e),e=window.setTimeout(d,5e4),sessionStorage.setItem("SleepyTimer",e)}}function y(t){var i=t.touches[0];"touchstart"==t.type?1==t.touches.length&&u(i):"touchmove"==t.type?f(i):"touchend"==t.type&&c()}function m(t){var i=G.transformX(t);return B.invertTransformX(i)}function T(t){var i=G.transformY(t);return B.invertTransformY(i)}function P(t){return G.transformX(t)}function S(t){return G.transformY(t)}function v(){for(var t=["webgl","experimental-webgl","webkit-3d","moz-webgl"],i=0;i<t.length;i++)try{var e=C.getContext(t[i],{premultipliedAlpha:!0});if(e)return e}catch(t){}return null}function L(t,i,e){X=void 0===e?.5:e,o(t),n(i)}e(6);var M=e(0),E=e(8),A=r(E),I=e(1),w=r(I),x=e(3),O=r(x),D=e(2),R=(window.navigator.platform.toLowerCase(),new A.default),b=!1,F=null,C=null,N=null,B=null,U=null,G=null,Y=!1,k=0,V=0,X=.5;window.loadlive2d=L},function(t,i,e){"use strict";(function(t){!function(){function i(){At||(this._$MT=null,this._$5S=null,this._$NP=0,i._$42++,this._$5S=new Y(this))}function e(t){if(!At){this.clipContextList=new Array,this.glcontext=t.gl,this.dp_webgl=t,this.curFrameNo=0,this.firstError_clipInNotUpdate=!0,this.colorBuffer=0,this.isInitGLFBFunc=!1,this.tmpBoundsOnModel=new S,at.glContext.length>at.frameBuffers.length&&(this.curFrameNo=this.getMaskRenderTexture()),this.tmpModelToViewMatrix=new R,this.tmpMatrix2=new R,this.tmpMatrixForMask=new R,this.tmpMatrixForDraw=new R,this.CHANNEL_COLORS=new Array;var i=new A;i=new A,i.r=0,i.g=0,i.b=0,i.a=1,this.CHANNEL_COLORS.push(i),i=new A,i.r=1,i.g=0,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=1,i.b=0,i.a=0,this.CHANNEL_COLORS.push(i),i=new A,i.r=0,i.g=0,i.b=1,i.a=0,this.CHANNEL_COLORS.push(i);for(var e=0;e<this.CHANNEL_COLORS.length;e++)this.dp_webgl.setChannelFlagAsColor(e,this.CHANNEL_COLORS[e])}}function r(t,i,e){this.clipIDList=new Array,this.clipIDList=e,this.clippingMaskDrawIndexList=new Array;for(var r=0;r<e.length;r++)this.clippingMaskDrawIndexList.push(i.getDrawDataIndex(e[r]));this.clippedDrawContextList=new Array,this.isUsing=!0,this.layoutChannelNo=0,this.layoutBounds=new S,this.allClippedDrawRect=new S,this.matrixForMask=new Float32Array(16),this.matrixForDraw=new Float32Array(16),this.owner=t}function o(t,i){this._$gP=t,this.drawDataIndex=i}function n(){At||(this.color=null)}function s(){At||(this._$dP=null,this._$eo=null,this._$V0=null,this._$dP=1e3,this._$eo=1e3,this._$V0=1,this._$a0())}function _(){}function a(){this._$r=null,this._$0S=null}function h(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function l(t){At||et.prototype.constructor.call(this,t)}function $(){}function u(t){At||et.prototype.constructor.call(this,t)}function p(){At||(this._$vo=null,this._$F2=null,this._$ao=400,this._$1S=400,p._$42++)}function f(){At||(this.p1=new c,this.p2=new c,this._$Fo=0,this._$Db=0,this._$L2=0,this._$M2=0,this._$ks=0,this._$9b=0,this._$iP=0,this._$iT=0,this._$lL=new Array,this._$qP=new Array,this.setup(.3,.5,.1))}function c(){this._$p=1,this.x=0,this.y=0,this.vx=0,this.vy=0,this.ax=0,this.ay=0,this.fx=0,this.fy=0,this._$s0=0,this._$70=0,this._$7L=0,this._$HL=0}function d(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function g(t,i,e,r){d.prototype.constructor.call(this,i,e,r),this._$tL=null,this._$tL=t}function y(t,i,e){this._$wL=null,this.scale=null,this._$V0=null,this._$wL=t,this.scale=i,this._$V0=e}function T(t,i,e,r){y.prototype.constructor.call(this,i,e,r),this._$YP=null,this._$YP=t}function P(){At||(this._$fL=0,this._$gL=0,this._$B0=1,this._$z0=1,this._$qT=0,this.reflectX=!1,this.reflectY=!1)}function S(){At||(this.x=null,this.y=null,this.width=null,this.height=null)}function v(){}function L(){At||(this.x=null,this.y=null)}function M(){At||(this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null,this.clipID=null,this.clipIDList=new Array)}function E(){At||(this._$Eb=E._$ps,this._$lT=1,this._$C0=1,this._$tT=1,this._$WL=1,this.culling=!1,this.matrix4x4=new Float32Array(16),this.premultipliedAlpha=!1,this.anisotropy=0,this.clippingProcess=E.CLIPPING_PROCESS_NONE,this.clipBufPre_clipContextMask=null,this.clipBufPre_clipContextDraw=null,this.CHANNEL_COLORS=new Array)}function A(){At||(this.a=1,this.r=1,this.g=1,this.b=1,this.scale=1,this._$ho=1,this.blendMode=at.L2D_COLOR_BLEND_MODE_MULT)}function I(){At||(this._$kP=null,this._$dr=null,this._$Ai=!0,this._$mS=null)}function w(){}function x(){At||(this._$VP=0,this._$wL=null,this._$GP=null,this._$8o=x._$ds,this._$2r=-1,this._$O2=0,this._$ri=0)}function O(){}function D(){At||(this._$Ob=null)}function R(){this.m=new Float32Array(16),this.identity()}function b(t){At||et.prototype.constructor.call(this,t)}function F(){At||(this._$7=1,this._$f=0,this._$H=0,this._$g=1,this._$k=0,this._$w=0,this._$hi=STATE_IDENTITY,this._$Z=_$pS)}function C(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$7r=null,this._$7r=C._$Co++,this._$D0=30,this._$yT=0,this._$E=!0,this.loopFadeIn=!0,this._$AS=-1,_$a0())}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function U(){}function G(){}function Y(t){At||(this._$QT=!0,this._$co=-1,this._$qo=0,this._$pb=new Array(Y._$is),this._$_2=new Float32Array(Y._$is),this._$vr=new Float32Array(Y._$is),this._$Rr=new Float32Array(Y._$is),this._$Or=new Float32Array(Y._$is),this._$fs=new Float32Array(Y._$is),this._$Js=new Array(Y._$is),this._$3S=new Array,this._$aS=new Array,this._$Bo=null,this._$F2=new Array,this._$db=new Array,this._$8b=new Array,this._$Hr=new Array,this._$Ws=null,this._$Vs=null,this._$Er=null,this._$Es=new Int16Array(U._$Qb),this._$ZP=new Float32Array(2*U._$1r),this._$Ri=t,this._$b0=Y._$HP++,this.clipManager=null,this.dp_webgl=null)}function k(){}function V(){At||(this._$12=null,this._$bb=null,this._$_L=null,this._$jo=null,this._$iL=null,this._$0L=null,this._$Br=null,this._$Dr=null,this._$Cb=null,this._$mr=null,this._$_L=wt.STATE_FIRST,this._$Br=4e3,this._$Dr=100,this._$Cb=50,this._$mr=150,this._$jo=!0,this._$iL="PARAM_EYE_L_OPEN",this._$0L="PARAM_EYE_R_OPEN")}function X(){At||(E.prototype.constructor.call(this),this._$sb=new Int32Array(X._$As),this._$U2=new Array,this.transform=null,this.gl=null,null==X._$NT&&(X._$NT=X._$9r(256),X._$vS=X._$9r(256),X._$no=X._$vb(256)))}function z(){At||(I.prototype.constructor.call(this),this._$GS=null,this._$Y0=null)}function H(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Yr=null,this._$Wr=null}function W(){At||(M.prototype.constructor.call(this),this._$gP=null,this._$dr=null,this._$GS=null,this._$qb=null,this._$Lb=null,this._$mS=null)}function j(){At||(this._$NL=null,this._$3S=null,this._$aS=null,j._$42++)}function q(){At||(i.prototype.constructor.call(this),this._$zo=new X)}function J(){At||(s.prototype.constructor.call(this),this.motions=new Array,this._$o2=null,this._$7r=J._$Co++,this._$D0=30,this._$yT=0,this._$E=!1,this.loopFadeIn=!0,this._$rr=-1,this._$eP=0)}function Q(t,i){return String.fromCharCode(t.getUint8(i))}function N(){this._$P=new Float32Array(100),this.size=0}function B(){this._$4P=null,this._$I0=null,this._$RP=null}function Z(){At||(I.prototype.constructor.call(this),this._$o=0,this._$A=0,this._$GS=null,this._$Eo=null)}function K(t){_t.prototype.constructor.call(this,t),this._$8r=I._$ur,this._$Cr=null,this._$hr=null}function tt(){At||(this.visible=!0,this._$g0=!1,this._$NL=null,this._$3S=null,this._$aS=null,tt._$42++)}function it(t){this._$VS=null,this._$e0=null,this._$e0=t}function et(t){At||(this.id=t)}function rt(){}function ot(){At||(this._$4S=null)}function nt(t,i){this.canvas=t,this.context=i,this.viewport=new Array(0,0,t.width,t.height),this._$6r=1,this._$xP=0,this._$3r=1,this._$uP=0,this._$Qo=-1,this.cacheImages={}}function st(){At||(this._$TT=null,this._$LT=null,this._$FS=null,this._$wL=null)}function _t(t){At||(this._$e0=null,this._$IP=null,this._$JS=!1,this._$AT=!0,this._$e0=t,this.totalScale=1,this._$7s=1,this.totalOpacity=1)}function at(){}function ht(){}function lt(t){At||(this._$ib=t)}function $t(){At||(W.prototype.constructor.call(this),this._$LP=-1,this._$d0=0,this._$Yo=0,this._$JP=null,this._$5P=null,this._$BP=null,this._$Eo=null,this._$Qi=null,this._$6s=$t._$ms,this.culling=!0,this.gl_cacheImage=null,this.instanceNo=$t._$42++)}function ut(t){Mt.prototype.constructor.call(this,t),this._$8r=W._$ur,this._$Cr=null,this._$hr=null}function pt(){At||(this.x=null,this.y=null)}function ft(t){At||(i.prototype.constructor.call(this),this.drawParamWebGL=new mt(t),this.drawParamWebGL.setGL(at.getGL(t)))}function ct(){At||(this.motions=null,this._$eb=!1,this.motions=new Array)}function dt(){this._$w0=null,this._$AT=!0,this._$9L=!1,this._$z2=-1,this._$bs=-1,this._$Do=-1,this._$sr=null,this._$sr=dt._$Gs++}function gt(){this.m=new Array(1,0,0,0,1,0,0,0,1)}function yt(t){At||et.prototype.constructor.call(this,t)}function mt(t){At||(E.prototype.constructor.call(this),this.textures=new Array,this.transform=null,this.gl=null,this.glno=t,this.firstDraw=!0,this.anisotropyExt=null,this.maxAnisotropy=0,this._$As=32,this._$Gr=!1,this._$NT=null,this._$vS=null,this._$no=null,this.vertShader=null,this.fragShader=null,this.vertShaderOff=null,this.fragShaderOff=null)}function Tt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function Pt(t,i,e){return null==i&&(i=t.createBuffer()),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.DYNAMIC_DRAW),i}function St(t){At||(this._$P=new Int8Array(8),this._$R0=new DataView(this._$P.buffer),this._$3i=new Int8Array(1e3),this._$hL=0,this._$v0=0,this._$S2=0,this._$Ko=new Array,this._$T=t,this._$F=0)}function vt(){}function Lt(){}function Mt(t){At||(this._$e0=null,this._$IP=null,this._$Us=null,this._$7s=null,this._$IS=[!1],this._$VS=null,this._$AT=!0,this.baseOpacity=1,this.clipBufPre_clipContext=null,this._$e0=t)}function Et(){}var At=!0;i._$0s=1,i._$4s=2,i._$42=0,i._$62=function(t,e){try{if(e instanceof ArrayBuffer&&(e=new DataView(e)),!(e instanceof DataView))throw new lt("_$SS#loadModel(b) / b _$x be DataView or ArrayBuffer");var r,o=new St(e),n=o._$ST(),s=o._$ST(),a=o._$ST();if(109!=n||111!=s||99!=a)throw new lt("_$gi _$C _$li , _$Q0 _$P0.");if(r=o._$ST(),o._$gr(r),r>G._$T7){t._$NP|=i._$4s;throw new lt("_$gi _$C _$li , _$n0 _$_ version _$li ( SDK : "+G._$T7+" < _$f0 : "+r+" )@_$SS#loadModel()\n")}var h=o._$nP();if(r>=G._$s7){var l=o._$9T(),$=o._$9T();if(-30584!=l||-30584!=$)throw t._$NP|=i._$0s,new lt("_$gi _$C _$li , _$0 _$6 _$Ui.")}t._$KS(h);var u=t.getModelContext();u.setDrawParam(t.getDrawParam()),u.init()}catch(t){_._$Rb(t)}},i.prototype._$KS=function(t){this._$MT=t},i.prototype.getModelImpl=function(){return null==this._$MT&&(this._$MT=new p,this._$MT._$zP()),this._$MT},i.prototype.getCanvasWidth=function(){return null==this._$MT?0:this._$MT.getCanvasWidth()},i.prototype.getCanvasHeight=function(){return null==this._$MT?0:this._$MT.getCanvasHeight()},i.prototype.getParamFloat=function(t){return"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),this._$5S.getParamFloat(t)},i.prototype.setParamFloat=function(t,i,e){"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1-e)+i*e)},i.prototype.addToParamFloat=function(t,i,e){"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)+i*e)},i.prototype.multParamFloat=function(t,i,e){"number"!=typeof t&&(t=this._$5S.getParamIndex(u.getID(t))),arguments.length<3&&(e=1),this._$5S.setParamFloat(t,this._$5S.getParamFloat(t)*(1+(i-1)*e))},i.prototype.getParamIndex=function(t){return this._$5S.getParamIndex(u.getID(t))},i.prototype.loadParam=function(){this._$5S.loadParam()},i.prototype.saveParam=function(){this._$5S.saveParam()},i.prototype.init=function(){this._$5S.init()},i.prototype.update=function(){this._$5S.update()},i.prototype._$Rs=function(){return _._$li("_$60 _$PT _$Rs()"),-1},i.prototype._$Ds=function(t){_._$li("_$60 _$PT _$SS#_$Ds() \n")},i.prototype._$K2=function(){},i.prototype.draw=function(){},i.prototype.getModelContext=function(){return this._$5S},i.prototype._$s2=function(){return this._$NP},i.prototype._$P7=function(t,i,e,r){var o=-1,n=0,s=this;if(0!=e)if(1==t.length){var _=t[0],a=0!=s.getParamFloat(_),h=i[0],l=s.getPartsOpacity(h),$=e/r;a?(l+=$)>1&&(l=1):(l-=$)<0&&(l=0),s.setPartsOpacity(h,l)}else{for(var u=0;u<t.length;u++){var _=t[u],p=0!=s.getParamFloat(_);if(p){if(o>=0)break;o=u;var h=i[u];n=s.getPartsOpacity(h),n+=e/r,n>1&&(n=1)}}o<0&&(console.log("No _$wi _$q0/ _$U default[%s]",t[0]),o=0,n=1,s.loadParam(),s.setParamFloat(t[o],n),s.saveParam());for(var u=0;u<t.length;u++){var h=i[u];if(o==u)s.setPartsOpacity(h,n);else{var f,c=s.getPartsOpacity(h);f=n<.5?-.5*n/.5+1:.5*(1-n)/.5;var d=(1-f)*(1-n);d>.15&&(f=1-.15/(1-n)),c>f&&(c=f),s.setPartsOpacity(h,c)}}}else for(var u=0;u<t.length;u++){var _=t[u],h=i[u],p=0!=s.getParamFloat(_);s.setPartsOpacity(h,p?1:0)}},i.prototype.setPartsOpacity=function(t,i){"number"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),this._$5S.setPartsOpacity(t,i)},i.prototype.getPartsDataIndex=function(t){return t instanceof l||(t=l.getID(t)),this._$5S.getPartsDataIndex(t)},i.prototype.getPartsOpacity=function(t){return"number"!=typeof t&&(t=this._$5S.getPartsDataIndex(l.getID(t))),t<0?0:this._$5S.getPartsOpacity(t)},i.prototype.getDrawParam=function(){},i.prototype.getDrawDataIndex=function(t){return this._$5S.getDrawDataIndex(b.getID(t))},i.prototype.getDrawData=function(t){return this._$5S.getDrawData(t)},i.prototype.getTransformedPoints=function(t){var i=this._$5S._$C2(t);return i instanceof ut?i.getTransformedPoints():null},i.prototype.getIndexArray=function(t){if(t<0||t>=this._$5S._$aS.length)return null;var i=this._$5S._$aS[t];return null!=i&&i.getType()==W._$wb&&i instanceof $t?i.getIndexArray():null},e.CHANNEL_COUNT=4,e.RENDER_TEXTURE_USE_MIPMAP=!1,e.NOT_USED_FRAME=-100,e.prototype._$L7=function(){if(this.tmpModelToViewMatrix&&(this.tmpModelToViewMatrix=null),this.tmpMatrix2&&(this.tmpMatrix2=null),this.tmpMatrixForMask&&(this.tmpMatrixForMask=null),this.tmpMatrixForDraw&&(this.tmpMatrixForDraw=null),this.tmpBoundsOnModel&&(this.tmpBoundsOnModel=null),this.CHANNEL_COLORS){for(var t=this.CHANNEL_COLORS.length-1;t>=0;--t)this.CHANNEL_COLORS.splice(t,1);this.CHANNEL_COLORS=[]}this.releaseShader()},e.prototype.releaseShader=function(){for(var t=at.frameBuffers.length,i=0;i<t;i++)this.gl.deleteFramebuffer(at.frameBuffers[i].framebuffer);at.frameBuffers=[],at.glContext=[]},e.prototype.init=function(t,i,e){for(var o=0;o<i.length;o++){var n=i[o].getClipIDList();if(null!=n){var s=this.findSameClip(n);null==s&&(s=new r(this,t,n),this.clipContextList.push(s));var _=i[o].getDrawDataID(),a=t.getDrawDataIndex(_);s.addClippedDrawData(_,a);e[o].clipBufPre_clipContext=s}}},e.prototype.getMaskRenderTexture=function(){var t=null;return t=this.dp_webgl.createFramebuffer(),at.frameBuffers[this.dp_webgl.glno]=t,this.dp_webgl.glno},e.prototype.setupClip=function(t,i){for(var e=0,r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r];this.calcClippedDrawTotalBounds(t,o),o.isUsing&&e++}if(e>0){var n=i.gl.getParameter(i.gl.FRAMEBUFFER_BINDING),s=new Array(4);s[0]=0,s[1]=0,s[2]=i.gl.canvas.width,s[3]=i.gl.canvas.height,i.gl.viewport(0,0,at.clippingMaskBufferSize,at.clippingMaskBufferSize),this.setupLayoutBounds(e),i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,at.frameBuffers[this.curFrameNo].framebuffer),i.gl.clearColor(0,0,0,0),i.gl.clear(i.gl.COLOR_BUFFER_BIT);for(var r=0;r<this.clipContextList.length;r++){var o=this.clipContextList[r],_=o.allClippedDrawRect,a=(o.layoutChannelNo,o.layoutBounds);this.tmpBoundsOnModel._$jL(_),this.tmpBoundsOnModel.expand(.05*_.width,.05*_.height);var h=a.width/this.tmpBoundsOnModel.width,l=a.height/this.tmpBoundsOnModel.height;this.tmpMatrix2.identity(),this.tmpMatrix2.translate(-1,-1,0),this.tmpMatrix2.scale(2,2,1),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForMask.setMatrix(this.tmpMatrix2.m),this.tmpMatrix2.identity(),this.tmpMatrix2.translate(a.x,a.y,0),this.tmpMatrix2.scale(h,l,1),this.tmpMatrix2.translate(-this.tmpBoundsOnModel.x,-this.tmpBoundsOnModel.y,0),this.tmpMatrixForDraw.setMatrix(this.tmpMatrix2.m);for(var $=this.tmpMatrixForMask.getArray(),u=0;u<16;u++)o.matrixForMask[u]=$[u];for(var p=this.tmpMatrixForDraw.getArray(),u=0;u<16;u++)o.matrixForDraw[u]=p[u];for(var f=o.clippingMaskDrawIndexList.length,c=0;c<f;c++){var d=o.clippingMaskDrawIndexList[c],g=t.getDrawData(d),y=t._$C2(d);i.setClipBufPre_clipContextForMask(o),g.draw(i,t,y)}}i.gl.bindFramebuffer(i.gl.FRAMEBUFFER,n),i.setClipBufPre_clipContextForMask(null),i.gl.viewport(s[0],s[1],s[2],s[3])}},e.prototype.getColorBuffer=function(){return this.colorBuffer},e.prototype.findSameClip=function(t){for(var i=0;i<this.clipContextList.length;i++){var e=this.clipContextList[i],r=e.clipIDList.length;if(r==t.length){for(var o=0,n=0;n<r;n++)for(var s=e.clipIDList[n],_=0;_<r;_++)if(t[_]==s){o++;break}if(o==r)return e}}return null},e.prototype.calcClippedDrawTotalBounds=function(t,i){for(var e=t._$Ri.getModelImpl().getCanvasWidth(),r=t._$Ri.getModelImpl().getCanvasHeight(),o=e>r?e:r,n=o,s=o,_=0,a=0,h=i.clippedDrawContextList.length,l=0;l<h;l++){var $=i.clippedDrawContextList[l],u=$.drawDataIndex,p=t._$C2(u);if(p._$yo()){for(var f=p.getTransformedPoints(),c=f.length,d=[],g=[],y=0,m=U._$i2;m<c;m+=U._$No)d[y]=f[m],g[y]=f[m+1],y++;var T=Math.min.apply(null,d),P=Math.min.apply(null,g),S=Math.max.apply(null,d),v=Math.max.apply(null,g);T<n&&(n=T),P<s&&(s=P),S>_&&(_=S),v>a&&(a=v)}}if(n==o)i.allClippedDrawRect.x=0,i.allClippedDrawRect.y=0,i.allClippedDrawRect.width=0,i.allClippedDrawRect.height=0,i.isUsing=!1;else{var L=_-n,M=a-s;i.allClippedDrawRect.x=n,i.allClippedDrawRect.y=s,i.allClippedDrawRect.width=L,i.allClippedDrawRect.height=M,i.isUsing=!0}},e.prototype.setupLayoutBounds=function(t){var i=t/e.CHANNEL_COUNT,r=t%e.CHANNEL_COUNT;i=~~i,r=~~r;for(var o=0,n=0;n<e.CHANNEL_COUNT;n++){var s=i+(n<r?1:0);if(0==s);else if(1==s){var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=0,a.layoutBounds.y=0,a.layoutBounds.width=1,a.layoutBounds.height=1}else if(2==s)for(var h=0;h<s;h++){var l=h%2,$=0;l=~~l;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=0,a.layoutBounds.width=.5,a.layoutBounds.height=1}else if(s<=4)for(var h=0;h<s;h++){var l=h%2,$=h/2;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=.5*l,a.layoutBounds.y=.5*$,a.layoutBounds.width=.5,a.layoutBounds.height=.5}else if(s<=9)for(var h=0;h<s;h++){var l=h%3,$=h/3;l=~~l,$=~~$;var a=this.clipContextList[o++];a.layoutChannelNo=n,a.layoutBounds.x=l/3,a.layoutBounds.y=$/3,a.layoutBounds.width=1/3,a.layoutBounds.height=1/3}else _._$li("_$6 _$0P mask count : %d",s)}},r.prototype.addClippedDrawData=function(t,i){var e=new o(t,i);this.clippedDrawContextList.push(e)},s._$JT=function(t,i,e){var r=t/i,o=e/i,n=o,s=1-(1-o)*(1-o),_=1-(1-n)*(1-n),a=1/3*(1-o)*s+(n*(2/3)+1/3*(1-n))*(1-s),h=(n+2/3*(1-n))*_+(o*(1/3)+2/3*(1-o))*(1-_),l=1-3*h+3*a-0,$=3*h-6*a+0,u=3*a-0;if(r<=0)return 0;if(r>=1)return 1;var p=r,f=p*p;return l*(p*f)+$*f+u*p+0},s.prototype._$a0=function(){},s.prototype.setFadeIn=function(t){this._$dP=t},s.prototype.setFadeOut=function(t){this._$eo=t},s.prototype._$pT=function(t){this._$V0=t},s.prototype.getFadeOut=function(){return this._$eo},s.prototype._$4T=function(){return this._$eo},s.prototype._$mT=function(){return this._$V0},s.prototype.getDurationMSec=function(){return-1},s.prototype.getLoopDurationMSec=function(){return-1},s.prototype.updateParam=function(t,i){if(i._$AT&&!i._$9L){var e=w.getUserTimeMSec();if(i._$z2<0){i._$z2=e,i._$bs=e;var r=this.getDurationMSec();i._$Do<0&&(i._$Do=r<=0?-1:i._$z2+r)}var o=this._$V0;o=o*(0==this._$dP?1:ht._$r2((e-i._$bs)/this._$dP))*(0==this._$eo||i._$Do<0?1:ht._$r2((i._$Do-e)/this._$eo)),0<=o&&o<=1||console.log("### assert!! ### "),this.updateParamExe(t,e,o,i),i._$Do>0&&i._$Do<e&&(i._$9L=!0)}},s.prototype.updateParamExe=function(t,i,e,r){},_._$8s=0,_._$fT=new Object,_.start=function(t){var i=_._$fT[t];null==i&&(i=new a,i._$r=t,_._$fT[t]=i),i._$0S=w.getSystemTimeMSec()},_.dump=function(t){var i=_._$fT[t];if(null!=i){var e=w.getSystemTimeMSec(),r=e-i._$0S;return console.log(t+" : "+r+"ms"),r}return-1},_.end=function(t){var i=_._$fT[t];if(null!=i){return w.getSystemTimeMSec()-i._$0S}return-1},_._$li=function(t,i){console.log("_$li : "+t+"\n",i)},_._$Ji=function(t,i){console.log(t,i)},_._$dL=function(t,i){console.log(t,i),console.log("\n")},_._$KL=function(t,i){for(var e=0;e<i;e++)e%16==0&&e>0?console.log("\n"):e%8==0&&e>0&&console.log("  "),console.log("%02X ",255&t[e]);console.log("\n")},_._$nr=function(t,i,e){console.log("%s\n",t);for(var r=i.length,o=0;o<r;++o)console.log("%5d",i[o]),console.log("%s\n",e),console.log(",");console.log("\n")},_._$Rb=function(t){console.log("dump exception : "+t),console.log("stack :: "+t.stack)},h.prototype._$8P=function(){return.5*(this.x+this.x+this.width)},h.prototype._$6P=function(){return.5*(this.y+this.y+this.height)},h.prototype._$EL=function(){return this.x+this.width},h.prototype._$5T=function(){return this.y+this.height},h.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},h.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},l.prototype=new et,l._$tP=new Object,l._$27=function(){l._$tP.clear()},l.getID=function(t){var i=l._$tP[t];return null==i&&(i=new l(t),l._$tP[t]=i),i},l.prototype._$3s=function(){return new l},u.prototype=new et,u._$tP=new Object,u._$27=function(){u._$tP.clear()},u.getID=function(t){var i=u._$tP[t];return null==i&&(i=new u(t),u._$tP[t]=i),i},u.prototype._$3s=function(){return new u},p._$42=0,p.prototype._$zP=function(){null==this._$vo&&(this._$vo=new ot),null==this._$F2&&(this._$F2=new Array)},p.prototype.getCanvasWidth=function(){return this._$ao},p.prototype.getCanvasHeight=function(){return this._$1S},p.prototype._$F0=function(t){this._$vo=t._$nP(),this._$F2=t._$nP(),this._$ao=t._$6L(),this._$1S=t._$6L()},p.prototype._$6S=function(t){this._$F2.push(t)},p.prototype._$Xr=function(){return this._$F2},p.prototype._$E2=function(){return this._$vo},f.prototype.setup=function(t,i,e){this._$ks=this._$Yb(),this.p2._$xT(),3==arguments.length&&(this._$Fo=t,this._$L2=i,this.p1._$p=e,this.p2._$p=e,this.p2.y=t,this.setup())},f.prototype.getPhysicsPoint1=function(){return this.p1},f.prototype.getPhysicsPoint2=function(){return this.p2},f.prototype._$qr=function(){return this._$Db},f.prototype._$pr=function(t){this._$Db=t},f.prototype._$5r=function(){return this._$M2},f.prototype._$Cs=function(){return this._$9b},f.prototype._$Yb=function(){return-180*Math.atan2(this.p1.x-this.p2.x,-(this.p1.y-this.p2.y))/Math.PI},f.prototype.addSrcParam=function(t,i,e,r){var o=new g(t,i,e,r);this._$lL.push(o)},f.prototype.addTargetParam=function(t,i,e,r){var o=new T(t,i,e,r);this._$qP.push(o)},f.prototype.update=function(t,i){if(0==this._$iP)return this._$iP=this._$iT=i,void(this._$Fo=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y)));var e=(i-this._$iT)/1e3;if(0!=e){for(var r=this._$lL.length-1;r>=0;--r){this._$lL[r]._$oP(t,this)}this._$oo(t,e),this._$M2=this._$Yb(),this._$9b=(this._$M2-this._$ks)/e,this._$ks=this._$M2}for(var r=this._$qP.length-1;r>=0;--r){this._$qP[r]._$YS(t,this)}this._$iT=i},f.prototype._$oo=function(t,i){i<.033&&(i=.033);var e=1/i;this.p1.vx=(this.p1.x-this.p1._$s0)*e,this.p1.vy=(this.p1.y-this.p1._$70)*e,this.p1.ax=(this.p1.vx-this.p1._$7L)*e,this.p1.ay=(this.p1.vy-this.p1._$HL)*e,this.p1.fx=this.p1.ax*this.p1._$p,this.p1.fy=this.p1.ay*this.p1._$p,this.p1._$xT();var r,o,n=-Math.atan2(this.p1.y-this.p2.y,this.p1.x-this.p2.x),s=Math.cos(n),_=Math.sin(n),a=9.8*this.p2._$p,h=this._$Db*Lt._$bS,l=a*Math.cos(n-h);r=l*_,o=l*s;var $=-this.p1.fx*_*_,u=-this.p1.fy*_*s,p=-this.p2.vx*this._$L2,f=-this.p2.vy*this._$L2;this.p2.fx=r+$+p,this.p2.fy=o+u+f,this.p2.ax=this.p2.fx/this.p2._$p,this.p2.ay=this.p2.fy/this.p2._$p,this.p2.vx+=this.p2.ax*i,this.p2.vy+=this.p2.ay*i,this.p2.x+=this.p2.vx*i,this.p2.y+=this.p2.vy*i;var c=Math.sqrt((this.p1.x-this.p2.x)*(this.p1.x-this.p2.x)+(this.p1.y-this.p2.y)*(this.p1.y-this.p2.y));this.p2.x=this.p1.x+this._$Fo*(this.p2.x-this.p1.x)/c,this.p2.y=this.p1.y+this._$Fo*(this.p2.y-this.p1.y)/c,this.p2.vx=(this.p2.x-this.p2._$s0)*e,this.p2.vy=(this.p2.y-this.p2._$70)*e,this.p2._$xT()},c.prototype._$xT=function(){this._$s0=this.x,this._$70=this.y,this._$7L=this.vx,this._$HL=this.vy},d.prototype._$oP=function(t,i){},g.prototype=new d,g.prototype._$oP=function(t,i){var e=this.scale*t.getParamFloat(this._$wL),r=i.getPhysicsPoint1();switch(this._$tL){default:case f.Src.SRC_TO_X:r.x=r.x+(e-r.x)*this._$V0;break;case f.Src.SRC_TO_Y:r.y=r.y+(e-r.y)*this._$V0;break;case f.Src.SRC_TO_G_ANGLE:var o=i._$qr();o+=(e-o)*this._$V0,i._$pr(o)}},y.prototype._$YS=function(t,i){},T.prototype=new y,T.prototype._$YS=function(t,i){switch(this._$YP){default:case f.Target.TARGET_FROM_ANGLE:t.setParamFloat(this._$wL,this.scale*i._$5r(),this._$V0);break;case f.Target.TARGET_FROM_ANGLE_V:t.setParamFloat(this._$wL,this.scale*i._$Cs(),this._$V0)}},f.Src=function(){},f.Src.SRC_TO_X="SRC_TO_X",f.Src.SRC_TO_Y="SRC_TO_Y",f.Src.SRC_TO_G_ANGLE="SRC_TO_G_ANGLE",f.Target=function(){},f.Target.TARGET_FROM_ANGLE="TARGET_FROM_ANGLE",f.Target.TARGET_FROM_ANGLE_V="TARGET_FROM_ANGLE_V",P.prototype.init=function(t){this._$fL=t._$fL,this._$gL=t._$gL,this._$B0=t._$B0,this._$z0=t._$z0,this._$qT=t._$qT,this.reflectX=t.reflectX,this.reflectY=t.reflectY},P.prototype._$F0=function(t){this._$fL=t._$_T(),this._$gL=t._$_T(),this._$B0=t._$_T(),this._$z0=t._$_T(),this._$qT=t._$_T(),t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this.reflectX=t._$po(),this.reflectY=t._$po())},P.prototype._$e=function(){};var It=function(){};It._$ni=function(t,i,e,r,o,n,s,_,a){var h=s*n-_*o;if(0==h)return null;var l,$=((t-e)*n-(i-r)*o)/h;return l=0!=o?(t-e-$*s)/o:(i-r-$*_)/n,isNaN(l)&&(l=(t-e-$*s)/o,isNaN(l)&&(l=(i-r-$*_)/n),isNaN(l)&&(console.log("a is NaN @UtVector#_$ni() "),console.log("v1x : "+o),console.log("v1x != 0 ? "+(0!=o)))),null==a?new Array(l,$):(a[0]=l,a[1]=$,a)},S.prototype._$8P=function(){return this.x+.5*this.width},S.prototype._$6P=function(){return this.y+.5*this.height},S.prototype._$EL=function(){return this.x+this.width},S.prototype._$5T=function(){return this.y+this.height},S.prototype._$jL=function(t,i,e,r){this.x=t,this.y=i,this.width=e,this.height=r},S.prototype._$jL=function(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height},S.prototype.contains=function(t,i){return this.x<=this.x&&this.y<=this.y&&this.x<=this.x+this.width&&this.y<=this.y+this.height},S.prototype.expand=function(t,i){this.x-=t,this.y-=i,this.width+=2*t,this.height+=2*i},v._$Z2=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h|0}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1],p=_+(a-_)*h|0,f=l+($-l)*h|0;return p+(f-p)*u|0}if(3==o){var c=r[n[0]],d=r[n[1]],g=r[n[2]],y=r[n[3]],m=r[n[4]],T=r[n[5]],P=r[n[6]],S=r[n[7]],h=s[0],u=s[1],v=s[2],_=c+(d-c)*h|0,a=g+(y-g)*h|0,l=m+(T-m)*h|0,$=P+(S-P)*h|0,p=_+(a-_)*u|0,f=l+($-l)*u|0;return p+(f-p)*v|0}if(4==o){var L=r[n[0]],M=r[n[1]],E=r[n[2]],A=r[n[3]],I=r[n[4]],w=r[n[5]],x=r[n[6]],O=r[n[7]],D=r[n[8]],R=r[n[9]],b=r[n[10]],F=r[n[11]],C=r[n[12]],N=r[n[13]],B=r[n[14]],U=r[n[15]],h=s[0],u=s[1],v=s[2],G=s[3],c=L+(M-L)*h|0,d=E+(A-E)*h|0,g=I+(w-I)*h|0,y=x+(O-x)*h|0,m=D+(R-D)*h|0,T=b+(F-b)*h|0,P=C+(N-C)*h|0,S=B+(U-B)*h|0,_=c+(d-c)*u|0,a=g+(y-g)*u|0,l=m+(T-m)*u|0,$=P+(S-P)*u|0,p=_+(a-_)*v|0,f=l+($-l)*v|0;return p+(f-p)*G|0}for(var Y=1<<o,k=new Float32Array(Y),V=0;V<Y;V++){for(var X=V,z=1,H=0;H<o;H++)z*=X%2==0?1-s[H]:s[H],X/=2;k[V]=z}for(var W=new Float32Array(Y),j=0;j<Y;j++)W[j]=r[n[j]];for(var q=0,j=0;j<Y;j++)q+=k[j]*W[j];return q+.5|0},v._$br=function(t,i,e,r){var o=i._$Q2(t,e),n=t._$vs(),s=t._$Tr();if(i._$zr(n,s,o),o<=0)return r[n[0]];if(1==o){var _=r[n[0]],a=r[n[1]],h=s[0];return _+(a-_)*h}if(2==o){var _=r[n[0]],a=r[n[1]],l=r[n[2]],$=r[n[3]],h=s[0],u=s[1];return(1-u)*(_+(a-_)*h)+u*(l+($-l)*h)}if(3==o){var p=r[n[0]],f=r[n[1]],c=r[n[2]],d=r[n[3]],g=r[n[4]],y=r[n[5]],m=r[n[6]],T=r[n[7]],h=s[0],u=s[1],P=s[2];return(1-P)*((1-u)*(p+(f-p)*h)+u*(c+(d-c)*h))+P*((1-u)*(g+(y-g)*h)+u*(m+(T-m)*h))}if(4==o){var S=r[n[0]],v=r[n[1]],L=r[n[2]],M=r[n[3]],E=r[n[4]],A=r[n[5]],I=r[n[6]],w=r[n[7]],x=r[n[8]],O=r[n[9]],D=r[n[10]],R=r[n[11]],b=r[n[12]],F=r[n[13]],C=r[n[14]],N=r[n[15]],h=s[0],u=s[1],P=s[2],B=s[3];return(1-B)*((1-P)*((1-u)*(S+(v-S)*h)+u*(L+(M-L)*h))+P*((1-u)*(E+(A-E)*h)+u*(I+(w-I)*h)))+B*((1-P)*((1-u)*(x+(O-x)*h)+u*(D+(R-D)*h))+P*((1-u)*(b+(F-b)*h)+u*(C+(N-C)*h)))}for(var U=1<<o,G=new Float32Array(U),Y=0;Y<U;Y++){for(var k=Y,V=1,X=0;X<o;X++)V*=k%2==0?1-s[X]:s[X],k/=2;G[Y]=V}for(var z=new Float32Array(U),H=0;H<U;H++)z[H]=r[n[H]];for(var W=0,H=0;H<U;H++)W+=G[H]*z[H];return W},v._$Vr=function(t,i,e,r,o,n,s,_){var a=i._$Q2(t,e),h=t._$vs(),l=t._$Tr();i._$zr(h,l,a);var $=2*r,u=s;if(a<=0){var p=h[0],f=o[p];if(2==_&&0==s)w._$jT(f,0,n,0,$);else for(var c=0;c<$;)n[u]=f[c++],n[u+1]=f[c++],u+=_}else if(1==a)for(var f=o[h[0]],d=o[h[1]],g=l[0],y=1-g,c=0;c<$;)n[u]=f[c]*y+d[c]*g,++c,n[u+1]=f[c]*y+d[c]*g,++c,u+=_;else if(2==a)for(var f=o[h[0]],d=o[h[1]],m=o[h[2]],T=o[h[3]],g=l[0],P=l[1],y=1-g,S=1-P,v=S*y,L=S*g,M=P*y,E=P*g,c=0;c<$;)n[u]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,n[u+1]=v*f[c]+L*d[c]+M*m[c]+E*T[c],++c,u+=_;else if(3==a)for(var A=o[h[0]],I=o[h[1]],x=o[h[2]],O=o[h[3]],D=o[h[4]],R=o[h[5]],b=o[h[6]],F=o[h[7]],g=l[0],P=l[1],C=l[2],y=1-g,S=1-P,N=1-C,B=N*S*y,U=N*S*g,G=N*P*y,Y=N*P*g,k=C*S*y,V=C*S*g,X=C*P*y,z=C*P*g,c=0;c<$;)n[u]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,n[u+1]=B*A[c]+U*I[c]+G*x[c]+Y*O[c]+k*D[c]+V*R[c]+X*b[c]+z*F[c],++c,u+=_;else if(4==a)for(var H=o[h[0]],W=o[h[1]],j=o[h[2]],q=o[h[3]],J=o[h[4]],Q=o[h[5]],Z=o[h[6]],K=o[h[7]],tt=o[h[8]],it=o[h[9]],et=o[h[10]],rt=o[h[11]],ot=o[h[12]],nt=o[h[13]],st=o[h[14]],_t=o[h[15]],g=l[0],P=l[1],C=l[2],at=l[3],y=1-g,S=1-P,N=1-C,ht=1-at,lt=ht*N*S*y,$t=ht*N*S*g,ut=ht*N*P*y,pt=ht*N*P*g,ft=ht*C*S*y,ct=ht*C*S*g,dt=ht*C*P*y,gt=ht*C*P*g,yt=at*N*S*y,mt=at*N*S*g,Tt=at*N*P*y,Pt=at*N*P*g,St=at*C*S*y,vt=at*C*S*g,Lt=at*C*P*y,Mt=at*C*P*g,c=0;c<$;)n[u]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,n[u+1]=lt*H[c]+$t*W[c]+ut*j[c]+pt*q[c]+ft*J[c]+ct*Q[c]+dt*Z[c]+gt*K[c]+yt*tt[c]+mt*it[c]+Tt*et[c]+Pt*rt[c]+St*ot[c]+vt*nt[c]+Lt*st[c]+Mt*_t[c],++c,u+=_;else{for(var Et=1<<a,At=new Float32Array(Et),It=0;It<Et;It++){for(var wt=It,xt=1,Ot=0;Ot<a;Ot++)xt*=wt%2==0?1-l[Ot]:l[Ot],wt/=2;At[It]=xt}for(var Dt=new Float32Array(Et),Rt=0;Rt<Et;Rt++)Dt[Rt]=o[h[Rt]];for(var c=0;c<$;){for(var bt=0,Ft=0,Ct=c+1,Rt=0;Rt<Et;Rt++)bt+=At[Rt]*Dt[Rt][c],Ft+=At[Rt]*Dt[Rt][Ct];c+=2,n[u]=bt,n[u+1]=Ft,u+=_}}},L.prototype._$HT=function(t,i){this.x=t,this.y=i},L.prototype._$HT=function(t){this.x=t.x,this.y=t.y},M._$ur=-2,M._$ES=500,M._$wb=2,M._$8S=3,M._$52=M._$ES,M._$R2=M._$ES,M._$or=function(){return M._$52},M._$Pr=function(){return M._$R2},M.prototype.convertClipIDForV2_11=function(t){var i=[];return null==t?null:0==t.length?null:/,/.test(t)?i=t.id.split(","):(i.push(t.id),i)},M.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=[],this._$MS(this._$Lb)},M.prototype.getClipIDList=function(){return this.clipIDList},M.prototype.init=function(t){},M.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},M.prototype._$2b=function(t,i){},M.prototype.getDrawDataID=function(){return this._$gP},M.prototype._$j2=function(t){this._$gP=t},M.prototype.getOpacity=function(t,i){return i._$7s},M.prototype._$zS=function(t,i){return i._$Us},M.prototype._$MS=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<M._$52?M._$52=e:e>M._$R2&&(M._$R2=e)}},M.prototype.getTargetBaseDataID=function(){return this._$dr},M.prototype._$gs=function(t){this._$dr=t},M.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},M.prototype.preDraw=function(t,i,e){},M.prototype.draw=function(t,i,e){},M.prototype.getType=function(){},M.prototype._$B2=function(t,i,e){},E._$ps=32,E.CLIPPING_PROCESS_NONE=0,E.CLIPPING_PROCESS_OVERWRITE_ALPHA=1,E.CLIPPING_PROCESS_MULTIPLY_ALPHA=2,E.CLIPPING_PROCESS_DRAW=3,E.CLIPPING_PROCESS_CLEAR_ALPHA=4,E.prototype.setChannelFlagAsColor=function(t,i){this.CHANNEL_COLORS[t]=i},E.prototype.getChannelFlagAsColor=function(t){return this.CHANNEL_COLORS[t]},E.prototype._$ZT=function(){},E.prototype._$Uo=function(t,i,e,r,o,n,s){},E.prototype._$Rs=function(){return-1},E.prototype._$Ds=function(t){},E.prototype.setBaseColor=function(t,i,e,r){t<0?t=0:t>1&&(t=1),i<0?i=0:i>1&&(i=1),e<0?e=0:e>1&&(e=1),r<0?r=0:r>1&&(r=1),this._$lT=t,this._$C0=i,this._$tT=e,this._$WL=r},E.prototype._$WP=function(t){this.culling=t},E.prototype.setMatrix=function(t){for(var i=0;i<16;i++)this.matrix4x4[i]=t[i]},E.prototype._$IT=function(){return this.matrix4x4},E.prototype.setPremultipliedAlpha=function(t){this.premultipliedAlpha=t},E.prototype.isPremultipliedAlpha=function(){return this.premultipliedAlpha},E.prototype.setAnisotropy=function(t){this.anisotropy=t},E.prototype.getAnisotropy=function(){return this.anisotropy},E.prototype.getClippingProcess=function(){return this.clippingProcess},E.prototype.setClippingProcess=function(t){this.clippingProcess=t},E.prototype.setClipBufPre_clipContextForMask=function(t){this.clipBufPre_clipContextMask=t},E.prototype.getClipBufPre_clipContextMask=function(){return this.clipBufPre_clipContextMask},E.prototype.setClipBufPre_clipContextForDraw=function(t){this.clipBufPre_clipContextDraw=t},E.prototype.getClipBufPre_clipContextDraw=function(){return this.clipBufPre_clipContextDraw},I._$ur=-2,I._$c2=1,I._$_b=2,I.prototype._$F0=function(t){this._$kP=t._$nP(),this._$dr=t._$nP()},I.prototype.readV2_opacity=function(t){t.getFormatVersion()>=G.LIVE2D_FORMAT_VERSION_V2_10_SDK2&&(this._$mS=t._$Tb())},I.prototype.init=function(t){},I.prototype._$Nr=function(t,i){},I.prototype.interpolateOpacity=function(t,i,e,r){null==this._$mS?e.setInterpolatedOpacity(1):e.setInterpolatedOpacity(v._$br(t,i,r,this._$mS))},I.prototype._$2b=function(t,i){},I.prototype._$nb=function(t,i,e,r,o,n,s){},I.prototype.getType=function(){},I.prototype._$gs=function(t){this._$dr=t},I.prototype._$a2=function(t){this._$kP=t},I.prototype.getTargetBaseDataID=function(){return this._$dr},I.prototype.getBaseDataID=function(){return this._$kP},I.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},w._$W2=0,w._$CS=w._$W2,w._$Mo=function(){return!0},w._$XP=function(t){try{for(var i=getTimeMSec();getTimeMSec()-i<t;);}catch(t){t._$Rb()}},w.getUserTimeMSec=function(){return w._$CS==w._$W2?w.getSystemTimeMSec():w._$CS},w.setUserTimeMSec=function(t){w._$CS=t},w.updateUserTimeMSec=function(){return w._$CS=w.getSystemTimeMSec()},w.getTimeMSec=function(){return(new Date).getTime()},w.getSystemTimeMSec=function(){return(new Date).getTime()},w._$Q=function(t){},w._$jT=function(t,i,e,r,o){for(var n=0;n<o;n++)e[r+n]=t[i+n]},x._$ds=-2,x.prototype._$F0=function(t){this._$wL=t._$nP(),this._$VP=t._$6L(),this._$GP=t._$nP()},x.prototype.getParamIndex=function(t){return this._$2r!=t&&(this._$8o=x._$ds),this._$8o},x.prototype._$Pb=function(t,i){this._$8o=t,this._$2r=i},x.prototype.getParamID=function(){return this._$wL},x.prototype._$yP=function(t){this._$wL=t},x.prototype._$N2=function(){return this._$VP},x.prototype._$d2=function(){return this._$GP},x.prototype._$t2=function(t,i){this._$VP=t,this._$GP=i},x.prototype._$Lr=function(){return this._$O2},x.prototype._$wr=function(t){this._$O2=t},x.prototype._$SL=function(){return this._$ri},x.prototype._$AL=function(t){this._$ri=t},O.startsWith=function(t,i,e){var r=i+e.length;if(r>=t.length)return!1;for(var o=i;o<r;o++)if(O.getChar(t,o)!=e.charAt(o-i))return!1;return!0},O.getChar=function(t,i){return String.fromCharCode(t.getUint8(i))},O.createString=function(t,i,e){for(var r=new ArrayBuffer(2*e),o=new Uint16Array(r),n=0;n<e;n++)o[n]=t.getUint8(i+n);return String.fromCharCode.apply(null,o)},O._$LS=function(t,i,e,r){t instanceof ArrayBuffer&&(t=new DataView(t));var o=e,n=!1,s=!1,_=0,a=O.getChar(t,o);"-"==a&&(n=!0,o++);for(var h=!1;o<i;o++){switch(a=O.getChar(t,o)){case"0":_*=10;break;case"1":_=10*_+1;break;case"2":_=10*_+2;break;case"3":_=10*_+3;break;case"4":_=10*_+4;break;case"5":_=10*_+5;break;case"6":_=10*_+6;break;case"7":_=10*_+7;break;case"8":_=10*_+8;break;case"9":_=10*_+9;break;case".":s=!0,o++,h=!0;break;default:h=!0}if(h)break}if(s)for(var l=.1,$=!1;o<i;o++){switch(a=O.getChar(t,o)){case"0":break;case"1":_+=1*l;break;case"2":_+=2*l;break;case"3":_+=3*l;break;case"4":_+=4*l;break;case"5":_+=5*l;break;case"6":_+=6*l;break;case"7":_+=7*l;break;case"8":_+=8*l;break;case"9":_+=9*l;break;default:$=!0}if(l*=.1,$)break}return n&&(_=-_),r[0]=o,_},D.prototype._$zP=function(){this._$Ob=new Array},D.prototype._$F0=function(t){this._$Ob=t._$nP()},D.prototype._$Ur=function(t){if(t._$WS())return!0;for(var i=t._$v2(),e=this._$Ob.length-1;e>=0;--e){var r=this._$Ob[e].getParamIndex(i);if(r==x._$ds&&(r=t.getParamIndex(this._$Ob[e].getParamID())),t._$Xb(r))return!0}return!1},D.prototype._$Q2=function(t,i){for(var e,r,o=this._$Ob.length,n=t._$v2(),s=0,_=0;_<o;_++){var a=this._$Ob[_];if(e=a.getParamIndex(n),e==x._$ds&&(e=t.getParamIndex(a.getParamID()),a._$Pb(e,n)),e<0)throw new Exception("err 23242 : "+a.getParamID());var h=e<0?0:t.getParamFloat(e);r=a._$N2();var l,$,u=a._$d2(),p=-1,f=0;if(r<1);else if(1==r)l=u[0],l-U._$J<h&&h<l+U._$J?(p=0,f=0):(p=0,i[0]=!0);else if(l=u[0],h<l-U._$J)p=0,i[0]=!0;else if(h<l+U._$J)p=0;else{for(var c=!1,d=1;d<r;++d){if($=u[d],h<$+U._$J){$-U._$J<h?p=d:(p=d-1,f=(h-l)/($-l),s++),c=!0;break}l=$}c||(p=r-1,f=0,i[0]=!0)}a._$wr(p),a._$AL(f)}return s},D.prototype._$zr=function(t,i,e){var r=1<<e;r+1>U._$Qb&&console.log("err 23245\n");for(var o=this._$Ob.length,n=1,s=1,_=0,a=0;a<r;++a)t[a]=0;for(var h=0;h<o;++h){var l=this._$Ob[h];if(0==l._$SL()){var $=l._$Lr()*n;if($<0&&at._$3T)throw new Exception("err 23246");for(var a=0;a<r;++a)t[a]+=$}else{for(var $=n*l._$Lr(),u=n*(l._$Lr()+1),a=0;a<r;++a)t[a]+=(a/s|0)%2==0?$:u;i[_++]=l._$SL(),s*=2}n*=l._$N2()}t[r]=65535,i[_]=-1},D.prototype._$h2=function(t,i,e){for(var r=new Float32Array(i),o=0;o<i;++o)r[o]=e[o];var n=new x;n._$yP(t),n._$t2(i,r),this._$Ob.push(n)},D.prototype._$J2=function(t){for(var i=t,e=this._$Ob.length,r=0;r<e;++r){var o=this._$Ob[r],n=o._$N2(),s=i%o._$N2(),_=o._$d2()[s];console.log("%s[%d]=%7.2f / ",o.getParamID(),s,_),i/=n}console.log("\n")},D.prototype.getParamCount=function(){return this._$Ob.length},D.prototype._$zs=function(){return this._$Ob},R.prototype.identity=function(){for(var t=0;t<16;t++)this.m[t]=t%5==0?1:0},R.prototype.getArray=function(){return this.m},R.prototype.getCopyMatrix=function(){return new Float32Array(this.m)},R.prototype.setMatrix=function(t){if(null!=t&&16==t.length)for(var i=0;i<16;i++)this.m[i]=t[i]},R.prototype.mult=function(t,i,e){return null==i?null:(this==i?this.mult_safe(this.m,t.m,i.m,e):this.mult_fast(this.m,t.m,i.m,e),i)},R.prototype.mult_safe=function(t,i,e,r){if(t==e){var o=new Array(16);this.mult_fast(t,i,o,r);for(var n=15;n>=0;--n)e[n]=o[n]}else this.mult_fast(t,i,e,r)},R.prototype.mult_fast=function(t,i,e,r){r?(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14],e[3]=e[7]=e[11]=0,e[15]=1):(e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15])},R.prototype.translate=function(t,i,e){this.m[12]=this.m[0]*t+this.m[4]*i+this.m[8]*e+this.m[12],this.m[13]=this.m[1]*t+this.m[5]*i+this.m[9]*e+this.m[13],this.m[14]=this.m[2]*t+this.m[6]*i+this.m[10]*e+this.m[14],this.m[15]=this.m[3]*t+this.m[7]*i+this.m[11]*e+this.m[15]},R.prototype.scale=function(t,i,e){this.m[0]*=t,this.m[4]*=i,this.m[8]*=e,this.m[1]*=t,this.m[5]*=i,this.m[9]*=e,this.m[2]*=t,this.m[6]*=i,this.m[10]*=e,this.m[3]*=t,this.m[7]*=i,this.m[11]*=e},R.prototype.rotateX=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[4];this.m[4]=r*i+this.m[8]*e,this.m[8]=r*-e+this.m[8]*i,r=this.m[5],this.m[5]=r*i+this.m[9]*e,this.m[9]=r*-e+this.m[9]*i,r=this.m[6],this.m[6]=r*i+this.m[10]*e,this.m[10]=r*-e+this.m[10]*i,r=this.m[7],this.m[7]=r*i+this.m[11]*e,this.m[11]=r*-e+this.m[11]*i},R.prototype.rotateY=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[8]*-e,this.m[8]=r*e+this.m[8]*i,r=this.m[1],this.m[1]=r*i+this.m[9]*-e,this.m[9]=r*e+this.m[9]*i,r=m[2],this.m[2]=r*i+this.m[10]*-e,this.m[10]=r*e+this.m[10]*i,r=m[3],this.m[3]=r*i+this.m[11]*-e,this.m[11]=r*e+this.m[11]*i},R.prototype.rotateZ=function(t){var i=Lt.fcos(t),e=Lt._$9(t),r=this.m[0];this.m[0]=r*i+this.m[4]*e,this.m[4]=r*-e+this.m[4]*i,r=this.m[1],this.m[1]=r*i+this.m[5]*e,this.m[5]=r*-e+this.m[5]*i,r=this.m[2],this.m[2]=r*i+this.m[6]*e,this.m[6]=r*-e+this.m[6]*i,r=this.m[3],this.m[3]=r*i+this.m[7]*e,this.m[7]=r*-e+this.m[7]*i},b.prototype=new et,b._$tP=new Object,b._$27=function(){b._$tP.clear()},b.getID=function(t){var i=b._$tP[t];return null==i&&(i=new b(t),b._$tP[t]=i),i},b.prototype._$3s=function(){return new b},F._$kS=-1,F._$pS=0,F._$hb=1,F.STATE_IDENTITY=0,F._$gb=1,F._$fo=2,F._$go=4,F.prototype.transform=function(t,i,e){var r,o,n,s,_,a,h=0,l=0;switch(this._$hi){default:return;case F._$go|F._$fo|F._$gb:for(r=this._$7,o=this._$H,n=this._$k,s=this._$f,_=this._$g,a=this._$w;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u+n,i[l++]=s*$+_*u+a}return;case F._$go|F._$fo:for(r=this._$7,o=this._$H,s=this._$f,_=this._$g;--e>=0;){var $=t[h++],u=t[h++];i[l++]=r*$+o*u,i[l++]=s*$+_*u}return;case F._$go|F._$gb:for(o=this._$H,n=this._$k,s=this._$f,a=this._$w;--e>=0;){var $=t[h++];i[l++]=o*t[h++]+n,i[l++]=s*$+a}return;case F._$go:for(o=this._$H,s=this._$f;--e>=0;){var $=t[h++];i[l++]=o*t[h++],i[l++]=s*$}return;case F._$fo|F._$gb:for(r=this._$7,n=this._$k,_=this._$g,a=this._$w;--e>=0;)i[l++]=r*t[h++]+n,i[l++]=_*t[h++]+a;return;case F._$fo:for(r=this._$7,_=this._$g;--e>=0;)i[l++]=r*t[h++],i[l++]=_*t[h++];return;case F._$gb:for(n=this._$k,a=this._$w;--e>=0;)i[l++]=t[h++]+n,i[l++]=t[h++]+a;return;case F.STATE_IDENTITY:return void(t==i&&h==l||w._$jT(t,h,i,l,2*e))}},F.prototype.update=function(){0==this._$H&&0==this._$f?1==this._$7&&1==this._$g?0==this._$k&&0==this._$w?(this._$hi=F.STATE_IDENTITY,this._$Z=F._$pS):(this._$hi=F._$gb,this._$Z=F._$hb):0==this._$k&&0==this._$w?(this._$hi=F._$fo,this._$Z=F._$kS):(this._$hi=F._$fo|F._$gb,this._$Z=F._$kS):0==this._$7&&0==this._$g?0==this._$k&&0==this._$w?(this._$hi=F._$go,this._$Z=F._$kS):(this._$hi=F._$go|F._$gb,this._$Z=F._$kS):0==this._$k&&0==this._$w?(this._$hi=F._$go|F._$fo,this._$Z=F._$kS):(this._$hi=F._$go|F._$fo|F._$gb,this._$Z=F._$kS)},F.prototype._$RT=function(t){this._$IT(t);var i=t[0],e=t[2],r=t[1],o=t[3],n=Math.sqrt(i*i+r*r),s=i*o-e*r;0==n?at._$so&&console.log("affine._$RT() / rt==0"):(t[0]=n,t[1]=s/n,t[2]=(r*o+i*e)/s,t[3]=Math.atan2(r,i))},F.prototype._$ho=function(t,i,e,r){var o=new Float32Array(6),n=new Float32Array(6);t._$RT(o),i._$RT(n);var s=new Float32Array(6);s[0]=o[0]+(n[0]-o[0])*e,s[1]=o[1]+(n[1]-o[1])*e,s[2]=o[2]+(n[2]-o[2])*e,s[3]=o[3]+(n[3]-o[3])*e,s[4]=o[4]+(n[4]-o[4])*e,s[5]=o[5]+(n[5]-o[5])*e,r._$CT(s)},F.prototype._$CT=function(t){var i=Math.cos(t[3]),e=Math.sin(t[3]);this._$7=t[0]*i,this._$f=t[0]*e,this._$H=t[1]*(t[2]*i-e),this._$g=t[1]*(t[2]*e+i),this._$k=t[4],this._$w=t[5],this.update()},F.prototype._$IT=function(t){t[0]=this._$7,t[1]=this._$f,t[2]=this._$H,t[3]=this._$g,t[4]=this._$k,t[5]=this._$w},C.prototype=new s,C._$cs="VISIBLE:",C._$ar="LAYOUT:",C._$Co=0,C._$D2=[],C._$1T=1,C.loadMotion=function(t){var i=new C,e=[0],r=t.length;i._$yT=0;for(var o=0;o<r;++o){var n=255&t[o];if("\n"!=n&&"\r"!=n)if("#"!=n)if("$"!=n){if("a"<=n&&n<="z"||"A"<=n&&n<="Z"||"_"==n){for(var s=o,_=-1;o<r&&("\r"!=(n=255&t[o])&&"\n"!=n);++o)if("="==n){_=o;break}if(_>=0){var a=new B;O.startsWith(t,s,C._$cs)?(a._$RP=B._$hs,a._$4P=new String(t,s,_-s)):O.startsWith(t,s,C._$ar)?(a._$4P=new String(t,s+7,_-s-7),O.startsWith(t,s+7,"ANCHOR_X")?a._$RP=B._$xs:O.startsWith(t,s+7,"ANCHOR_Y")?a._$RP=B._$us:O.startsWith(t,s+7,"SCALE_X")?a._$RP=B._$qs:O.startsWith(t,s+7,"SCALE_Y")?a._$RP=B._$Ys:O.startsWith(t,s+7,"X")?a._$RP=B._$ws:O.startsWith(t,s+7,"Y")&&(a._$RP=B._$Ns)):(a._$RP=B._$Fr,a._$4P=new String(t,s,_-s)),i.motions.push(a);var h=0;for(C._$D2.clear(),o=_+1;o<r&&("\r"!=(n=255&t[o])&&"\n"!=n);++o)if(","!=n&&" "!=n&&"\t"!=n){var l=O._$LS(t,r,o,e);if(e[0]>0){C._$D2.push(l),h++;var $=e[0];if($<o){console.log("_$n0 _$hi . @Live2DMotion loadMotion()\n");break}o=$}}a._$I0=C._$D2._$BL(),h>i._$yT&&(i._$yT=h)}}}else{for(var s=o,_=-1;o<r&&("\r"!=(n=255&t[o])&&"\n"!=n);++o)if("="==n){_=o;break}var u=!1;if(_>=0)for(_==s+4&&"f"==t[s+1]&&"p"==t[s+2]&&"s"==t[s+3]&&(u=!0),o=_+1;o<r&&("\r"!=(n=255&t[o])&&"\n"!=n);++o)if(","!=n&&" "!=n&&"\t"!=n){var l=O._$LS(t,r,o,e);e[0]>0&&u&&5<l&&l<121&&(i._$D0=l),o=e[0]}for(;o<r&&("\n"!=t[o]&&"\r"!=t[o]);++o);}else for(;o<r&&("\n"!=t[o]&&"\r"!=t[o]);++o);}return i._$AS=1e3*i._$yT/i._$D0|0,i},C.prototype.getDurationMSec=function(){return this._$AS},C.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log("_$wL[%s] [%d]. ",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log("%5.2f ,",i._$I0[e]);console.log("\n")}},C.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p=t.getParamFloat($),f=h._$I0[s>=l?l-1:s],c=h._$I0[s+1>=l?l-1:s+1],d=f+(c-f)*_,g=p+(d-p)*e;t.setParamFloat($,g)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0)},C.prototype._$r0=function(){return this._$E},C.prototype._$aL=function(t){this._$E=t},C.prototype.isLoopFadeIn=function(){return this.loopFadeIn},C.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,U._$Ms=1,U._$Qs=2,U._$i2=0,U._$No=2,U._$do=U._$Ms,U._$Ls=!0,U._$1r=5,U._$Qb=65,U._$J=1e-4,U._$FT=.001,U._$Ss=3,G._$o7=6,G._$S7=7,G._$s7=8,G._$77=9,G.LIVE2D_FORMAT_VERSION_V2_10_SDK2=10,G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1=11,G._$T7=G.LIVE2D_FORMAT_VERSION_V2_11_SDK2_1,G._$Is=-2004318072,G._$h0=0,G._$4L=23,G._$7P=33,G._$uT=function(t){console.log("_$bo :: _$6 _$mo _$E0 : %d\n",t)},G._$9o=function(t){if(t<40)return G._$uT(t),null;if(t<50)return G._$uT(t),null;if(t<60)return G._$uT(t),null;if(t<100)switch(t){case 65:return new Z;case 66:return new D;case 67:return new x;case 68:return new z;case 69:return new P;case 70:return new $t;default:return G._$uT(t),null}else if(t<150)switch(t){case 131:return new st;case 133:return new tt;case 136:return new p;case 137:return new ot;case 142:return new j}return G._$uT(t),null},Y._$HP=0,Y._$_0=!0;Y._$V2=-1,Y._$W0=-1,Y._$jr=!1,Y._$ZS=!0,Y._$tr=-1e6,Y._$lr=1e6,Y._$is=32,Y._$e=!1,Y.prototype.getDrawDataIndex=function(t){for(var i=this._$aS.length-1;i>=0;--i)if(null!=this._$aS[i]&&this._$aS[i].getDrawDataID()==t)return i;return-1},Y.prototype.getDrawData=function(t){if(t instanceof b){if(null==this._$Bo){this._$Bo=new Object;for(var i=this._$aS.length,e=0;e<i;e++){var r=this._$aS[e],o=r.getDrawDataID();null!=o&&(this._$Bo[o]=r)}}return this._$Bo[id]}return t<this._$aS.length?this._$aS[t]:null},Y.prototype.release=function(){this._$3S.clear(),this._$aS.clear(),this._$F2.clear(),null!=this._$Bo&&this._$Bo.clear(),this._$db.clear(),this._$8b.clear(),this._$Hr.clear()},Y.prototype.init=function(){this._$co++,this._$F2.length>0&&this.release();for(var t=this._$Ri.getModelImpl(),i=t._$Xr(),r=i.length,o=new Array,n=new Array,s=0;s<r;++s){var _=i[s];this._$F2.push(_),this._$Hr.push(_.init(this));for(var a=_.getBaseData(),h=a.length,l=0;l<h;++l)o.push(a[l]);for(var l=0;l<h;++l){var $=a[l].init(this);$._$l2(s),n.push($)}for(var u=_.getDrawData(),p=u.length,l=0;l<p;++l){var f=u[l],c=f.init(this);c._$IP=s,this._$aS.push(f),this._$8b.push(c)}}for(var d=o.length,g=yt._$2o();;){for(var y=!1,s=0;s<d;++s){var m=o[s];if(null!=m){var T=m.getTargetBaseDataID();(null==T||T==g||this.getBaseDataIndex(T)>=0)&&(this._$3S.push(m),this._$db.push(n[s]),o[s]=null,y=!0)}}if(!y)break}var P=t._$E2();if(null!=P){var S=P._$1s();if(null!=S)for(var v=S.length,s=0;s<v;++s){var L=S[s];null!=L&&this._$02(L.getParamID(),L.getDefaultValue(),L.getMinValue(),L.getMaxValue())}}this.clipManager=new e(this.dp_webgl),this.clipManager.init(this,this._$aS,this._$8b),this._$QT=!0},Y.prototype.update=function(){Y._$e&&_.start("_$zL");for(var t=this._$_2.length,i=0;i<t;i++)this._$_2[i]!=this._$vr[i]&&(this._$Js[i]=Y._$ZS,this._$vr[i]=this._$_2[i]);var e=this._$3S.length,r=this._$aS.length,o=W._$or(),n=W._$Pr(),s=n-o+1;(null==this._$Ws||this._$Ws.length<s)&&(this._$Ws=new Int16Array(s),this._$Vs=new Int16Array(s));for(var i=0;i<s;i++)this._$Ws[i]=Y._$V2,this._$Vs[i]=Y._$V2;(null==this._$Er||this._$Er.length<r)&&(this._$Er=new Int16Array(r));for(var i=0;i<r;i++)this._$Er[i]=Y._$W0;Y._$e&&_.dump("_$zL"),Y._$e&&_.start("_$UL");for(var a=null,h=0;h<e;++h){var l=this._$3S[h],$=this._$db[h];try{l._$Nr(this,$),l._$2b(this,$)}catch(t){null==a&&(a=t)}}null!=a&&Y._$_0&&_._$Rb(a),Y._$e&&_.dump("_$UL"),Y._$e&&_.start("_$DL");for(var u=null,p=0;p<r;++p){var f=this._$aS[p],c=this._$8b[p];try{if(f._$Nr(this,c),c._$u2())continue;f._$2b(this,c);var d,g=Math.floor(f._$zS(this,c)-o);try{d=this._$Vs[g]}catch(t){console.log("_$li :: %s / %s \t\t\t\t@@_$fS\n",t.toString(),f.getDrawDataID().toString()),g=Math.floor(f._$zS(this,c)-o);continue}d==Y._$V2?this._$Ws[g]=p:this._$Er[d]=p,this._$Vs[g]=p}catch(t){null==u&&(u=t,at._$sT(at._$H7))}}null!=u&&Y._$_0&&_._$Rb(u),Y._$e&&_.dump("_$DL"),Y._$e&&_.start("_$eL");for(var i=this._$Js.length-1;i>=0;i--)this._$Js[i]=Y._$jr;return this._$QT=!1,Y._$e&&_.dump("_$eL"),!1},Y.prototype.preDraw=function(t){null!=this.clipManager&&(t._$ZT(),this.clipManager.setupClip(this,t))},Y.prototype.draw=function(t){if(null==this._$Ws)return void _._$li("call _$Ri.update() before _$Ri.draw() ");var i=this._$Ws.length;t._$ZT();for(var e=0;e<i;++e){var r=this._$Ws[e];if(r!=Y._$V2)for(;;){var o=this._$aS[r],n=this._$8b[r];if(n._$yo()){var s=n._$IP,a=this._$Hr[s];n._$VS=a.getPartsOpacity(),o.draw(t,this,n)}var h=this._$Er[r];if(h<=r||h==Y._$W0)break;r=h}}},Y.prototype.getParamIndex=function(t){for(var i=this._$pb.length-1;i>=0;--i)if(this._$pb[i]==t)return i;return this._$02(t,0,Y._$tr,Y._$lr)},Y.prototype._$BS=function(t){return this.getBaseDataIndex(t)},Y.prototype.getBaseDataIndex=function(t){for(var i=this._$3S.length-1;i>=0;--i)if(null!=this._$3S[i]&&this._$3S[i].getBaseDataID()==t)return i;return-1},Y.prototype._$UT=function(t,i){var e=new Float32Array(i);return w._$jT(t,0,e,0,t.length),e},Y.prototype._$02=function(t,i,e,r){if(this._$qo>=this._$pb.length){var o=this._$pb.length,n=new Array(2*o);w._$jT(this._$pb,0,n,0,o),this._$pb=n,this._$_2=this._$UT(this._$_2,2*o),this._$vr=this._$UT(this._$vr,2*o),this._$Rr=this._$UT(this._$Rr,2*o),this._$Or=this._$UT(this._$Or,2*o);var s=new Array;w._$jT(this._$Js,0,s,0,o),this._$Js=s}return this._$pb[this._$qo]=t,this._$_2[this._$qo]=i,this._$vr[this._$qo]=i,this._$Rr[this._$qo]=e,this._$Or[this._$qo]=r,this._$Js[this._$qo]=Y._$ZS,this._$qo++},Y.prototype._$Zo=function(t,i){this._$3S[t]=i},Y.prototype.setParamFloat=function(t,i){i<this._$Rr[t]&&(i=this._$Rr[t]),i>this._$Or[t]&&(i=this._$Or[t]),this._$_2[t]=i},Y.prototype.loadParam=function(){var t=this._$_2.length;t>this._$fs.length&&(t=this._$fs.length),w._$jT(this._$fs,0,this._$_2,0,t)},Y.prototype.saveParam=function(){var t=this._$_2.length;t>this._$fs.length&&(this._$fs=new Float32Array(t)),w._$jT(this._$_2,0,this._$fs,0,t)},Y.prototype._$v2=function(){return this._$co},Y.prototype._$WS=function(){return this._$QT},Y.prototype._$Xb=function(t){return this._$Js[t]==Y._$ZS},Y.prototype._$vs=function(){return this._$Es},Y.prototype._$Tr=function(){return this._$ZP},Y.prototype.getBaseData=function(t){return this._$3S[t]},Y.prototype.getParamFloat=function(t){return this._$_2[t]},Y.prototype.getParamMax=function(t){return this._$Or[t]},Y.prototype.getParamMin=function(t){return this._$Rr[t]},Y.prototype.setPartsOpacity=function(t,i){this._$Hr[t].setPartsOpacity(i)},Y.prototype.getPartsOpacity=function(t){return this._$Hr[t].getPartsOpacity()},Y.prototype.getPartsDataIndex=function(t){for(var i=this._$F2.length-1;i>=0;--i)if(null!=this._$F2[i]&&this._$F2[i]._$p2()==t)return i;return-1},Y.prototype._$q2=function(t){return this._$db[t]},Y.prototype._$C2=function(t){return this._$8b[t]},Y.prototype._$Bb=function(t){return this._$Hr[t]},Y.prototype._$5s=function(t,i){for(var e=this._$Ws.length,r=t,o=0;o<e;++o){var n=this._$Ws[o];if(n!=Y._$V2)for(;;){var s=this._$8b[n];s._$yo()&&(s._$GT()._$B2(this,s,r),r+=i);var _=this._$Er[n];if(_<=n||_==Y._$W0)break;n=_}}},Y.prototype.setDrawParam=function(t){this.dp_webgl=t},Y.prototype.getDrawParam=function(){return this.dp_webgl},k._$0T=function(t){return k._$0T(new _$5(t))},k._$0T=function(t){if(!t.exists())throw new _$ls(t._$3b());for(var i,e=t.length(),r=new Int8Array(e),o=new _$Xs(new _$kb(t),8192),n=0;(i=o.read(r,n,e-n))>0;)n+=i;return r},k._$C=function(t){var i=null,e=null;try{i=t instanceof Array?t:new _$Xs(t,8192),e=new _$js;for(var r,o=new Int8Array(1e3);(r=i.read(o))>0;)e.write(o,0,r);return e._$TS()}finally{null!=t&&t.close(),null!=e&&(e.flush(),e.close())}},V.prototype._$T2=function(){return w.getUserTimeMSec()+Math._$10()*(2*this._$Br-1)},V.prototype._$uo=function(t){this._$Br=t},V.prototype._$QS=function(t,i,e){this._$Dr=t,this._$Cb=i,this._$mr=e},V.prototype._$7T=function(t){var i,e=w.getUserTimeMSec(),r=0;switch(this._$_L){case STATE_CLOSING:r=(e-this._$bb)/this._$Dr,r>=1&&(r=1,this._$_L=wt.STATE_CLOSED,this._$bb=e),i=1-r;break;case STATE_CLOSED:r=(e-this._$bb)/this._$Cb,r>=1&&(this._$_L=wt.STATE_OPENING,this._$bb=e),i=0;break;case STATE_OPENING:r=(e-this._$bb)/this._$mr,r>=1&&(r=1,this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2()),i=r;break;case STATE_INTERVAL:this._$12<e&&(this._$_L=wt.STATE_CLOSING,this._$bb=e),i=1;break;case STATE_FIRST:default:this._$_L=wt.STATE_INTERVAL,this._$12=this._$T2(),i=1}this._$jo||(i=-i),t.setParamFloat(this._$iL,i),t.setParamFloat(this._$0L,i)};var wt=function(){};wt.STATE_FIRST="STATE_FIRST",wt.STATE_INTERVAL="STATE_INTERVAL",wt.STATE_CLOSING="STATE_CLOSING",wt.STATE_CLOSED="STATE_CLOSED",wt.STATE_OPENING="STATE_OPENING",X.prototype=new E,X._$As=32,X._$Gr=!1,X._$NT=null,X._$vS=null,X._$no=null,X._$9r=function(t){return new Float32Array(t)},X._$vb=function(t){return new Int16Array(t)},X._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=X._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=X._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},X._$Hs=function(){return X._$Gr},X._$as=function(t){X._$Gr=t},X.prototype.setGL=function(t){this.gl=t},X.prototype.setTransform=function(t){this.transform=t},X.prototype._$ZT=function(){},X.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01)){var a=this._$U2[t],h=n>.9?at.EXPAND_W:0;this.gl.drawElements(a,e,r,o,n,h,this.transform,_)}},X.prototype._$Rs=function(){throw new Error("_$Rs")},X.prototype._$Ds=function(t){throw new Error("_$Ds")},X.prototype._$K2=function(){for(var t=0;t<this._$sb.length;t++){0!=this._$sb[t]&&(this.gl._$Sr(1,this._$sb,t),this._$sb[t]=0)}},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$sb[t]=i},X.prototype.setTexture=function(t,i){this._$sb.length<t+1&&this._$nS(t),this._$U2[t]=i},X.prototype._$nS=function(t){var i=Math.max(2*this._$sb.length,t+1+10),e=new Int32Array(i);w._$jT(this._$sb,0,e,0,this._$sb.length),this._$sb=e;var r=new Array;w._$jT(this._$U2,0,r,0,this._$U2.length),this._$U2=r},z.prototype=new I,z._$Xo=new Float32Array(2),z._$io=new Float32Array(2),z._$0o=new Float32Array(2),z._$Lo=new Float32Array(2),z._$To=new Float32Array(2),z._$Po=new Float32Array(2),z._$gT=new Array,z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP(),this._$Y0=new Array},z.prototype.getType=function(){return I._$c2},z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$GS=t._$nP(),this._$Y0=t._$nP(),I.prototype.readV2_opacity.call(this,t)},z.prototype.init=function(t){var i=new H(this);return i._$Yr=new P,this._$32()&&(i._$Wr=new P),i},z.prototype._$Nr=function(t,i){this!=i._$GT()&&console.log("### assert!! ### ");var e=i;if(this._$GS._$Ur(t)){var r=z._$gT;r[0]=!1;var o=this._$GS._$Q2(t,r);i._$Ib(r[0]),this.interpolateOpacity(t,this._$GS,i,r);var n=t._$vs(),s=t._$Tr();if(this._$GS._$zr(n,s,o),o<=0){var _=this._$Y0[n[0]];e._$Yr.init(_)}else if(1==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],h=s[0];e._$Yr._$fL=_._$fL+(a._$fL-_._$fL)*h,e._$Yr._$gL=_._$gL+(a._$gL-_._$gL)*h,e._$Yr._$B0=_._$B0+(a._$B0-_._$B0)*h,e._$Yr._$z0=_._$z0+(a._$z0-_._$z0)*h,e._$Yr._$qT=_._$qT+(a._$qT-_._$qT)*h}else if(2==o){var _=this._$Y0[n[0]],a=this._$Y0[n[1]],l=this._$Y0[n[2]],$=this._$Y0[n[3]],h=s[0],u=s[1],p=_._$fL+(a._$fL-_._$fL)*h,f=l._$fL+($._$fL-l._$fL)*h;e._$Yr._$fL=p+(f-p)*u,p=_._$gL+(a._$gL-_._$gL)*h,f=l._$gL+($._$gL-l._$gL)*h,e._$Yr._$gL=p+(f-p)*u,p=_._$B0+(a._$B0-_._$B0)*h,f=l._$B0+($._$B0-l._$B0)*h,e._$Yr._$B0=p+(f-p)*u,p=_._$z0+(a._$z0-_._$z0)*h,f=l._$z0+($._$z0-l._$z0)*h,e._$Yr._$z0=p+(f-p)*u,p=_._$qT+(a._$qT-_._$qT)*h,f=l._$qT+($._$qT-l._$qT)*h,e._$Yr._$qT=p+(f-p)*u}else if(3==o){var c=this._$Y0[n[0]],d=this._$Y0[n[1]],g=this._$Y0[n[2]],y=this._$Y0[n[3]],m=this._$Y0[n[4]],T=this._$Y0[n[5]],P=this._$Y0[n[6]],S=this._$Y0[n[7]],h=s[0],u=s[1],v=s[2],p=c._$fL+(d._$fL-c._$fL)*h,f=g._$fL+(y._$fL-g._$fL)*h,L=m._$fL+(T._$fL-m._$fL)*h,M=P._$fL+(S._$fL-P._$fL)*h;e._$Yr._$fL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$gL+(d._$gL-c._$gL)*h,f=g._$gL+(y._$gL-g._$gL)*h,L=m._$gL+(T._$gL-m._$gL)*h,M=P._$gL+(S._$gL-P._$gL)*h,e._$Yr._$gL=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$B0+(d._$B0-c._$B0)*h,f=g._$B0+(y._$B0-g._$B0)*h,L=m._$B0+(T._$B0-m._$B0)*h,M=P._$B0+(S._$B0-P._$B0)*h,e._$Yr._$B0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$z0+(d._$z0-c._$z0)*h,f=g._$z0+(y._$z0-g._$z0)*h,L=m._$z0+(T._$z0-m._$z0)*h,M=P._$z0+(S._$z0-P._$z0)*h,e._$Yr._$z0=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u),p=c._$qT+(d._$qT-c._$qT)*h,f=g._$qT+(y._$qT-g._$qT)*h,L=m._$qT+(T._$qT-m._$qT)*h,M=P._$qT+(S._$qT-P._$qT)*h,e._$Yr._$qT=(1-v)*(p+(f-p)*u)+v*(L+(M-L)*u)}else if(4==o){var E=this._$Y0[n[0]],A=this._$Y0[n[1]],I=this._$Y0[n[2]],w=this._$Y0[n[3]],x=this._$Y0[n[4]],O=this._$Y0[n[5]],D=this._$Y0[n[6]],R=this._$Y0[n[7]],b=this._$Y0[n[8]],F=this._$Y0[n[9]],C=this._$Y0[n[10]],N=this._$Y0[n[11]],B=this._$Y0[n[12]],U=this._$Y0[n[13]],G=this._$Y0[n[14]],Y=this._$Y0[n[15]],h=s[0],u=s[1],v=s[2],k=s[3],p=E._$fL+(A._$fL-E._$fL)*h,f=I._$fL+(w._$fL-I._$fL)*h,L=x._$fL+(O._$fL-x._$fL)*h,M=D._$fL+(R._$fL-D._$fL)*h,V=b._$fL+(F._$fL-b._$fL)*h,X=C._$fL+(N._$fL-C._$fL)*h,H=B._$fL+(U._$fL-B._$fL)*h,W=G._$fL+(Y._$fL-G._$fL)*h;e._$Yr._$fL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$gL+(A._$gL-E._$gL)*h,f=I._$gL+(w._$gL-I._$gL)*h,L=x._$gL+(O._$gL-x._$gL)*h,M=D._$gL+(R._$gL-D._$gL)*h,V=b._$gL+(F._$gL-b._$gL)*h,X=C._$gL+(N._$gL-C._$gL)*h,H=B._$gL+(U._$gL-B._$gL)*h,W=G._$gL+(Y._$gL-G._$gL)*h,e._$Yr._$gL=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$B0+(A._$B0-E._$B0)*h,f=I._$B0+(w._$B0-I._$B0)*h,L=x._$B0+(O._$B0-x._$B0)*h,M=D._$B0+(R._$B0-D._$B0)*h,V=b._$B0+(F._$B0-b._$B0)*h,X=C._$B0+(N._$B0-C._$B0)*h,H=B._$B0+(U._$B0-B._$B0)*h,W=G._$B0+(Y._$B0-G._$B0)*h,e._$Yr._$B0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$z0+(A._$z0-E._$z0)*h,f=I._$z0+(w._$z0-I._$z0)*h,L=x._$z0+(O._$z0-x._$z0)*h,M=D._$z0+(R._$z0-D._$z0)*h,V=b._$z0+(F._$z0-b._$z0)*h,X=C._$z0+(N._$z0-C._$z0)*h,H=B._$z0+(U._$z0-B._$z0)*h,W=G._$z0+(Y._$z0-G._$z0)*h,e._$Yr._$z0=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u)),p=E._$qT+(A._$qT-E._$qT)*h,f=I._$qT+(w._$qT-I._$qT)*h,L=x._$qT+(O._$qT-x._$qT)*h,M=D._$qT+(R._$qT-D._$qT)*h,V=b._$qT+(F._$qT-b._$qT)*h,X=C._$qT+(N._$qT-C._$qT)*h,H=B._$qT+(U._$qT-B._$qT)*h,W=G._$qT+(Y._$qT-G._$qT)*h,e._$Yr._$qT=(1-k)*((1-v)*(p+(f-p)*u)+v*(L+(M-L)*u))+k*((1-v)*(V+(X-V)*u)+v*(H+(W-H)*u))}else{for(var j=0|Math.pow(2,o),q=new Float32Array(j),J=0;J<j;J++){for(var Q=J,Z=1,K=0;K<o;K++)Z*=Q%2==0?1-s[K]:s[K],Q/=2;q[J]=Z}for(var tt=new Array,it=0;it<j;it++)tt[it]=this._$Y0[n[it]];for(var et=0,rt=0,ot=0,nt=0,st=0,it=0;it<j;it++)et+=q[it]*tt[it]._$fL,rt+=q[it]*tt[it]._$gL,ot+=q[it]*tt[it]._$B0,nt+=q[it]*tt[it]._$z0,st+=q[it]*tt[it]._$qT;e._$Yr._$fL=et,e._$Yr._$gL=rt,e._$Yr._$B0=ot,e._$Yr._$z0=nt,e._$Yr._$qT=st}var _=this._$Y0[n[0]];e._$Yr.reflectX=_.reflectX,e._$Yr.reflectY=_.reflectY}},z.prototype._$2b=function(t,i){this!=i._$GT()&&console.log("### assert!! ### ");var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li("_$L _$0P _$G :: %s",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r);if(null!=o){var n=t._$q2(e._$8r),s=z._$Xo;s[0]=e._$Yr._$fL,s[1]=e._$Yr._$gL;var a=z._$io;a[0]=0,a[1]=-.1;n._$GT().getType()==I._$c2?a[1]=-10:a[1]=-.1;var h=z._$0o;this._$Jr(t,o,n,s,a,h);var l=Lt._$92(a,h);o._$nb(t,n,s,s,1,0,2),e._$Wr._$fL=s[0],e._$Wr._$gL=s[1],e._$Wr._$B0=e._$Yr._$B0,e._$Wr._$z0=e._$Yr._$z0,e._$Wr._$qT=e._$Yr._$qT-l*Lt._$NS;var $=n.getTotalScale();e.setTotalScale_notForClient($*e._$Wr._$B0);var u=n.getTotalOpacity();e.setTotalOpacity(u*e.getInterpolatedOpacity()),e._$Wr.reflectX=e._$Yr.reflectX,e._$Wr.reflectY=e._$Yr.reflectY,e._$hS(n._$yo())}else e._$hS(!1)}}else e.setTotalScale_notForClient(e._$Yr._$B0),e.setTotalOpacity(e.getInterpolatedOpacity())},z.prototype._$nb=function(t,i,e,r,o,n,s){this!=i._$GT()&&console.log("### assert!! ### ");for(var _,a,h=i,l=null!=h._$Wr?h._$Wr:h._$Yr,$=Math.sin(Lt._$bS*l._$qT),u=Math.cos(Lt._$bS*l._$qT),p=h.getTotalScale(),f=l.reflectX?-1:1,c=l.reflectY?-1:1,d=u*p*f,g=-$*p*c,y=$*p*f,m=u*p*c,T=l._$fL,P=l._$gL,S=o*s,v=n;v<S;v+=s)_=e[v],a=e[v+1],r[v]=d*_+g*a+T,r[v+1]=y*_+m*a+P},z.prototype._$Jr=function(t,i,e,r,o,n){i!=e._$GT()&&console.log("### assert!! ### ");var s=z._$Lo;z._$Lo[0]=r[0],z._$Lo[1]=r[1],i._$nb(t,e,s,s,1,0,2);for(var _=z._$To,a=z._$Po,h=1,l=0;l<10;l++){if(a[0]=r[0]+h*o[0],a[1]=r[1]+h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return n[0]=_[0],void(n[1]=_[1]);if(a[0]=r[0]-h*o[0],a[1]=r[1]-h*o[1],i._$nb(t,e,a,_,1,0,2),_[0]-=s[0],_[1]-=s[1],0!=_[0]||0!=_[1])return _[0]=-_[0],_[0]=-_[0],n[0]=_[0],void(n[1]=_[1]);h*=.1}at._$so&&console.log("_$L0 to transform _$SP\n")},H.prototype=new _t,W.prototype=new M,W._$ur=-2,W._$ES=500,W._$wb=2,W._$8S=3,W._$os=4,W._$52=W._$ES,W._$R2=W._$ES,W._$Sb=function(t){for(var i=t.length-1;i>=0;--i){var e=t[i];e<W._$52?W._$52=e:e>W._$R2&&(W._$R2=e)}},W._$or=function(){return W._$52},W._$Pr=function(){return W._$R2},W.prototype._$F0=function(t){this._$gP=t._$nP(),this._$dr=t._$nP(),this._$GS=t._$nP(),this._$qb=t._$6L(),this._$Lb=t._$cS(),this._$mS=t._$Tb(),t.getFormatVersion()>=G._$T7?(this.clipID=t._$nP(),this.clipIDList=this.convertClipIDForV2_11(this.clipID)):this.clipIDList=null,W._$Sb(this._$Lb)},W.prototype.getClipIDList=function(){return this.clipIDList},W.prototype._$Nr=function(t,i){if(i._$IS[0]=!1,i._$Us=v._$Z2(t,this._$GS,i._$IS,this._$Lb),at._$Zs);else if(i._$IS[0])return;i._$7s=v._$br(t,this._$GS,i._$IS,this._$mS)},W.prototype._$2b=function(t){},W.prototype.getDrawDataID=function(){return this._$gP},W.prototype._$j2=function(t){this._$gP=t},W.prototype.getOpacity=function(t,i){return i._$7s},W.prototype._$zS=function(t,i){return i._$Us},W.prototype.getTargetBaseDataID=function(){return this._$dr},W.prototype._$gs=function(t){this._$dr=t},W.prototype._$32=function(){return null!=this._$dr&&this._$dr!=yt._$2o()},W.prototype.getType=function(){},j._$42=0,j.prototype._$1b=function(){return this._$3S},j.prototype.getDrawDataList=function(){return this._$aS},j.prototype._$F0=function(t){this._$NL=t._$nP(),this._$aS=t._$nP(),this._$3S=t._$nP()},j.prototype._$kr=function(t){t._$Zo(this._$3S),t._$xo(this._$aS),this._$3S=null,this._$aS=null},q.prototype=new i,q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q.loadModel=function(t){var e=new q;return i._$62(e,t),e},q._$to=function(){return new q},q._$er=function(t){var i=new _$5("../_$_r/_$t0/_$Ri/_$_P._$d");if(0==i.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+i._$PL());for(var e=["../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1"],r=q.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},q.prototype.setGL=function(t){this._$zo.setGL(t)},q.prototype.setTransform=function(t){this._$zo.setTransform(t)},q.prototype.draw=function(){this._$5S.draw(this._$zo)},q.prototype._$K2=function(){this._$zo._$K2()},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this._$zo.setTexture(t,i)},q.prototype.setTexture=function(t,i){null==this._$zo&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this._$zo.setTexture(t,i)},q.prototype._$Rs=function(){return this._$zo._$Rs()},q.prototype._$Ds=function(t){this._$zo._$Ds(t)},q.prototype.getDrawParam=function(){return this._$zo},J.prototype=new s,J._$cs="VISIBLE:",J._$ar="LAYOUT:",J.MTN_PREFIX_FADEIN="FADEIN:",J.MTN_PREFIX_FADEOUT="FADEOUT:",J._$Co=0,J._$1T=1,J.loadMotion=function(t){var i=k._$C(t);return J.loadMotion(i)},J.loadMotion=function(t){t instanceof ArrayBuffer&&(t=new DataView(t));var i=new J,e=[0],r=t.byteLength;i._$yT=0;for(var o=0;o<r;++o){var n=Q(t,o),s=n.charCodeAt(0);if("\n"!=n&&"\r"!=n)if("#"!=n)if("$"!=n){if(97<=s&&s<=122||65<=s&&s<=90||"_"==n){for(var _=o,a=-1;o<r&&("\r"!=(n=Q(t,o))&&"\n"!=n);++o)if("="==n){a=o;break}if(a>=0){var h=new B;O.startsWith(t,_,J._$cs)?(h._$RP=B._$hs,h._$4P=O.createString(t,_,a-_)):O.startsWith(t,_,J._$ar)?(h._$4P=O.createString(t,_+7,a-_-7),O.startsWith(t,_+7,"ANCHOR_X")?h._$RP=B._$xs:O.startsWith(t,_+7,"ANCHOR_Y")?h._$RP=B._$us:O.startsWith(t,_+7,"SCALE_X")?h._$RP=B._$qs:O.startsWith(t,_+7,"SCALE_Y")?h._$RP=B._$Ys:O.startsWith(t,_+7,"X")?h._$RP=B._$ws:O.startsWith(t,_+7,"Y")&&(h._$RP=B._$Ns)):(h._$RP=B._$Fr,h._$4P=O.createString(t,_,a-_)),i.motions.push(h);var l=0,$=[];for(o=a+1;o<r&&("\r"!=(n=Q(t,o))&&"\n"!=n);++o)if(","!=n&&" "!=n&&"\t"!=n){var u=O._$LS(t,r,o,e);if(e[0]>0){$.push(u),l++;var p=e[0];if(p<o){console.log("_$n0 _$hi . @Live2DMotion loadMotion()\n");break}o=p-1}}h._$I0=new Float32Array($),l>i._$yT&&(i._$yT=l)}}}else{for(var _=o,a=-1;o<r&&("\r"!=(n=Q(t,o))&&"\n"!=n);++o)if("="==n){a=o;break}var f=!1;if(a>=0)for(a==_+4&&"f"==Q(t,_+1)&&"p"==Q(t,_+2)&&"s"==Q(t,_+3)&&(f=!0),o=a+1;o<r&&("\r"!=(n=Q(t,o))&&"\n"!=n);++o)if(","!=n&&" "!=n&&"\t"!=n){var u=O._$LS(t,r,o,e);e[0]>0&&f&&5<u&&u<121&&(i._$D0=u),o=e[0]}for(;o<r&&("\n"!=Q(t,o)&&"\r"!=Q(t,o));++o);}else for(;o<r&&("\n"!=Q(t,o)&&"\r"!=Q(t,o));++o);}return i._$rr=1e3*i._$yT/i._$D0|0,i},J.prototype.getDurationMSec=function(){return this._$E?-1:this._$rr},J.prototype.getLoopDurationMSec=function(){return this._$rr},J.prototype.dump=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];console.log("_$wL[%s] [%d]. ",i._$4P,i._$I0.length);for(var e=0;e<i._$I0.length&&e<10;e++)console.log("%5.2f ,",i._$I0[e]);console.log("\n")}},J.prototype.updateParamExe=function(t,i,e,r){for(var o=i-r._$z2,n=o*this._$D0/1e3,s=0|n,_=n-s,a=0;a<this.motions.length;a++){var h=this.motions[a],l=h._$I0.length,$=h._$4P;if(h._$RP==B._$hs){var u=h._$I0[s>=l?l-1:s];t.setParamFloat($,u)}else if(B._$ws<=h._$RP&&h._$RP<=B._$Ys);else{var p,f=t.getParamIndex($),c=t.getModelContext(),d=c.getParamMax(f),g=c.getParamMin(f),y=.4*(d-g),m=c.getParamFloat(f),T=h._$I0[s>=l?l-1:s],P=h._$I0[s+1>=l?l-1:s+1];p=T<P&&P-T>y||T>P&&T-P>y?T:T+(P-T)*_;var S=m+(p-m)*e;t.setParamFloat($,S)}}s>=this._$yT&&(this._$E?(r._$z2=i,this.loopFadeIn&&(r._$bs=i)):r._$9L=!0),this._$eP=e},J.prototype._$r0=function(){return this._$E},J.prototype._$aL=function(t){this._$E=t},J.prototype._$S0=function(){return this._$D0},J.prototype._$U0=function(t){this._$D0=t},J.prototype.isLoopFadeIn=function(){return this.loopFadeIn},J.prototype.setLoopFadeIn=function(t){this.loopFadeIn=t},N.prototype.clear=function(){this.size=0},N.prototype.add=function(t){if(this._$P.length<=this.size){var i=new Float32Array(2*this.size);w._$jT(this._$P,0,i,0,this.size),this._$P=i}this._$P[this.size++]=t},N.prototype._$BL=function(){var t=new Float32Array(this.size);return w._$jT(this._$P,0,t,0,this.size),t},B._$Fr=0,B._$hs=1,B._$ws=100,B._$Ns=101,B._$xs=102,B._$us=103,B._$qs=104,B._$Ys=105,Z.prototype=new I,Z._$gT=new Array,Z.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},Z.prototype._$F0=function(t){I.prototype._$F0.call(this,t),this._$A=t._$6L(),this._$o=t._$6L(),this._$GS=t._$nP(),this._$Eo=t._$nP(),I.prototype.readV2_opacity.call(this,t)},Z.prototype.init=function(t){var i=new K(this),e=(this._$o+1)*(this._$A+1);return null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(2*e),null!=i._$hr&&(i._$hr=null),this._$32()?i._$hr=new Float32Array(2*e):i._$hr=null,i},Z.prototype._$Nr=function(t,i){var e=i;if(this._$GS._$Ur(t)){var r=this._$VT(),o=Z._$gT;o[0]=!1,v._$Vr(t,this._$GS,o,r,this._$Eo,e._$Cr,0,2),i._$Ib(o[0]),this.interpolateOpacity(t,this._$GS,i,o)}},Z.prototype._$2b=function(t,i){var e=i;if(e._$hS(!0),this._$32()){var r=this.getTargetBaseDataID();if(e._$8r==I._$ur&&(e._$8r=t.getBaseDataIndex(r)),e._$8r<0)at._$so&&_._$li("_$L _$0P _$G :: %s",r),e._$hS(!1);else{var o=t.getBaseData(e._$8r),n=t._$q2(e._$8r);if(null!=o&&n._$yo()){var s=n.getTotalScale();e.setTotalScale_notForClient(s);var a=n.getTotalOpacity();e.setTotalOpacity(a*e.getInterpolatedOpacity()),o._$nb(t,n,e._$Cr,e._$hr,this._$VT(),0,2),e._$hS(!0)}else e._$hS(!1)}}else e.setTotalOpacity(e.getInterpolatedOpacity())},Z.prototype._$nb=function(t,i,e,r,o,n,s){var _=i,a=null!=_._$hr?_._$hr:_._$Cr;Z.transformPoints_sdk2(e,r,o,n,s,a,this._$o,this._$A)},Z.transformPoints_sdk2=function(i,e,r,o,n,s,_,a){for(var h,l,$,u=r*n,p=0,f=0,c=0,d=0,g=0,y=0,m=!1,T=o;T<u;T+=n){var P,S,v,L;if(v=i[T],L=i[T+1],P=v*_,S=L*a,P<0||S<0||_<=P||a<=S){var M=_+1;if(!m){m=!0,p=.25*(s[2*(0+0*M)]+s[2*(_+0*M)]+s[2*(0+a*M)]+s[2*(_+a*M)]),f=.25*(s[2*(0+0*M)+1]+s[2*(_+0*M)+1]+s[2*(0+a*M)+1]+s[2*(_+a*M)+1]);var E=s[2*(_+a*M)]-s[2*(0+0*M)],A=s[2*(_+a*M)+1]-s[2*(0+0*M)+1],I=s[2*(_+0*M)]-s[2*(0+a*M)],w=s[2*(_+0*M)+1]-s[2*(0+a*M)+1];c=.5*(E+I),d=.5*(A+w),g=.5*(E-I),y=.5*(A-w),p-=.5*(c+g),f-=.5*(d+y)}if(-2<v&&v<3&&-2<L&&L<3)if(v<=0)if(L<=0){var x=s[2*(0+0*M)],O=s[2*(0+0*M)+1],D=p-2*c,R=f-2*d,b=p-2*g,F=f-2*y,C=p-2*c-2*g,N=f-2*d-2*y,B=.5*(v- -2),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var b=s[2*(0+a*M)],F=s[2*(0+a*M)+1],C=p-2*c+1*g,N=f-2*d+1*y,x=p+3*g,O=f+3*y,D=p-2*c+3*g,R=f-2*d+3*y,B=.5*(v- -2),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v- -2),U=S-G,Y=G/a,k=(G+1)/a,b=s[2*(0+G*M)],F=s[2*(0+G*M)+1],x=s[2*(0+(G+1)*M)],O=s[2*(0+(G+1)*M)+1],C=p-2*c+Y*g,N=f-2*d+Y*y,D=p-2*c+k*g,R=f-2*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(1<=v)if(L<=0){var D=s[2*(_+0*M)],R=s[2*(_+0*M)+1],x=p+3*c,O=f+3*d,C=p+1*c-2*g,N=f+1*d-2*y,b=p+3*c-2*g,F=f+3*d-2*y,B=.5*(v-1),U=.5*(L- -2);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var C=s[2*(_+a*M)],N=s[2*(_+a*M)+1],b=p+3*c+1*g,F=f+3*d+1*y,D=p+1*c+3*g,R=f+1*d+3*y,x=p+3*c+3*g,O=f+3*d+3*y,B=.5*(v-1),U=.5*(L-1);B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else{var G=0|S;G==a&&(G=a-1);var B=.5*(v-1),U=S-G,Y=G/a,k=(G+1)/a,C=s[2*(_+G*M)],N=s[2*(_+G*M)+1],D=s[2*(_+(G+1)*M)],R=s[2*(_+(G+1)*M)+1],b=p+3*c+Y*g,F=f+3*d+Y*y,x=p+3*c+k*g,O=f+3*d+k*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L<=0){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L- -2),X=V/_,z=(V+1)/_,D=s[2*(V+0*M)],R=s[2*(V+0*M)+1],x=s[2*(V+1+0*M)],O=s[2*(V+1+0*M)+1],C=p+X*c-2*g,N=f+X*d-2*y,b=p+z*c-2*g,F=f+z*d-2*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else if(L>=1){var V=0|P;V==_&&(V=_-1);var B=P-V,U=.5*(L-1),X=V/_,z=(V+1)/_,C=s[2*(V+a*M)],N=s[2*(V+a*M)+1],b=s[2*(V+1+a*M)],F=s[2*(V+1+a*M)+1],D=p+X*c+3*g,R=f+X*d+3*y,x=p+z*c+3*g,O=f+z*d+3*y;B+U<=1?(e[T]=C+(b-C)*B+(D-C)*U,e[T+1]=N+(F-N)*B+(R-N)*U):(e[T]=x+(D-x)*(1-B)+(b-x)*(1-U),e[T+1]=O+(R-O)*(1-B)+(F-O)*(1-U))}else t.err.printf("_$li calc : %.4f , %.4f\t\t\t\t\t@@BDBoxGrid\n",v,L);else e[T]=p+v*c+L*g,e[T+1]=f+v*d+L*y}else l=P-(0|P),$=S-(0|S),h=2*((0|P)+(0|S)*(_+1)),l+$<1?(e[T]=s[h]*(1-l-$)+s[h+2]*l+s[h+2*(_+1)]*$,e[T+1]=s[h+1]*(1-l-$)+s[h+3]*l+s[h+2*(_+1)+1]*$):(e[T]=s[h+2*(_+1)+2]*(l-1+$)+s[h+2*(_+1)]*(1-l)+s[h+2]*(1-$),e[T+1]=s[h+2*(_+1)+3]*(l-1+$)+s[h+2*(_+1)+1]*(1-l)+s[h+3]*(1-$))}},Z.prototype.transformPoints_sdk1=function(t,i,e,r,o,n,s){for(var _,a,h,l,$,u,p,f=i,c=this._$o,d=this._$A,g=o*s,y=null!=f._$hr?f._$hr:f._$Cr,m=n;m<g;m+=s)at._$ts?(_=e[m],a=e[m+1],_<0?_=0:_>1&&(_=1),a<0?a=0:a>1&&(a=1),_*=c,a*=d,h=0|_,l=0|a,h>c-1&&(h=c-1),l>d-1&&(l=d-1),u=_-h,p=a-l,$=2*(h+l*(c+1))):(_=e[m]*c,a=e[m+1]*d,u=_-(0|_),p=a-(0|a),$=2*((0|_)+(0|a)*(c+1))),u+p<1?(r[m]=y[$]*(1-u-p)+y[$+2]*u+y[$+2*(c+1)]*p,r[m+1]=y[$+1]*(1-u-p)+y[$+3]*u+y[$+2*(c+1)+1]*p):(r[m]=y[$+2*(c+1)+2]*(u-1+p)+y[$+2*(c+1)]*(1-u)+y[$+2]*(1-p),r[m+1]=y[$+2*(c+1)+3]*(u-1+p)+y[$+2*(c+1)+1]*(1-u)+y[$+3]*(1-p))},Z.prototype._$VT=function(){return(this._$o+1)*(this._$A+1)},Z.prototype.getType=function(){return I._$_b},K.prototype=new _t,tt._$42=0,tt.prototype._$zP=function(){this._$3S=new Array,this._$aS=new Array},tt.prototype._$F0=function(t){this._$g0=t._$8L(),this.visible=t._$8L(),this._$NL=t._$nP(),this._$3S=t._$nP(),this._$aS=t._$nP()},tt.prototype.init=function(t){var i=new it(this);return i.setPartsOpacity(this.isVisible()?1:0),i},tt.prototype._$6o=function(t){if(null==this._$3S)throw new Error("_$3S _$6 _$Wo@_$6o");this._$3S.push(t)},tt.prototype._$3o=function(t){if(null==this._$aS)throw new Error("_$aS _$6 _$Wo@_$3o");this._$aS.push(t)},tt.prototype._$Zo=function(t){this._$3S=t},tt.prototype._$xo=function(t){this._$aS=t},tt.prototype.isVisible=function(){return this.visible},tt.prototype._$uL=function(){return this._$g0},tt.prototype._$KP=function(t){this.visible=t},tt.prototype._$ET=function(t){this._$g0=t},tt.prototype.getBaseData=function(){return this._$3S},tt.prototype.getDrawData=function(){return this._$aS},tt.prototype._$p2=function(){return this._$NL},tt.prototype._$ob=function(t){this._$NL=t},tt.prototype.getPartsID=function(){return this._$NL},tt.prototype._$MP=function(t){this._$NL=t},it.prototype=new $,it.prototype.getPartsOpacity=function(){return this._$VS},it.prototype.setPartsOpacity=function(t){this._$VS=t},et._$L7=function(){u._$27(),yt._$27(),b._$27(),l._$27()},et.prototype.toString=function(){return this.id},rt.prototype._$F0=function(t){},ot.prototype._$1s=function(){return this._$4S},ot.prototype._$zP=function(){this._$4S=new Array},ot.prototype._$F0=function(t){this._$4S=t._$nP()},ot.prototype._$Ks=function(t){this._$4S.push(t)},nt.tr=new gt,nt._$50=new gt,nt._$Ti=new Array(0,0),nt._$Pi=new Array(0,0),nt._$B=new Array(0,0),nt.prototype._$lP=function(t,i,e,r){this.viewport=new Array(t,i,e,r)},nt.prototype._$bL=function(){this.context.save();var t=this.viewport;null!=t&&(this.context.beginPath(),this.context._$Li(t[0],t[1],t[2],t[3]),this.context.clip())},nt.prototype._$ei=function(){this.context.restore()},nt.prototype.drawElements=function(t,i,e,r,o,n,s,a){try{o!=this._$Qo&&(this._$Qo=o,this.context.globalAlpha=o);for(var h=i.length,l=t.width,$=t.height,u=this.context,p=this._$xP,f=this._$uP,c=this._$6r,d=this._$3r,g=nt.tr,y=nt._$Ti,m=nt._$Pi,T=nt._$B,P=0;P<h;P+=3){u.save();var S=i[P],v=i[P+1],L=i[P+2],M=p+c*e[2*S],E=f+d*e[2*S+1],A=p+c*e[2*v],I=f+d*e[2*v+1],w=p+c*e[2*L],x=f+d*e[2*L+1];s&&(s._$PS(M,E,T),M=T[0],E=T[1],s._$PS(A,I,T),A=T[0],I=T[1],s._$PS(w,x,T),w=T[0],x=T[1]);var O=l*r[2*S],D=$-$*r[2*S+1],R=l*r[2*v],b=$-$*r[2*v+1],F=l*r[2*L],C=$-$*r[2*L+1],N=Math.atan2(b-D,R-O),B=Math.atan2(I-E,A-M),U=A-M,G=I-E,Y=Math.sqrt(U*U+G*G),k=R-O,V=b-D,X=Math.sqrt(k*k+V*V),z=Y/X;It._$ni(F,C,O,D,R-O,b-D,-(b-D),R-O,y),It._$ni(w,x,M,E,A-M,I-E,-(I-E),A-M,m);var H=(m[0]-y[0])/y[1],W=Math.min(O,R,F),j=Math.max(O,R,F),q=Math.min(D,b,C),J=Math.max(D,b,C),Q=Math.floor(W),Z=Math.floor(q),K=Math.ceil(j),tt=Math.ceil(J);g.identity(),g.translate(M,E),g.rotate(B),g.scale(1,m[1]/y[1]),g.shear(H,0),g.scale(z,z),g.rotate(-N),g.translate(-O,-D),g.setContext(u);if(n||(n=1.2),at.IGNORE_EXPAND&&(n=0),at.USE_CACHED_POLYGON_IMAGE){var it=a._$e0;if(it.gl_cacheImage=it.gl_cacheImage||{},!it.gl_cacheImage[P]){var et=nt.createCanvas(K-Q,tt-Z);at.DEBUG_DATA.LDGL_CANVAS_MB=at.DEBUG_DATA.LDGL_CANVAS_MB||0,at.DEBUG_DATA.LDGL_CANVAS_MB+=(K-Q)*(tt-Z)*4;var rt=et.getContext("2d");rt.translate(-Q,-Z),nt.clip(rt,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),rt.drawImage(t,0,0),it.gl_cacheImage[P]={cacheCanvas:et,cacheContext:rt}}u.drawImage(it.gl_cacheImage[P].cacheCanvas,Q,Z)}else at.IGNORE_CLIP||nt.clip(u,g,n,Y,O,D,R,b,F,C,M,E,A,I,w,x),at.USE_ADJUST_TRANSLATION&&(W=0,j=l,q=0,J=$),u.drawImage(t,W,q,j-W,J-q,W,q,j-W,J-q);u.restore()}}catch(t){_._$Rb(t)}},nt.clip=function(t,i,e,r,o,n,s,_,a,h,l,$,u,p,f,c){e>.02?nt.expandClip(t,i,e,r,l,$,u,p,f,c):nt.clipWithTransform(t,null,o,n,s,_,a,h)},nt.expandClip=function(t,i,e,r,o,n,s,_,a,h){var l=s-o,$=_-n,u=a-o,p=h-n,f=l*p-$*u>0?e:-e,c=-$,d=l,g=a-s,y=h-_,m=-y,T=g,P=Math.sqrt(g*g+y*y),S=-p,v=u,L=Math.sqrt(u*u+p*p),M=o-f*c/r,E=n-f*d/r,A=s-f*c/r,I=_-f*d/r,w=s-f*m/P,x=_-f*T/P,O=a-f*m/P,D=h-f*T/P,R=o+f*S/L,b=n+f*v/L,F=a+f*S/L,C=h+f*v/L,N=nt._$50;return null!=i._$P2(N)&&(nt.clipWithTransform(t,N,M,E,A,I,w,x,O,D,F,C,R,b),!0)},nt.clipWithTransform=function(t,i,e,r,o,n,s,a){if(arguments.length<7)return void _._$li("err : @LDGL.clip()");if(!(arguments[1]instanceof gt))return void _._$li("err : a[0] is _$6 LDTransform @LDGL.clip()");var h=nt._$B,l=i,$=arguments;if(t.beginPath(),l){l._$PS($[2],$[3],h),t.moveTo(h[0],h[1]);for(var u=4;u<$.length;u+=2)l._$PS($[u],$[u+1],h),t.lineTo(h[0],h[1])}else{t.moveTo($[2],$[3]);for(var u=4;u<$.length;u+=2)t.lineTo($[u],$[u+1])}t.clip()},nt.createCanvas=function(t,i){var e=document.createElement("canvas");return e.setAttribute("width",t),e.setAttribute("height",i),e||_._$li("err : "+e),e},nt.dumpValues=function(){for(var t="",i=0;i<arguments.length;i++)t+="["+i+"]= "+arguments[i].toFixed(3)+" , ";console.log(t)},st.prototype._$F0=function(t){this._$TT=t._$_T(),this._$LT=t._$_T(),this._$FS=t._$_T(),this._$wL=t._$nP()},st.prototype.getMinValue=function(){return this._$TT},st.prototype.getMaxValue=function(){return this._$LT},st.prototype.getDefaultValue=function(){return this._$FS},st.prototype.getParamID=function(){return this._$wL},_t.prototype._$yo=function(){return this._$AT&&!this._$JS},_t.prototype._$hS=function(t){this._$AT=t},_t.prototype._$GT=function(){return this._$e0},_t.prototype._$l2=function(t){this._$IP=t},_t.prototype.getPartsIndex=function(){return this._$IP},_t.prototype._$x2=function(){return this._$JS},_t.prototype._$Ib=function(t){this._$JS=t},_t.prototype.getTotalScale=function(){return this.totalScale},_t.prototype.setTotalScale_notForClient=function(t){this.totalScale=t},_t.prototype.getInterpolatedOpacity=function(){return this._$7s},_t.prototype.setInterpolatedOpacity=function(t){this._$7s=t},_t.prototype.getTotalOpacity=function(t){return this.totalOpacity},_t.prototype.setTotalOpacity=function(t){this.totalOpacity=t},at._$2s="2.1.00_1",at._$Kr=201001e3,at._$sP=!0,at._$so=!0,at._$cb=!1,at._$3T=!0,at._$Ts=!0,at._$fb=!0,at._$ts=!0,at.L2D_DEFORMER_EXTEND=!0,at._$Wb=!1;at._$yr=!1,at._$Zs=!1,at.L2D_NO_ERROR=0,at._$i7=1e3,at._$9s=1001,at._$es=1100,at._$r7=2e3,at._$07=2001,at._$b7=2002,at._$H7=4e3,at.L2D_COLOR_BLEND_MODE_MULT=0,at.L2D_COLOR_BLEND_MODE_ADD=1,at.L2D_COLOR_BLEND_MODE_INTERPOLATE=2,at._$6b=!0,at._$cT=0,at.clippingMaskBufferSize=256,at.glContext=new Array,at.frameBuffers=new Array,at.fTexture=new Array,at.IGNORE_CLIP=!1,at.IGNORE_EXPAND=!1,at.EXPAND_W=2,at.USE_ADJUST_TRANSLATION=!0,at.USE_CANVAS_TRANSFORM=!0,at.USE_CACHED_POLYGON_IMAGE=!1,at.DEBUG_DATA={},at.PROFILE_IOS_SPEED={PROFILE_NAME:"iOS Speed",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!0,EXPAND_W:4},at.PROFILE_IOS_QUALITY={PROFILE_NAME:"iOS HiQ",USE_ADJUST_TRANSLATION:!0,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_IOS_DEFAULT=at.PROFILE_IOS_QUALITY,at.PROFILE_ANDROID={PROFILE_NAME:"Android",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.PROFILE_DESKTOP={PROFILE_NAME:"Desktop",USE_ADJUST_TRANSLATION:!1,USE_CACHED_POLYGON_IMAGE:!1,EXPAND_W:2},at.initProfile=function(){Et.isIOS()?at.setupProfile(at.PROFILE_IOS_DEFAULT):Et.isAndroid()?at.setupProfile(at.PROFILE_ANDROID):at.setupProfile(at.PROFILE_DESKTOP)},at.setupProfile=function(t,i){if("number"==typeof t)switch(t){case 9901:t=at.PROFILE_IOS_SPEED;break;case 9902:t=at.PROFILE_IOS_QUALITY;break;case 9903:t=at.PROFILE_IOS_DEFAULT;break;case 9904:t=at.PROFILE_ANDROID;break;case 9905:t=at.PROFILE_DESKTOP;break;default:alert("profile _$6 _$Ui : "+t)}arguments.length<2&&(i=!0),i&&console.log("profile : "+t.PROFILE_NAME);for(var e in t)at[e]=t[e],i&&console.log("  ["+e+"] = "+t[e])},at.init=function(){if(at._$6b){console.log("Live2D %s",at._$2s),at._$6b=!1;!0,at.initProfile()}},at.getVersionStr=function(){return at._$2s},at.getVersionNo=function(){return at._$Kr},at._$sT=function(t){at._$cT=t},at.getError=function(){var t=at._$cT;return at._$cT=0,t},at.dispose=function(){at.glContext=[],at.frameBuffers=[],at.fTexture=[]},at.setGL=function(t,i){var e=i||0;at.glContext[e]=t},at.getGL=function(t){return at.glContext[t]},at.setClippingMaskBufferSize=function(t){at.clippingMaskBufferSize=t},at.getClippingMaskBufferSize=function(){return at.clippingMaskBufferSize},at.deleteBuffer=function(t){at.getGL(t).deleteFramebuffer(at.frameBuffers[t].framebuffer),delete at.frameBuffers[t],delete at.glContext[t]},ht._$r2=function(t){return t<0?0:t>1?1:.5-.5*Math.cos(t*Lt.PI_F)},lt._$fr=-1,lt.prototype.toString=function(){return this._$ib},$t.prototype=new W,$t._$42=0,$t._$Os=30,$t._$ms=0,$t._$ns=1,$t._$_s=2,$t._$gT=new Array,$t.prototype._$_S=function(t){this._$LP=t},$t.prototype.getTextureNo=function(){return this._$LP},$t.prototype._$ZL=function(){return this._$Qi},$t.prototype._$H2=function(){return this._$JP},$t.prototype.getNumPoints=function(){return this._$d0},$t.prototype.getType=function(){return W._$wb},$t.prototype._$B2=function(t,i,e){var r=i,o=null!=r._$hr?r._$hr:r._$Cr;switch(U._$do){default:case U._$Ms:throw new Error("_$L _$ro ");case U._$Qs:for(var n=this._$d0-1;n>=0;--n)o[n*U._$No+4]=e}},$t.prototype._$zP=function(){this._$GS=new D,this._$GS._$zP()},$t.prototype._$F0=function(t){W.prototype._$F0.call(this,t),this._$LP=t._$6L(),this._$d0=t._$6L(),this._$Yo=t._$6L();var i=t._$nP();this._$BP=new Int16Array(3*this._$Yo);for(var e=3*this._$Yo-1;e>=0;--e)this._$BP[e]=i[e];if(this._$Eo=t._$nP(),this._$Qi=t._$nP(),t.getFormatVersion()>=G._$s7){if(this._$JP=t._$6L(),0!=this._$JP){if(0!=(1&this._$JP)){var r=t._$6L();null==this._$5P&&(this._$5P=new Object),this._$5P._$Hb=parseInt(r)}0!=(this._$JP&$t._$Os)?this._$6s=(this._$JP&$t._$Os)>>1:this._$6s=$t._$ms,0!=(32&this._$JP)&&(this.culling=!1)}}else this._$JP=0},$t.prototype.init=function(t){var i=new ut(this),e=this._$d0*U._$No,r=this._$32();switch(null!=i._$Cr&&(i._$Cr=null),i._$Cr=new Float32Array(e),null!=i._$hr&&(i._$hr=null),i._$hr=r?new Float32Array(e):null,U._$do){default:case U._$Ms:if(U._$Ls)for(var o=this._$d0-1;o>=0;--o){var n=o<<1;this._$Qi[n+1]=1-this._$Qi[n+1]}break;case U._$Qs:for(var o=this._$d0-1;o>=0;--o){var n=o<<1,s=o*U._$No,_=this._$Qi[n],a=this._$Qi[n+1];i._$Cr[s]=_,i._$Cr[s+1]=a,i._$Cr[s+4]=0,r&&(i._$hr[s]=_,i._$hr[s+1]=a,i._$hr[s+4]=0)}}return i},$t.prototype._$Nr=function(t,i){var e=i;if(this!=e._$GT()&&console.log("### assert!! ### "),this._$GS._$Ur(t)&&(W.prototype._$Nr.call(this,t,e),!e._$IS[0])){var r=$t._$gT;r[0]=!1,v._$Vr(t,this._$GS,r,this._$d0,this._$Eo,e._$Cr,U._$i2,U._$No)}},$t.prototype._$2b=function(t,i){try{this!=i._$GT()&&console.log("### assert!! ### ");var e=!1;i._$IS[0]&&(e=!0);var r=i;if(!e&&(W.prototype._$2b.call(this,t),this._$32())){var o=this.getTargetBaseDataID();if(r._$8r==W._$ur&&(r._$8r=t.getBaseDataIndex(o)),r._$8r<0)at._$so&&_._$li("_$L _$0P _$G :: %s",o);else{var n=t.getBaseData(r._$8r),s=t._$q2(r._$8r);null==n||s._$x2()?r._$AT=!1:(n._$nb(t,s,r._$Cr,r._$hr,this._$d0,U._$i2,U._$No),r._$AT=!0),r.baseOpacity=s.getTotalOpacity()}}}catch(t){throw t}},$t.prototype.draw=function(t,i,e){if(this!=e._$GT()&&console.log("### assert!! ### "),!e._$IS[0]){var r=e,o=this._$LP;o<0&&(o=1);var n=this.getOpacity(i,r)*e._$VS*e.baseOpacity,s=null!=r._$hr?r._$hr:r._$Cr;t.setClipBufPre_clipContextForDraw(e.clipBufPre_clipContext),t._$WP(this.culling),t._$Uo(o,3*this._$Yo,this._$BP,s,this._$Qi,n,this._$6s,r)}},$t.prototype.dump=function(){console.log("  _$yi( %d ) , _$d0( %d ) , _$Yo( %d ) \n",this._$LP,this._$d0,this._$Yo),console.log("  _$Oi _$di = { ");for(var t=0;t<this._$BP.length;t++)console.log("%5d ,",this._$BP[t]);console.log("\n  _$5i _$30");for(var t=0;t<this._$Eo.length;t++){console.log("\n    _$30[%d] = ",t);for(var i=this._$Eo[t],e=0;e<i.length;e++)console.log("%6.2f, ",i[e])}console.log("\n")},$t.prototype._$72=function(t){return null==this._$5P?null:this._$5P[t]},$t.prototype.getIndexArray=function(){return this._$BP},ut.prototype=new Mt,ut.prototype.getTransformedPoints=function(){return null!=this._$hr?this._$hr:this._$Cr},pt.prototype._$HT=function(t){this.x=t.x,this.y=t.y},pt.prototype._$HT=function(t,i){this.x=t,this.y=i},ft.prototype=new i,ft.loadModel=function(t){var e=new ft;return i._$62(e,t),e},ft.loadModel=function(t,e){var r=e||0,o=new ft(r);return i._$62(o,t),o},ft._$to=function(){return new ft},ft._$er=function(t){var i=new _$5("../_$_r/_$t0/_$Ri/_$_P._$d");if(0==i.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+i._$PL());for(var e=["../_$_r/_$t0/_$Ri/_$_P.512/_$CP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$vP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$EP._$1","../_$_r/_$t0/_$Ri/_$_P.512/_$pP._$1"],r=ft.loadModel(i._$3b()),o=0;o<e.length;o++){var n=new _$5(e[o]);if(0==n.exists())throw new _$ls("_$t0 _$_ _$6 _$Ui :: "+n._$PL());r.setTexture(o,_$nL._$_o(t,n._$3b()))}return r},ft.prototype.setGL=function(t){at.setGL(t)},ft.prototype.setTransform=function(t){this.drawParamWebGL.setTransform(t)},ft.prototype.update=function(){this._$5S.update(),this._$5S.preDraw(this.drawParamWebGL)},ft.prototype.draw=function(){this._$5S.draw(this.drawParamWebGL)},ft.prototype._$K2=function(){this.drawParamWebGL._$K2()},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this.drawParamWebGL.setTexture(t,i)},ft.prototype.setTexture=function(t,i){null==this.drawParamWebGL&&_._$li("_$Yi for QT _$ki / _$XS() is _$6 _$ui!!"),this.drawParamWebGL.setTexture(t,i)},ft.prototype._$Rs=function(){return this.drawParamWebGL._$Rs()},ft.prototype._$Ds=function(t){this.drawParamWebGL._$Ds(t)},ft.prototype.getDrawParam=function(){return this.drawParamWebGL},ft.prototype.setMatrix=function(t){this.drawParamWebGL.setMatrix(t)},ft.prototype.setPremultipliedAlpha=function(t){this.drawParamWebGL.setPremultipliedAlpha(t)},ft.prototype.isPremultipliedAlpha=function(){return this.drawParamWebGL.isPremultipliedAlpha()},ft.prototype.setAnisotropy=function(t){this.drawParamWebGL.setAnisotropy(t)},ft.prototype.getAnisotropy=function(){return this.drawParamWebGL.getAnisotropy()},ct.prototype._$tb=function(){return this.motions},ct.prototype.startMotion=function(t,i){for(var e=null,r=this.motions.length,o=0;o<r;++o)null!=(e=this.motions[o])&&(e._$qS(e._$w0.getFadeOut()),this._$eb&&_._$Ji("MotionQueueManager[size:%2d]->startMotion() / start _$K _$3 (m%d)\n",r,e._$sr));if(null==t)return-1;e=new dt,e._$w0=t,this.motions.push(e);var n=e._$sr;return this._$eb&&_._$Ji("MotionQueueManager[size:%2d]->startMotion() / new _$w0 (m%d)\n",r,n),n},ct.prototype.updateParam=function(t){try{for(var i=!1,e=0;e<this.motions.length;e++){var r=this.motions[e];if(null!=r){var o=r._$w0;null!=o?(o.updateParam(t,r),i=!0,r.isFinished()&&(this._$eb&&_._$Ji("MotionQueueManager[size:%2d]->updateParam() / _$T0 _$w0 (m%d)\n",this.motions.length-1,r._$sr),this.motions.splice(e,1),e--)):(this.motions=this.motions.splice(e,1),e--)}else this.motions.splice(e,1),e--}return i}catch(t){return _._$li(t),!0}},ct.prototype.isFinished=function(t){if(arguments.length>=1){for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e&&(e._$sr==t&&!e.isFinished()))return!1}return!0}for(var i=0;i<this.motions.length;i++){var e=this.motions[i];if(null!=e){if(null!=e._$w0){if(!e.isFinished())return!1}else this.motions.splice(i,1),i--}else this.motions.splice(i,1),i--}return!0},ct.prototype.stopAllMotions=function(){for(var t=0;t<this.motions.length;t++){var i=this.motions[t];if(null!=i){i._$w0;this.motions.splice(t,1),t--}else this.motions.splice(t,1),t--}},ct.prototype._$Zr=function(t){this._$eb=t},ct.prototype._$e=function(){console.log("-- _$R --\n");for(var t=0;t<this.motions.length;t++){var i=this.motions[t],e=i._$w0;console.log("MotionQueueEnt[%d] :: %s\n",this.motions.length,e.toString())}},dt._$Gs=0,dt.prototype.isFinished=function(){return this._$9L},dt.prototype._$qS=function(t){var i=w.getUserTimeMSec(),e=i+t;(this._$Do<0||e<this._$Do)&&(this._$Do=e)},dt.prototype._$Bs=function(){return this._$sr},gt.prototype.setContext=function(t){var i=this.m;t.transform(i[0],i[1],i[3],i[4],i[6],i[7])},gt.prototype.toString=function(){for(var t="LDTransform { ",i=0;i<9;i++)t+=this.m[i].toFixed(2)+" ,";return t+=" }"},gt.prototype.identity=function(){var t=this.m;t[0]=t[4]=t[8]=1,t[1]=t[2]=t[3]=t[5]=t[6]=t[7]=0},gt.prototype._$PS=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype._$P2=function(t){t||(t=new gt);var i=this.m,e=i[0],r=i[1],o=i[2],n=i[3],s=i[4],_=i[5],a=i[6],h=i[7],l=i[8],$=e*s*l+r*_*a+o*n*h-e*_*h-o*s*a-r*n*l;if(0==$)return null;var u=1/$;return t.m[0]=u*(s*l-h*_),t.m[1]=u*(h*o-r*l),t.m[2]=u*(r*_-s*o),t.m[3]=u*(a*_-n*l),t.m[4]=u*(e*l-a*o),t.m[5]=u*(n*o-e*_),t.m[6]=u*(n*h-a*s),t.m[7]=u*(a*r-e*h),t.m[8]=u*(e*s-n*r),t},gt.prototype.transform=function(t,i,e){null==e&&(e=new Array(0,0));var r=this.m;return e[0]=r[0]*t+r[3]*i+r[6],e[1]=r[1]*t+r[4]*i+r[7],e},gt.prototype.translate=function(t,i){var e=this.m;e[6]=e[0]*t+e[3]*i+e[6],e[7]=e[1]*t+e[4]*i+e[7],e[8]=e[2]*t+e[5]*i+e[8]},gt.prototype.scale=function(t,i){var e=this.m;e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=i,e[4]*=i,e[5]*=i},gt.prototype.shear=function(t,i){var e=this.m,r=e[0]+e[3]*i,o=e[1]+e[4]*i,n=e[2]+e[5]*i;e[3]=e[0]*t+e[3],e[4]=e[1]*t+e[4],e[5]=e[2]*t+e[5],e[0]=r,e[1]=o,e[2]=n},gt.prototype.rotate=function(t){var i=this.m,e=Math.cos(t),r=Math.sin(t),o=i[0]*e+i[3]*r,n=i[1]*e+i[4]*r,s=i[2]*e+i[5]*r;i[3]=-i[0]*r+i[3]*e,i[4]=-i[1]*r+i[4]*e,i[5]=-i[2]*r+i[5]*e,i[0]=o,i[1]=n,i[2]=s},gt.prototype.concatenate=function(t){var i=this.m,e=t.m,r=i[0]*e[0]+i[3]*e[1]+i[6]*e[2],o=i[1]*e[0]+i[4]*e[1]+i[7]*e[2],n=i[2]*e[0]+i[5]*e[1]+i[8]*e[2],s=i[0]*e[3]+i[3]*e[4]+i[6]*e[5],_=i[1]*e[3]+i[4]*e[4]+i[7]*e[5],a=i[2]*e[3]+i[5]*e[4]+i[8]*e[5],h=i[0]*e[6]+i[3]*e[7]+i[6]*e[8],l=i[1]*e[6]+i[4]*e[7]+i[7]*e[8],$=i[2]*e[6]+i[5]*e[7]+i[8]*e[8];m[0]=r,m[1]=o,m[2]=n,m[3]=s,m[4]=_,m[5]=a,m[6]=h,m[7]=l,m[8]=$},yt.prototype=new et,yt._$eT=null,yt._$tP=new Object,yt._$2o=function(){return null==yt._$eT&&(yt._$eT=yt.getID("DST_BASE")),yt._$eT},yt._$27=function(){yt._$tP.clear(),yt._$eT=null},yt.getID=function(t){var i=yt._$tP[t];return null==i&&(i=new yt(t),yt._$tP[t]=i),i},yt.prototype._$3s=function(){return new yt},mt.prototype=new E,mt._$9r=function(t){return new Float32Array(t)},mt._$vb=function(t){return new Int16Array(t)},mt._$cr=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$9r(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$mb=function(t,i){return null==t||t._$yL()<i.length?(t=mt._$vb(2*i.length),t.put(i),t._$oT(0)):(t.clear(),t.put(i),t._$oT(0)),t},mt._$Hs=function(){return this._$Gr},mt._$as=function(t){this._$Gr=t},mt.prototype.getGL=function(){return this.gl},mt.prototype.setGL=function(t){this.gl=t},mt.prototype.setTransform=function(t){this.transform=t},mt.prototype._$ZT=function(){var t=this.gl;this.firstDraw&&(this.initShader(),this.firstDraw=!1,this.anisotropyExt=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic"),this.anisotropyExt&&(this.maxAnisotropy=t.getParameter(this.anisotropyExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT))),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.DEPTH_TEST),t.frontFace(t.CW),t.enable(t.BLEND),t.colorMask(1,1,1,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)},mt.prototype._$Uo=function(t,i,e,r,o,n,s,_){if(!(n<.01&&null==this.clipBufPre_clipContextMask)){var a=(n>.9&&at.EXPAND_W,this.gl);if(null==this.gl)throw new Error("gl is null");var h=1*this._$C0*n,l=1*this._$tT*n,$=1*this._$WL*n,u=this._$lT*n;if(null!=this.clipBufPre_clipContextMask){a.frontFace(a.CCW),a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.getClipBufPre_clipContextMask().matrixForMask);var p=this.getClipBufPre_clipContextMask().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag,f.r,f.g,f.b,f.a);var c=this.getClipBufPre_clipContextMask().layoutBounds;a.uniform4f(this.u_baseColor_Loc,2*c.x-1,2*c.y-1,2*c._$EL()-1,2*c._$5T()-1),a.uniform1i(this.u_maskFlag_Loc,!0)}else if(null!=this.getClipBufPre_clipContextDraw()){a.useProgram(this.shaderProgramOff),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc_Off),a.vertexAttribPointer(this.a_position_Loc_Off,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc_Off,1),a.enableVertexAttribArray(this.a_texCoord_Loc_Off),a.vertexAttribPointer(this.a_texCoord_Loc_Off,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_clipMatrix_Loc_Off,!1,this.getClipBufPre_clipContextDraw().matrixForDraw),a.uniformMatrix4fv(this.u_matrix_Loc_Off,!1,this.matrix4x4),a.activeTexture(a.TEXTURE2),a.bindTexture(a.TEXTURE_2D,at.fTexture[this.glno]),a.uniform1i(this.s_texture1_Loc_Off,2);var p=this.getClipBufPre_clipContextDraw().layoutChannelNo,f=this.getChannelFlagAsColor(p);a.uniform4f(this.u_channelFlag_Loc_Off,f.r,f.g,f.b,f.a),a.uniform4f(this.u_baseColor_Loc_Off,h,l,$,u)}else a.useProgram(this.shaderProgram),this._$vS=Tt(a,this._$vS,r),this._$no=Pt(a,this._$no,e),a.enableVertexAttribArray(this.a_position_Loc),a.vertexAttribPointer(this.a_position_Loc,2,a.FLOAT,!1,0,0),this._$NT=Tt(a,this._$NT,o),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,this.textures[t]),a.uniform1i(this.s_texture0_Loc,1),a.enableVertexAttribArray(this.a_texCoord_Loc),a.vertexAttribPointer(this.a_texCoord_Loc,2,a.FLOAT,!1,0,0),a.uniformMatrix4fv(this.u_matrix_Loc,!1,this.matrix4x4),a.uniform4f(this.u_baseColor_Loc,h,l,$,u),a.uniform1i(this.u_maskFlag_Loc,!1);this.culling?this.gl.enable(a.CULL_FACE):this.gl.disable(a.CULL_FACE),this.gl.enable(a.BLEND);var d,g,y,m;if(null!=this.clipBufPre_clipContextMask)d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;else switch(s){case $t._$ms:d=a.ONE,g=a.ONE_MINUS_SRC_ALPHA,y=a.ONE,m=a.ONE_MINUS_SRC_ALPHA;break;case $t._$ns:d=a.ONE,g=a.ONE,y=a.ZERO,m=a.ONE;break;case $t._$_s:d=a.DST_COLOR,g=a.ONE_MINUS_SRC_ALPHA,y=a.ZERO,m=a.ONE}a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(d,g,y,m),this.anisotropyExt&&a.texParameteri(a.TEXTURE_2D,this.anisotropyExt.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy);var T=e.length;a.drawElements(a.TRIANGLES,T,a.UNSIGNED_SHORT,0),a.bindTexture(a.TEXTURE_2D,null)}},mt.prototype._$Rs=function(){throw new Error("_$Rs")},mt.prototype._$Ds=function(t){throw new Error("_$Ds")},mt.prototype._$K2=function(){for(var t=0;t<this.textures.length;t++){0!=this.textures[t]&&(this.gl._$K2(1,this.textures,t),this.textures[t]=null)}},mt.prototype.setTexture=function(t,i){this.textures[t]=i},mt.prototype.initShader=function(){var t=this.gl;this.loadShaders2(),this.a_position_Loc=t.getAttribLocation(this.shaderProgram,"a_position"),this.a_texCoord_Loc=t.getAttribLocation(this.shaderProgram,"a_texCoord"),this.u_matrix_Loc=t.getUniformLocation(this.shaderProgram,"u_mvpMatrix"),this.s_texture0_Loc=t.getUniformLocation(this.shaderProgram,"s_texture0"),this.u_channelFlag=t.getUniformLocation(this.shaderProgram,"u_channelFlag"),this.u_baseColor_Loc=t.getUniformLocation(this.shaderProgram,"u_baseColor"),this.u_maskFlag_Loc=t.getUniformLocation(this.shaderProgram,"u_maskFlag"),this.a_position_Loc_Off=t.getAttribLocation(this.shaderProgramOff,"a_position"),this.a_texCoord_Loc_Off=t.getAttribLocation(this.shaderProgramOff,"a_texCoord"),this.u_matrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_mvpMatrix"),this.u_clipMatrix_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_ClipMatrix"),this.s_texture0_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"s_texture0"),this.s_texture1_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"s_texture1"),this.u_channelFlag_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_channelFlag"),this.u_baseColor_Loc_Off=t.getUniformLocation(this.shaderProgramOff,"u_baseColor")},mt.prototype.disposeShader=function(){var t=this.gl;this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=null),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=null)},mt.prototype.compileShader=function(t,i){var e=this.gl,r=i,o=e.createShader(t);if(null==o)return _._$Ji("_$L0 to create shader"),null;if(e.shaderSource(o,r),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n=e.getShaderInfoLog(o);return _._$Ji("_$L0 to compile shader : "+n),e.deleteShader(o),null}return o},mt.prototype.loadShaders2=function(){var t=this.gl;if(this.shaderProgram=t.createProgram(),!this.shaderProgram)return!1;if(this.shaderProgramOff=t.createProgram(),!this.shaderProgramOff)return!1;if(this.vertShader=this.compileShader(t.VERTEX_SHADER,"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_mvpMatrix * a_position;    v_texCoord = a_texCoord;}"),!this.vertShader)return _._$Ji("Vertex shader compile _$li!"),!1;if(this.vertShaderOff=this.compileShader(t.VERTEX_SHADER,"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform mat4       u_mvpMatrix;uniform mat4       u_ClipMatrix;void main(){    gl_Position = u_mvpMatrix * a_position;    v_ClipPos = u_ClipMatrix * a_position;    v_texCoord = a_texCoord ;}"),!this.vertShaderOff)return _._$Ji("OffVertex shader compile _$li!"),!1;if(this.fragShader=this.compileShader(t.FRAGMENT_SHADER,"precision mediump float;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform vec4       u_channelFlag;uniform vec4       u_baseColor;uniform bool       u_maskFlag;void main(){    vec4 smpColor;     if(u_maskFlag){        float isInside =             step(u_baseColor.x, v_ClipPos.x/v_ClipPos.w)          * step(u_baseColor.y, v_ClipPos.y/v_ClipPos.w)          * step(v_ClipPos.x/v_ClipPos.w, u_baseColor.z)          * step(v_ClipPos.y/v_ClipPos.w, u_baseColor.w);        smpColor = u_channelFlag * texture2D(s_texture0 , v_texCoord).a * isInside;    }else{        smpColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;    }    gl_FragColor = smpColor;}"),!this.fragShader)return _._$Ji("Fragment shader compile _$li!"),!1;if(this.fragShaderOff=this.compileShader(t.FRAGMENT_SHADER,"precision mediump float ;varying vec2       v_texCoord;varying vec4       v_ClipPos;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;uniform vec4       u_channelFlag;uniform vec4       u_baseColor ;void main(){    vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;    vec4 clipMask = texture2D(s_texture1, v_ClipPos.xy / v_ClipPos.w) * u_channelFlag;    float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;    col_formask = col_formask * maskVal;    gl_FragColor = col_formask;}"),!this.fragShaderOff)return _._$Ji("OffFragment shader compile _$li!"),!1;if(t.attachShader(this.shaderProgram,this.vertShader),t.attachShader(this.shaderProgram,this.fragShader),t.attachShader(this.shaderProgramOff,this.vertShaderOff),t.attachShader(this.shaderProgramOff,this.fragShaderOff),t.linkProgram(this.shaderProgram),t.linkProgram(this.shaderProgramOff),!t.getProgramParameter(this.shaderProgram,t.LINK_STATUS)){var i=t.getProgramInfoLog(this.shaderProgram);return _._$Ji("_$L0 to link program: "+i),this.vertShader&&(t.deleteShader(this.vertShader),this.vertShader=0),this.fragShader&&(t.deleteShader(this.fragShader),this.fragShader=0),this.shaderProgram&&(t.deleteProgram(this.shaderProgram),this.shaderProgram=0),this.vertShaderOff&&(t.deleteShader(this.vertShaderOff),this.vertShaderOff=0),this.fragShaderOff&&(t.deleteShader(this.fragShaderOff),this.fragShaderOff=0),this.shaderProgramOff&&(t.deleteProgram(this.shaderProgramOff),this.shaderProgramOff=0),!1}return!0},mt.prototype.createFramebuffer=function(){var t=this.gl,i=at.clippingMaskBufferSize,e=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,e);var r=t.createRenderbuffer();t.bindRenderbuffer(t.RENDERBUFFER,r),t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r);var o=t.createTexture();return t.bindTexture(t.TEXTURE_2D,o),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,i,i,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),at.fTexture[this.glno]=o,{framebuffer:e,renderbuffer:r,texture:at.fTexture[this.glno]}},St.prototype._$fP=function(){var t,i,e,r=this._$ST();if(0==(128&r))return 255&r;if(0==(128&(t=this._$ST())))return(127&r)<<7|127&t;if(0==(128&(i=this._$ST())))return(127&r)<<14|(127&t)<<7|255&i;if(0==(128&(e=this._$ST())))return(127&r)<<21|(127&t)<<14|(127&i)<<7|255&e;throw new lt("_$L _$0P  _")},St.prototype.getFormatVersion=function(){return this._$S2},St.prototype._$gr=function(t){this._$S2=t},St.prototype._$3L=function(){return this._$fP()},St.prototype._$mP=function(){return this._$zT(),this._$F+=8,this._$T.getFloat64(this._$F-8)},St.prototype._$_T=function(){return this._$zT(),this._$F+=4,this._$T.getFloat32(this._$F-4)},St.prototype._$6L=function(){return this._$zT(),this._$F+=4,this._$T.getInt32(this._$F-4)},St.prototype._$ST=function(){return this._$zT(),this._$T.getInt8(this._$F++)},St.prototype._$9T=function(){return this._$zT(),this._$F+=2,this._$T.getInt16(this._$F-2)},St.prototype._$2T=function(){throw this._$zT(),this._$F+=8,new lt("_$L _$q read long")},St.prototype._$po=function(){return this._$zT(),0!=this._$T.getInt8(this._$F++)};var xt=!0;St.prototype._$bT=function(){this._$zT();var t=this._$3L(),i=null;if(xt)try{var e=new ArrayBuffer(2*t);i=new Uint16Array(e);for(var r=0;r<t;++r)i[r]=this._$T.getUint8(this._$F++);return String.fromCharCode.apply(null,i)}catch(t){xt=!1}try{var o=new Array;if(null==i)for(var r=0;r<t;++r)o[r]=this._$T.getUint8(this._$F++);else for(var r=0;r<t;++r)o[r]=i[r];return String.fromCharCode.apply(null,o)}catch(t){console.log("read utf8 / _$rT _$L0 !! : "+t)}},St.prototype._$cS=function(){this._$zT();for(var t=this._$3L(),i=new Int32Array(t),e=0;e<t;e++)i[e]=this._$T.getInt32(this._$F),this._$F+=4;return i},St.prototype._$Tb=function(){this._$zT();for(var t=this._$3L(),i=new Float32Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat32(this._$F),this._$F+=4;return i},St.prototype._$5b=function(){this._$zT();for(var t=this._$3L(),i=new Float64Array(t),e=0;e<t;e++)i[e]=this._$T.getFloat64(this._$F),this._$F+=8;return i},St.prototype._$nP=function(){return this._$Jb(-1)},St.prototype._$Jb=function(t){if(this._$zT(),t<0&&(t=this._$3L()),t==G._$7P){var i=this._$6L();if(0<=i&&i<this._$Ko.length)return this._$Ko[i];throw new lt("_$sL _$4i @_$m0")}var e=this._$4b(t);return this._$Ko.push(e),e},St.prototype._$4b=function(t){if(0==t)return null;if(50==t){var i=this._$bT(),e=b.getID(i);return e}if(51==t){var i=this._$bT(),e=yt.getID(i);return e}if(134==t){var i=this._$bT(),e=l.getID(i);return e}if(60==t){var i=this._$bT(),e=u.getID(i);return e}if(t>=48){var r=G._$9o(t);return null!=r?(r._$F0(this),r):null}switch(t){case 1:return this._$bT();case 10:return new n(this._$6L(),!0);case 11:return new S(this._$mP(),this._$mP(),this._$mP(),this._$mP());case 12:return new S(this._$_T(),this._$_T(),this._$_T(),this._$_T());case 13:return new L(this._$mP(),this._$mP());case 14:return new L(this._$_T(),this._$_T());case 15:for(var o=this._$3L(),e=new Array(o),s=0;s<o;s++)e[s]=this._$nP();return e;case 17:var e=new F(this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP(),this._$mP());return e;case 21:return new h(this._$6L(),this._$6L(),this._$6L(),this._$6L());case 22:return new pt(this._$6L(),this._$6L());case 23:throw new Error("_$L _$ro ");case 16:case 25:return this._$cS();case 26:return this._$5b();case 27:return this._$Tb();case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 18:case 19:case 20:case 24:case 28:throw new lt("_$6 _$q : _$nP() of 2-9 ,18,19,20,24,28 : "+t);default:throw new lt("_$6 _$q : _$nP() NO _$i : "+t)}},St.prototype._$8L=function(){return 0==this._$hL?this._$v0=this._$ST():8==this._$hL&&(this._$v0=this._$ST(),this._$hL=0),1==(this._$v0>>7-this._$hL++&1)},St.prototype._$zT=function(){0!=this._$hL&&(this._$hL=0)},vt.prototype._$wP=function(t,i,e){for(var r=0;r<e;r++){for(var o=0;o<i;o++){var n=2*(o+r*i);console.log("(% 7.3f , % 7.3f) , ",t[n],t[n+1])}console.log("\n")}console.log("\n")},Lt._$2S=Math.PI/180,Lt._$bS=Math.PI/180,Lt._$wS=180/Math.PI,Lt._$NS=180/Math.PI,Lt.PI_F=Math.PI,Lt._$kT=[0,.012368,.024734,.037097,.049454,.061803,.074143,.086471,.098786,.111087,.12337,.135634,.147877,.160098,.172295,.184465,.196606,.208718,.220798,.232844,.244854,.256827,.268761,.280654,.292503,.304308,.316066,.327776,.339436,.351044,.362598,.374097,.385538,.396921,.408243,.419502,.430697,.441826,.452888,.463881,.474802,.485651,.496425,.507124,.517745,.528287,.538748,.549126,.559421,.56963,.579752,.589785,.599728,.609579,.619337,.629,.638567,.648036,.657406,.666676,.675843,.684908,.693867,.70272,.711466,.720103,.72863,.737045,.745348,.753536,.76161,.769566,.777405,.785125,.792725,.800204,.807561,.814793,.821901,.828884,.835739,.842467,.849066,.855535,.861873,.868079,.874153,.880093,.885898,.891567,.897101,.902497,.907754,.912873,.917853,.922692,.92739,.931946,.936359,.940629,.944755,.948737,.952574,.956265,.959809,.963207,.966457,.96956,.972514,.97532,.977976,.980482,.982839,.985045,.987101,.989006,.990759,.992361,.993811,.995109,.996254,.997248,.998088,.998776,.999312,.999694,.999924,1],Lt._$92=function(t,i){var e=Math.atan2(t[1],t[0]),r=Math.atan2(i[1],i[0]);return Lt._$tS(e,r)},Lt._$tS=function(t,i){for(var e=t-i;e<-Math.PI;)e+=2*Math.PI;for(;e>Math.PI;)e-=2*Math.PI;return e},Lt._$9=function(t){return Math.sin(t)},Lt.fcos=function(t){return Math.cos(t)},Mt.prototype._$u2=function(){return this._$IS[0]},Mt.prototype._$yo=function(){return this._$AT&&!this._$IS[0]},Mt.prototype._$GT=function(){return this._$e0},Et._$W2=0,Et.SYSTEM_INFO=null,Et.USER_AGENT=navigator.userAgent,Et.isIPhone=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone},Et.isIOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad},Et.isAndroid=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isAndroid},Et.getOSVersion=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO.version},Et.getOS=function(){return Et.SYSTEM_INFO||Et.setup(),Et.SYSTEM_INFO._isIPhone||Et.SYSTEM_INFO._isIPad?"iOS":Et.SYSTEM_INFO._isAndroid?"Android":"_$Q0 OS"},Et.setup=function(){function t(t,i){for(var e=t.substring(i).split(/[ _,;\.]/),r=0,o=0;o<=2&&!isNaN(e[o]);o++){var n=parseInt(e[o]);if(n<0||n>999){_._$li("err : "+n+" @UtHtml5.setup()"),r=0;break}r+=n*Math.pow(1e3,2-o)}return r}var i,e=Et.USER_AGENT,r=Et.SYSTEM_INFO={userAgent:e};if((i=e.indexOf("iPhone OS "))>=0)r.os="iPhone",r._isIPhone=!0,r.version=t(e,i+"iPhone OS ".length);else if((i=e.indexOf("iPad"))>=0){if((i=e.indexOf("CPU OS"))<0)return void _._$li(" err : "+e+" @UtHtml5.setup()");r.os="iPad",r._isIPad=!0,r.version=t(e,i+"CPU OS ".length)}else(i=e.indexOf("Android"))>=0?(r.os="Android",r._isAndroid=!0,r.version=t(e,i+"Android ".length)):(r.os="-",r.version=-1)},window.UtSystem=w,window.UtDebug=_,window.LDTransform=gt,window.LDGL=nt,window.Live2D=at,window.Live2DModelWebGL=ft,window.Live2DModelJS=q,window.Live2DMotion=J,window.MotionQueueManager=ct,window.PhysicsHair=f,window.AMotion=s,window.PartsDataID=l,window.DrawDataID=b,window.BaseDataID=yt,window.ParamID=u,at.init();var At=!1}()}).call(i,e(7))},function(t,i){t.exports={import:function(){throw new Error("System.import cannot be used indirectly")}}},function(t,i,e){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(){this.models=[],this.count=-1,this.reloadFlg=!1,Live2D.init(),n.Live2DFramework.setPlatformManager(new _.default)}Object.defineProperty(i,"__esModule",{value:!0}),i.default=o;var n=e(0),s=e(9),_=r(s),a=e(10),h=r(a),l=e(1),$=r(l);o.prototype.createModel=function(){var t=new h.default;return this.models.push(t),t},o.prototype.changeModel=function(t,i){if(this.reloadFlg){this.reloadFlg=!1;this.releaseModel(0,t),this.createModel(),this.models[0].load(t,i)}},o.prototype.getModel=function(t){return t>=this.models.length?null:this.models[t]},o.prototype.releaseModel=function(t,i){this.models.length<=t||(this.models[t].release(i),delete this.models[t],this.models.splice(t,1))},o.prototype.numModels=function(){return this.models.length},o.prototype.setDrag=function(t,i){for(var e=0;e<this.models.length;e++)this.models[e].setDrag(t,i)},o.prototype.maxScaleEvent=function(){$.default.DEBUG_LOG&&console.log("Max scale event.");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_IN,$.default.PRIORITY_NORMAL)},o.prototype.minScaleEvent=function(){$.default.DEBUG_LOG&&console.log("Min scale event.");for(var t=0;t<this.models.length;t++)this.models[t].startRandomMotion($.default.MOTION_GROUP_PINCH_OUT,$.default.PRIORITY_NORMAL)},o.prototype.tapEvent=function(t,i){$.default.DEBUG_LOG&&console.log("tapEvent view x:"+t+" y:"+i);for(var e=0;e<this.models.length;e++)this.models[e].hitTest($.default.HIT_AREA_HEAD,t,i)?($.default.DEBUG_LOG&&console.log("Tap face."),this.models[e].setRandomExpression()):this.models[e].hitTest($.default.HIT_AREA_BODY,t,i)?($.default.DEBUG_LOG&&console.log("Tap body. models["+e+"]"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom("head",t,i)?($.default.DEBUG_LOG&&console.log("Tap face."),this.models[e].startRandomMotion($.default.MOTION_GROUP_FLICK_HEAD,$.default.PRIORITY_NORMAL)):this.models[e].hitTestCustom("body",t,i)&&($.default.DEBUG_LOG&&console.log("Tap body. models["+e+"]"),this.models[e].startRandomMotion($.default.MOTION_GROUP_TAP_BODY,$.default.PRIORITY_NORMAL));return!0}},function(t,i,e){"use strict";function r(){}Object.defineProperty(i,"__esModule",{value:!0}),i.default=r;var o=e(2);r.prototype.loadBytes=function(t,i){var e=new XMLHttpRequest;e.open("GET",t,!0),e.responseType="arraybuffer",e.onload=function(){switch(e.status){case 200:i(e.response);break;default:console.error("Failed to load ("+e.status+") : "+t)}},e.send(null)},r.prototype.loadString=function(t){this.loadBytes(t,function(t){return t})},r.prototype.loadLive2DModel=function(t,i){var e=null;this.loadBytes(t,function(t){e=Live2DModelWebGL.loadModel(t),i(e)})},r.prototype.loadTexture=function(t,i,e,r){var n=new Image;n.crossOrigin="Anonymous",n.src=e;n.onload=function(){var e=(0,o.getContext)(),s=e.createTexture();if(!s)return console.error("Failed to generate gl texture name."),-1;0==t.isPremultipliedAlpha()&&e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,1),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_NEAREST),e.generateMipmap(e.TEXTURE_2D),t.setTexture(i,s),s=null,"function"==typeof r&&r()},n.onerror=function(){console.error("Failed to load image : "+e)}},r.prototype.jsonParseFromBytes=function(t){var i,e=new Uint8Array(t,0,3);return i=239==e[0]&&187==e[1]&&191==e[2]?String.fromCharCode.apply(null,new Uint8Array(t,3)):String.fromCharCode.apply(null,new Uint8Array(t)),JSON.parse(i)},r.prototype.log=function(t){}},function(t,i,e){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(){n.L2DBaseModel.prototype.constructor.call(this),this.modelHomeDir="",this.modelSetting=null,this.tmpMatrix=[]}Object.defineProperty(i,"__esModule",{value:!0}),i.default=o;var n=e(0),s=e(11),_=r(s),a=e(1),h=r(a),l=e(3),$=r(l);o.prototype=new n.L2DBaseModel,o.prototype.load=function(t,i,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=i.substring(0,i.lastIndexOf("/")+1),this.modelSetting=new _.default;var r=this;this.modelSetting.loadModelSetting(i,function(){var t=r.modelHomeDir+r.modelSetting.getModelFile();r.loadModelData(t,function(t){for(var i=0;i<r.modelSetting.getTextureNum();i++){if(/^https?:\/\/|^\/\//i.test(r.modelSetting.getTextureFile(i)))var o=r.modelSetting.getTextureFile(i);else var o=r.modelHomeDir+r.modelSetting.getTextureFile(i);r.loadTexture(i,o,function(){if(r.isTexLoaded){if(r.modelSetting.getExpressionNum()>0){r.expressions={};for(var t=0;t<r.modelSetting.getExpressionNum();t++){var i=r.modelSetting.getExpressionName(t),o=r.modelHomeDir+r.modelSetting.getExpressionFile(t);r.loadExpression(i,o)}}else r.expressionManager=null,r.expressions={};if(r.eyeBlink,null!=r.modelSetting.getPhysicsFile()?r.loadPhysics(r.modelHomeDir+r.modelSetting.getPhysicsFile()):r.physics=null,null!=r.modelSetting.getPoseFile()?r.loadPose(r.modelHomeDir+r.modelSetting.getPoseFile(),function(){r.pose.updateParam(r.live2DModel)}):r.pose=null,null!=r.modelSetting.getLayout()){var n=r.modelSetting.getLayout();null!=n.width&&r.modelMatrix.setWidth(n.width),null!=n.height&&r.modelMatrix.setHeight(n.height),null!=n.x&&r.modelMatrix.setX(n.x),null!=n.y&&r.modelMatrix.setY(n.y),null!=n.center_x&&r.modelMatrix.centerX(n.center_x),null!=n.center_y&&r.modelMatrix.centerY(n.center_y),null!=n.top&&r.modelMatrix.top(n.top),null!=n.bottom&&r.modelMatrix.bottom(n.bottom),null!=n.left&&r.modelMatrix.left(n.left),null!=n.right&&r.modelMatrix.right(n.right)}if(null!=r.modelSetting.getHitAreasCustom()){var s=r.modelSetting.getHitAreasCustom();null!=s.head_x&&(h.default.hit_areas_custom_head_x=s.head_x),null!=s.head_y&&(h.default.hit_areas_custom_head_y=s.head_y),null!=s.body_x&&(h.default.hit_areas_custom_body_x=s.body_x),null!=s.body_y&&(h.default.hit_areas_custom_body_y=s.body_y)}for(var t=0;t<r.modelSetting.getInitParamNum();t++)r.live2DModel.setParamFloat(r.modelSetting.getInitParamID(t),r.modelSetting.getInitParamValue(t));for(var t=0;t<r.modelSetting.getInitPartsVisibleNum();t++)r.live2DModel.setPartsOpacity(r.modelSetting.getInitPartsVisibleID(t),r.modelSetting.getInitPartsVisibleValue(t));r.live2DModel.saveParam(),r.preloadMotionGroup(h.default.MOTION_GROUP_IDLE),r.preloadMotionGroup(h.default.MOTION_GROUP_SLEEPY),r.mainMotionManager.stopAllMotions(),r.setUpdating(!1),r.setInitialized(!0),"function"==typeof e&&e()}})}})})},o.prototype.release=function(t){var i=n.Live2DFramework.getPlatformManager();t.deleteTexture(i.texture)},o.prototype.preloadMotionGroup=function(t){for(var i=this,e=0;e<this.modelSetting.getMotionNum(t);e++){var r=this.modelSetting.getMotionFile(t,e);this.loadMotion(r,this.modelHomeDir+r,function(r){r.setFadeIn(i.modelSetting.getMotionFadeIn(t,e)),r.setFadeOut(i.modelSetting.getMotionFadeOut(t,e))})}},o.prototype.update=function(){if(null==this.live2DModel)return void(h.default.DEBUG_LOG&&console.error("Failed to update."));var t=UtSystem.getUserTimeMSec()-this.startTimeMSec,i=t/1e3,e=2*i*Math.PI;if(this.mainMotionManager.isFinished()){"1"===sessionStorage.getItem("Sleepy")?this.startRandomMotion(h.default.MOTION_GROUP_SLEEPY,h.default.PRIORITY_SLEEPY):this.startRandomMotion(h.default.MOTION_GROUP_IDLE,h.default.PRIORITY_IDLE)}this.live2DModel.loadParam(),this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat("PARAM_ANGLE_X",30*this.dragX,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_Y",30*this.dragY,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_Z",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat("PARAM_BODY_ANGLE_X",10*this.dragX,1),this.live2DModel.addToParamFloat("PARAM_EYE_BALL_X",this.dragX,1),this.live2DModel.addToParamFloat("PARAM_EYE_BALL_Y",this.dragY,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_X",Number(15*Math.sin(e/6.5345)),.5),this.live2DModel.addToParamFloat("PARAM_ANGLE_Y",Number(8*Math.sin(e/3.5345)),.5),this.live2DModel.addToParamFloat("PARAM_ANGLE_Z",Number(10*Math.sin(e/5.5345)),.5),this.live2DModel.addToParamFloat("PARAM_BODY_ANGLE_X",Number(4*Math.sin(e/15.5345)),.5),this.live2DModel.setParamFloat("PARAM_BREATH",Number(.5+.5*Math.sin(e/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat("PARAM_MOUTH_OPEN_Y",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()},o.prototype.setRandomExpression=function(){var t=[];for(var i in this.expressions)t.push(i);var e=parseInt(Math.random()*t.length);this.setExpression(t[e])},o.prototype.startRandomMotion=function(t,i){var e=this.modelSetting.getMotionNum(t),r=parseInt(Math.random()*e);this.startMotion(t,r,i)},o.prototype.startMotion=function(t,i,e){var r=this.modelSetting.getMotionFile(t,i);if(null==r||""==r)return void(h.default.DEBUG_LOG&&console.error("Failed to motion."));if(e==h.default.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(e);else if(!this.mainMotionManager.reserveMotion(e))return void(h.default.DEBUG_LOG&&console.log("Motion is running."));var o,n=this;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+r,function(r){o=r,n.setFadeInFadeOut(t,i,e,o)}):(o=this.motions[t],n.setFadeInFadeOut(t,i,e,o))},o.prototype.setFadeInFadeOut=function(t,i,e,r){var o=this.modelSetting.getMotionFile(t,i);if(r.setFadeIn(this.modelSetting.getMotionFadeIn(t,i)),r.setFadeOut(this.modelSetting.getMotionFadeOut(t,i)),h.default.DEBUG_LOG&&console.log("Start motion : "+o),null==this.modelSetting.getMotionSound(t,i))this.mainMotionManager.startMotionPrio(r,e);else{var n=this.modelSetting.getMotionSound(t,i),s=document.createElement("audio");s.src=this.modelHomeDir+n,h.default.DEBUG_LOG&&console.log("Start sound : "+n),s.play(),this.mainMotionManager.startMotionPrio(r,e)}},o.prototype.setExpression=function(t){var i=this.expressions[t];h.default.DEBUG_LOG&&console.log("Expression : "+t),this.expressionManager.startMotion(i,!1)},o.prototype.draw=function(t){$.default.push(),$.default.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=$.default.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),$.default.pop()},o.prototype.hitTest=function(t,i,e){for(var r=this.modelSetting.getHitAreaNum(),o=0;o<r;o++)if(t==this.modelSetting.getHitAreaName(o)){var n=this.modelSetting.getHitAreaID(o);return this.hitTestSimple(n,i,e)}return!1},o.prototype.hitTestCustom=function(t,i,e){return"head"==t?this.hitTestSimpleCustom(h.default.hit_areas_custom_head_x,h.default.hit_areas_custom_head_y,i,e):"body"==t&&this.hitTestSimpleCustom(h.default.hit_areas_custom_body_x,h.default.hit_areas_custom_body_y,i,e)}},function(t,i,e){"use strict";function r(){this.NAME="name",this.ID="id",this.MODEL="model",this.TEXTURES="textures",this.HIT_AREAS="hit_areas",this.PHYSICS="physics",this.POSE="pose",this.EXPRESSIONS="expressions",this.MOTION_GROUPS="motions",this.SOUND="sound",this.FADE_IN="fade_in",this.FADE_OUT="fade_out",this.LAYOUT="layout",this.HIT_AREAS_CUSTOM="hit_areas_custom",this.INIT_PARAM="init_param",this.INIT_PARTS_VISIBLE="init_parts_visible",this.VALUE="val",this.FILE="file",this.json={}}Object.defineProperty(i,"__esModule",{value:!0}),i.default=r;var o=e(0);r.prototype.loadModelSetting=function(t,i){var e=this;o.Live2DFramework.getPlatformManager().loadBytes(t,function(t){var r=String.fromCharCode.apply(null,new Uint8Array(t));e.json=JSON.parse(r),i()})},r.prototype.getTextureFile=function(t){return null==this.json[this.TEXTURES]||null==this.json[this.TEXTURES][t]?null:this.json[this.TEXTURES][t]},r.prototype.getModelFile=function(){return this.json[this.MODEL]},r.prototype.getTextureNum=function(){return null==this.json[this.TEXTURES]?0:this.json[this.TEXTURES].length},r.prototype.getHitAreaNum=function(){return null==this.json[this.HIT_AREAS]?0:this.json[this.HIT_AREAS].length},r.prototype.getHitAreaID=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.ID]},r.prototype.getHitAreaName=function(t){return null==this.json[this.HIT_AREAS]||null==this.json[this.HIT_AREAS][t]?null:this.json[this.HIT_AREAS][t][this.NAME]},r.prototype.getPhysicsFile=function(){return this.json[this.PHYSICS]},r.prototype.getPoseFile=function(){return this.json[this.POSE]},r.prototype.getExpressionNum=function(){return null==this.json[this.EXPRESSIONS]?0:this.json[this.EXPRESSIONS].length},r.prototype.getExpressionFile=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.FILE]},r.prototype.getExpressionName=function(t){return null==this.json[this.EXPRESSIONS]?null:this.json[this.EXPRESSIONS][t][this.NAME]},r.prototype.getLayout=function(){return this.json[this.LAYOUT]},r.prototype.getHitAreasCustom=function(){return this.json[this.HIT_AREAS_CUSTOM]},r.prototype.getInitParamNum=function(){return null==this.json[this.INIT_PARAM]?0:this.json[this.INIT_PARAM].length},r.prototype.getMotionNum=function(t){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]?0:this.json[this.MOTION_GROUPS][t].length},r.prototype.getMotionFile=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]?null:this.json[this.MOTION_GROUPS][t][i][this.FILE]},r.prototype.getMotionSound=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.SOUND]?null:this.json[this.MOTION_GROUPS][t][i][this.SOUND]},r.prototype.getMotionFadeIn=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_IN]},r.prototype.getMotionFadeOut=function(t,i){return null==this.json[this.MOTION_GROUPS]||null==this.json[this.MOTION_GROUPS][t]||null==this.json[this.MOTION_GROUPS][t][i]||null==this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]?1e3:this.json[this.MOTION_GROUPS][t][i][this.FADE_OUT]},r.prototype.getInitParamID=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?null:this.json[this.INIT_PARAM][t][this.ID]},r.prototype.getInitParamValue=function(t){return null==this.json[this.INIT_PARAM]||null==this.json[this.INIT_PARAM][t]?NaN:this.json[this.INIT_PARAM][t][this.VALUE]},r.prototype.getInitPartsVisibleNum=function(){return null==this.json[this.INIT_PARTS_VISIBLE]?0:this.json[this.INIT_PARTS_VISIBLE].length},r.prototype.getInitPartsVisibleID=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?null:this.json[this.INIT_PARTS_VISIBLE][t][this.ID]},r.prototype.getInitPartsVisibleValue=function(t){return null==this.json[this.INIT_PARTS_VISIBLE]||null==this.json[this.INIT_PARTS_VISIBLE][t]?NaN:this.json[this.INIT_PARTS_VISIBLE][t][this.VALUE]}}]);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/live2d/js/message.js"/>
      <url>/live2d/js/message.js</url>
      
        <content type="html"><![CDATA[function renderTip(template, context) {    var tokenReg = /(\\)?\{([^\{\}\\]+)(\\)?\}/g;    return template.replace(tokenReg, function (word, slash1, token, slash2) {        if (slash1 || slash2) {            return word.replace('\\', '');        }        var variables = token.replace(/\s/g, '').split('.');        var currentObject = context;        var i, length, variable;        for (i = 0, length = variables.length; i < length; ++i) {            variable = variables[i];            currentObject = currentObject[variable];            if (currentObject === undefined || currentObject === null) return '';        }        return currentObject;    });}String.prototype.renderTip = function (context) {    return renderTip(this, context);};var re = /x/;console.log(re);re.toString = function() {    showMessage('哈哈，你打开了控制台，是想要看看我的秘密吗？', 5000);    return '';};$(document).on('copy', function (){    showMessage('你都复制了些什么呀，转载要记得加上出处哦~~', 5000);});function initTips(){    $.ajax({        cache: true,        url: `${message_Path}message.json`,        dataType: "json",        success: function (result){            $.each(result.mouseover, function (index, tips){                $(tips.selector).mouseover(function (){                    var text = tips.text;                    if(Array.isArray(tips.text)) text = tips.text[Math.floor(Math.random() * tips.text.length + 1)-1];                    text = text.renderTip({text: $(this).text()});                    showMessage(text, 3000);                });            });            $.each(result.click, function (index, tips){                $(tips.selector).click(function (){                    var text = tips.text;                    if(Array.isArray(tips.text)) text = tips.text[Math.floor(Math.random() * tips.text.length + 1)-1];                    text = text.renderTip({text: $(this).text()});                    showMessage(text, 3000);                });            });        }    });}initTips();(function (){    var text;    if(document.referrer !== ''){        var referrer = document.createElement('a');        referrer.href = document.referrer;        text = '嗨！来自 <span style="color:#0099cc;">' + referrer.hostname + '</span> 的朋友！';        var domain = referrer.hostname.split('.')[1];        if (domain == 'baidu') {            text = '嗨！ 来自 百度搜索 的朋友！<br>欢迎访问<span style="color:#0099cc;">「 ' + document.title.split(' - ')[0] + ' 」</span>';        }else if (domain == 'so') {            text = '嗨！ 来自 360搜索 的朋友！<br>欢迎访问<span style="color:#0099cc;">「 ' + document.title.split(' - ')[0] + ' 」</span>';        }else if (domain == 'google') {            text = '嗨！ 来自 谷歌搜索 的朋友！<br>欢迎访问<span style="color:#0099cc;">「 ' + document.title.split(' - ')[0] + ' 」</span>';        }    }else {        if (window.location.href == `${home_Path}`) { //主页URL判断，需要斜杠结尾            var now = (new Date()).getHours();            if (now > 23 || now <= 5) {                text = '你是夜猫子呀？这么晚还不睡觉，明天起的来嘛？';            } else if (now > 5 && now <= 7) {                text = '早上好！一日之计在于晨，美好的一天就要开始了！';            } else if (now > 7 && now <= 11) {                text = '上午好！工作顺利嘛，不要久坐，多起来走动走动哦！';            } else if (now > 11 && now <= 14) {                text = '中午了，工作了一个上午，现在是午餐时间！';            } else if (now > 14 && now <= 17) {                text = '午后很容易犯困呢，今天的运动目标完成了吗？';            } else if (now > 17 && now <= 19) {                text = '傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红~~';            } else if (now > 19 && now <= 21) {                text = '晚上好，今天过得怎么样？';            } else if (now > 21 && now <= 23) {                text = '已经这么晚了呀，早点休息吧，晚安~~';            } else {                text = '嗨~ 快来逗我玩吧！';            }        }else {            text = '欢迎阅读<span style="color:#0099cc;">「 ' + document.title.split(' - ')[0] + ' 」</span>';        }    }    showMessage(text, 12000);})();window.setInterval(showHitokoto,30000);function showHitokoto(){    $.getJSON('https://v1.hitokoto.cn/',function(result){        showMessage(result.hitokoto, 5000);    });}function showMessage(text, timeout){    if(Array.isArray(text)) text = text[Math.floor(Math.random() * text.length + 1)-1];    //console.log('showMessage', text);    $('.message').stop();    $('.message').html(text).fadeTo(200, 1);    if (timeout === null) timeout = 5000;    hideMessage(timeout);}function hideMessage(timeout){    $('.message').stop().css('opacity',1);    if (timeout === null) timeout = 5000;    $('.message').delay(timeout).fadeTo(200, 0);}function initLive2d (){    $('.hide-button').fadeOut(0).on('click', () => {        $('#landlord').css('display', 'none')    })    $('#landlord').hover(() => {        $('.hide-button').fadeIn(600)    }, () => {        $('.hide-button').fadeOut(600)    })}initLive2d ();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/live2d/model/tia/model.json"/>
      <url>/live2d/model/tia/model.json</url>
      
        <content type="html"><![CDATA[{"version":"1.0.0","model":"model.moc","textures":["textures/default-costume.png"],"layout":{"center_x":0,"center_y":-0.05,"width":2},"hit_areas_custom":{"head_x":[-0.35,0.6],"head_y":[0.19,-0.2],"body_x":[-0.3,-0.25],"body_y":[0.3,-0.9]},"motions":{"idle":[{"file":"motions/WakeUp.mtn"},{"file":"motions/Breath1.mtn"},{"file":"motions/Breath2.mtn"},{"file":"motions/Breath3.mtn"},{"file":"motions/Breath5.mtn"},{"file":"motions/Breath7.mtn"},{"file":"motions/Breath8.mtn"}],"sleepy":[{"file":"motions/Sleeping.mtn"}],"flick_head":[{"file":"motions/Touch Dere1.mtn"},{"file":"motions/Touch Dere2.mtn"},{"file":"motions/Touch Dere3.mtn"},{"file":"motions/Touch Dere4.mtn"},{"file":"motions/Touch Dere5.mtn"},{"file":"motions/Touch Dere6.mtn"}],"tap_body":[{"file":"motions/Touch1.mtn"},{"file":"motions/Touch2.mtn"},{"file":"motions/Touch3.mtn"},{"file":"motions/Touch4.mtn"},{"file":"motions/Touch5.mtn"},{"file":"motions/Touch6.mtn"}],"":[{"file":"motions/Breath1.mtn"},{"file":"motions/Breath2.mtn"},{"file":"motions/Breath3.mtn"},{"file":"motions/Breath4.mtn"},{"file":"motions/Breath5.mtn"},{"file":"motions/Breath6.mtn"},{"file":"motions/Breath7.mtn"},{"file":"motions/Breath8.mtn"},{"file":"motions/Breath9.mtn"},{"file":"motions/Fail.mtn"},{"file":"motions/Sleeping.mtn"},{"file":"motions/Success.mtn"},{"file":"motions/Sukebei1.mtn"},{"file":"motions/Sukebei2.mtn"},{"file":"motions/Sukebei3.mtn"},{"file":"motions/Touch Dere1.mtn"},{"file":"motions/Touch Dere2.mtn"},{"file":"motions/Touch Dere3.mtn"},{"file":"motions/Touch Dere4.mtn"},{"file":"motions/Touch Dere5.mtn"},{"file":"motions/Touch Dere6.mtn"},{"file":"motions/Touch1.mtn"},{"file":"motions/Touch2.mtn"},{"file":"motions/Touch3.mtn"},{"file":"motions/Touch4.mtn"},{"file":"motions/Touch5.mtn"},{"file":"motions/Touch6.mtn"},{"file":"motions/WakeUp.mtn"}]}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>类别</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
  
</search>
